{"C:\\Users\\Administrator\\Desktop\\Full-Stack Projects\\Small-Blog\\API\\src\\test\\audit\\auditActions.spec.ts":{"path":"C:\\Users\\Administrator\\Desktop\\Full-Stack Projects\\Small-Blog\\API\\src\\test\\audit\\auditActions.spec.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":15},"end":{"line":6,"column":30}},"4":{"start":{"line":7,"column":22},"end":{"line":7,"column":73}},"5":{"start":{"line":8,"column":0},"end":{"line":13,"column":3}},"6":{"start":{"line":9,"column":4},"end":{"line":12,"column":7}},"7":{"start":{"line":10,"column":8},"end":{"line":10,"column":75}},"8":{"start":{"line":11,"column":8},"end":{"line":11,"column":79}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":8,"column":26},"end":{"line":8,"column":27}},"loc":{"start":{"line":8,"column":32},"end":{"line":13,"column":1}},"line":8},"2":{"name":"(anonymous_2)","decl":{"start":{"line":9,"column":31},"end":{"line":9,"column":32}},"loc":{"start":{"line":9,"column":37},"end":{"line":12,"column":5}},"line":9}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1},"f":{"0":1,"1":1,"2":1},"b":{"0":[1,1,1],"1":[1,0],"2":[1,1]},"inputSourceMap":{"version":3,"file":"C:/Users/Administrator/Desktop/Full-Stack Projects/Small-Blog/API/src/test/audit/auditActions.spec.ts","sources":["C:/Users/Administrator/Desktop/Full-Stack Projects/Small-Blog/API/src/test/audit/auditActions.spec.ts"],"names":[],"mappings":";;;;;AAAA,+BAA8B;AAC9B,0EAAmD;AAEnD,QAAQ,CAAC,eAAe,EAAE,GAAG,EAAE;IAC7B,EAAE,CAAC,sBAAsB,EAAE,GAAG,EAAE;QAC9B,IAAA,aAAM,EAAC,qBAAY,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;QAC9C,IAAA,aAAM,EAAC,qBAAY,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,WAAW,CAAC,CAAC;IACpD,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["import { expect } from 'chai';\r\nimport auditActions from '../../audit/auditAction';\r\n\r\ndescribe('Audit actions', () => {\r\n  it('Should have 1 action', () => {\r\n    expect(auditActions).to.have.key('save_user');\r\n    expect(auditActions.save_user).to.eq('SAVE_USER');\r\n  });\r\n});\r\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"9f0100456c55f5399f987c9f1a73bda725b47b04","contentHash":"01b12f165a8b2b5a7695a0d09f0878576607c3b37efffce34bcb2ebb78b82183"},"C:\\Users\\Administrator\\Desktop\\Full-Stack Projects\\Small-Blog\\API\\src\\audit\\auditAction.ts":{"path":"C:\\Users\\Administrator\\Desktop\\Full-Stack Projects\\Small-Blog\\API\\src\\audit\\auditAction.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":21},"end":{"line":5,"column":1}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":31}}},"fnMap":{},"branchMap":{},"s":{"0":1,"1":1,"2":1},"f":{},"b":{},"inputSourceMap":{"version":3,"file":"C:/Users/Administrator/Desktop/Full-Stack Projects/Small-Blog/API/src/audit/auditAction.ts","sources":["C:/Users/Administrator/Desktop/Full-Stack Projects/Small-Blog/API/src/audit/auditAction.ts"],"names":[],"mappings":";;AAAA,MAAM,YAAY,GAAG;IACpB,SAAS,EAAE,WAAW;CACtB,CAAC;AAEF,kBAAe,YAAY,CAAC","sourcesContent":["const auditActions = {\r\n\tsave_user: 'SAVE_USER',\r\n};\r\n\r\nexport default auditActions;\r\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"765d3d337c2f66cff352b1a5ba3790e22ec580cd","contentHash":"bde4a8bf167b9886fd91eb97b0cf0dbaca5fd0bb84052c56a05bc01cdfee3cf7"},"C:\\Users\\Administrator\\Desktop\\Full-Stack Projects\\Small-Blog\\API\\src\\test\\handler\\1-user.spec.ts":{"path":"C:\\Users\\Administrator\\Desktop\\Full-Stack Projects\\Small-Blog\\API\\src\\test\\handler\\1-user.spec.ts","statementMap":{"0":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"1":{"start":{"line":3,"column":28},"end":{"line":3,"column":110}},"2":{"start":{"line":3,"column":91},"end":{"line":3,"column":106}},"3":{"start":{"line":4,"column":4},"end":{"line":9,"column":7}},"4":{"start":{"line":5,"column":36},"end":{"line":5,"column":97}},"5":{"start":{"line":5,"column":42},"end":{"line":5,"column":70}},"6":{"start":{"line":5,"column":85},"end":{"line":5,"column":95}},"7":{"start":{"line":6,"column":35},"end":{"line":6,"column":100}},"8":{"start":{"line":6,"column":41},"end":{"line":6,"column":73}},"9":{"start":{"line":6,"column":88},"end":{"line":6,"column":98}},"10":{"start":{"line":7,"column":32},"end":{"line":7,"column":116}},"11":{"start":{"line":8,"column":8},"end":{"line":8,"column":78}},"12":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"13":{"start":{"line":12,"column":4},"end":{"line":12,"column":62}},"14":{"start":{"line":14,"column":0},"end":{"line":14,"column":62}},"15":{"start":{"line":15,"column":15},"end":{"line":15,"column":30}},"16":{"start":{"line":16,"column":17},"end":{"line":16,"column":57}},"17":{"start":{"line":17,"column":20},"end":{"line":17,"column":57}},"18":{"start":{"line":18,"column":15},"end":{"line":18,"column":42}},"19":{"start":{"line":19,"column":14},"end":{"line":19,"column":31}},"20":{"start":{"line":20,"column":0},"end":{"line":175,"column":3}},"21":{"start":{"line":22,"column":4},"end":{"line":66,"column":7}},"22":{"start":{"line":23,"column":8},"end":{"line":37,"column":12}},"23":{"start":{"line":23,"column":43},"end":{"line":37,"column":10}},"24":{"start":{"line":24,"column":25},"end":{"line":29,"column":13}},"25":{"start":{"line":30,"column":29},"end":{"line":33,"column":50}},"26":{"start":{"line":34,"column":12},"end":{"line":34,"column":56}},"27":{"start":{"line":35,"column":12},"end":{"line":35,"column":73}},"28":{"start":{"line":36,"column":12},"end":{"line":36,"column":39}},"29":{"start":{"line":38,"column":8},"end":{"line":51,"column":12}},"30":{"start":{"line":38,"column":62},"end":{"line":51,"column":10}},"31":{"start":{"line":39,"column":25},"end":{"line":44,"column":13}},"32":{"start":{"line":45,"column":29},"end":{"line":48,"column":50}},"33":{"start":{"line":49,"column":12},"end":{"line":49,"column":56}},"34":{"start":{"line":50,"column":12},"end":{"line":50,"column":99}},"35":{"start":{"line":52,"column":8},"end":{"line":65,"column":12}},"36":{"start":{"line":52,"column":50},"end":{"line":65,"column":10}},"37":{"start":{"line":53,"column":25},"end":{"line":58,"column":13}},"38":{"start":{"line":59,"column":29},"end":{"line":62,"column":50}},"39":{"start":{"line":63,"column":12},"end":{"line":63,"column":56}},"40":{"start":{"line":64,"column":12},"end":{"line":64,"column":93}},"41":{"start":{"line":67,"column":4},"end":{"line":109,"column":7}},"42":{"start":{"line":69,"column":8},"end":{"line":80,"column":12}},"43":{"start":{"line":69,"column":66},"end":{"line":80,"column":10}},"44":{"start":{"line":70,"column":25},"end":{"line":73,"column":13}},"45":{"start":{"line":74,"column":29},"end":{"line":77,"column":50}},"46":{"start":{"line":78,"column":12},"end":{"line":78,"column":56}},"47":{"start":{"line":79,"column":12},"end":{"line":79,"column":85}},"48":{"start":{"line":82,"column":8},"end":{"line":96,"column":12}},"49":{"start":{"line":82,"column":50},"end":{"line":96,"column":10}},"50":{"start":{"line":83,"column":25},"end":{"line":86,"column":13}},"51":{"start":{"line":87,"column":12},"end":{"line":87,"column":40}},"52":{"start":{"line":88,"column":29},"end":{"line":91,"column":50}},"53":{"start":{"line":92,"column":12},"end":{"line":92,"column":56}},"54":{"start":{"line":93,"column":12},"end":{"line":93,"column":64}},"55":{"start":{"line":94,"column":12},"end":{"line":94,"column":84}},"56":{"start":{"line":95,"column":12},"end":{"line":95,"column":46}},"57":{"start":{"line":97,"column":8},"end":{"line":108,"column":12}},"58":{"start":{"line":97,"column":57},"end":{"line":108,"column":10}},"59":{"start":{"line":98,"column":25},"end":{"line":101,"column":13}},"60":{"start":{"line":102,"column":29},"end":{"line":105,"column":50}},"61":{"start":{"line":106,"column":12},"end":{"line":106,"column":56}},"62":{"start":{"line":107,"column":12},"end":{"line":107,"column":84}},"63":{"start":{"line":110,"column":4},"end":{"line":127,"column":7}},"64":{"start":{"line":111,"column":8},"end":{"line":118,"column":12}},"65":{"start":{"line":111,"column":82},"end":{"line":118,"column":10}},"66":{"start":{"line":112,"column":29},"end":{"line":115,"column":50}},"67":{"start":{"line":116,"column":12},"end":{"line":116,"column":56}},"68":{"start":{"line":117,"column":12},"end":{"line":117,"column":85}},"69":{"start":{"line":119,"column":8},"end":{"line":126,"column":12}},"70":{"start":{"line":119,"column":77},"end":{"line":126,"column":10}},"71":{"start":{"line":120,"column":29},"end":{"line":123,"column":50}},"72":{"start":{"line":124,"column":12},"end":{"line":124,"column":56}},"73":{"start":{"line":125,"column":12},"end":{"line":125,"column":79}},"74":{"start":{"line":128,"column":4},"end":{"line":139,"column":7}},"75":{"start":{"line":129,"column":8},"end":{"line":138,"column":12}},"76":{"start":{"line":129,"column":72},"end":{"line":138,"column":10}},"77":{"start":{"line":131,"column":29},"end":{"line":135,"column":50}},"78":{"start":{"line":136,"column":12},"end":{"line":136,"column":56}},"79":{"start":{"line":137,"column":12},"end":{"line":137,"column":101}},"80":{"start":{"line":140,"column":4},"end":{"line":149,"column":7}},"81":{"start":{"line":141,"column":8},"end":{"line":148,"column":12}},"82":{"start":{"line":141,"column":78},"end":{"line":148,"column":10}},"83":{"start":{"line":142,"column":29},"end":{"line":145,"column":30}},"84":{"start":{"line":146,"column":12},"end":{"line":146,"column":56}},"85":{"start":{"line":147,"column":12},"end":{"line":147,"column":134}},"86":{"start":{"line":150,"column":4},"end":{"line":174,"column":7}},"87":{"start":{"line":151,"column":8},"end":{"line":158,"column":12}},"88":{"start":{"line":151,"column":74},"end":{"line":158,"column":10}},"89":{"start":{"line":152,"column":29},"end":{"line":155,"column":47}},"90":{"start":{"line":156,"column":12},"end":{"line":156,"column":56}},"91":{"start":{"line":157,"column":12},"end":{"line":157,"column":78}},"92":{"start":{"line":159,"column":8},"end":{"line":165,"column":12}},"93":{"start":{"line":159,"column":72},"end":{"line":165,"column":10}},"94":{"start":{"line":160,"column":29},"end":{"line":162,"column":47}},"95":{"start":{"line":163,"column":12},"end":{"line":163,"column":56}},"96":{"start":{"line":164,"column":12},"end":{"line":164,"column":80}},"97":{"start":{"line":166,"column":8},"end":{"line":173,"column":12}},"98":{"start":{"line":166,"column":64},"end":{"line":173,"column":10}},"99":{"start":{"line":167,"column":29},"end":{"line":170,"column":47}},"100":{"start":{"line":171,"column":12},"end":{"line":171,"column":56}},"101":{"start":{"line":172,"column":12},"end":{"line":172,"column":85}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":44},"end":{"line":2,"column":45}},"loc":{"start":{"line":2,"column":89},"end":{"line":10,"column":1}},"line":2},"1":{"name":"adopt","decl":{"start":{"line":3,"column":13},"end":{"line":3,"column":18}},"loc":{"start":{"line":3,"column":26},"end":{"line":3,"column":112}},"line":3},"2":{"name":"(anonymous_2)","decl":{"start":{"line":3,"column":70},"end":{"line":3,"column":71}},"loc":{"start":{"line":3,"column":89},"end":{"line":3,"column":108}},"line":3},"3":{"name":"(anonymous_3)","decl":{"start":{"line":4,"column":36},"end":{"line":4,"column":37}},"loc":{"start":{"line":4,"column":63},"end":{"line":9,"column":5}},"line":4},"4":{"name":"fulfilled","decl":{"start":{"line":5,"column":17},"end":{"line":5,"column":26}},"loc":{"start":{"line":5,"column":34},"end":{"line":5,"column":99}},"line":5},"5":{"name":"rejected","decl":{"start":{"line":6,"column":17},"end":{"line":6,"column":25}},"loc":{"start":{"line":6,"column":33},"end":{"line":6,"column":102}},"line":6},"6":{"name":"step","decl":{"start":{"line":7,"column":17},"end":{"line":7,"column":21}},"loc":{"start":{"line":7,"column":30},"end":{"line":7,"column":118}},"line":7},"7":{"name":"(anonymous_7)","decl":{"start":{"line":11,"column":56},"end":{"line":11,"column":57}},"loc":{"start":{"line":11,"column":71},"end":{"line":13,"column":1}},"line":11},"8":{"name":"(anonymous_8)","decl":{"start":{"line":20,"column":25},"end":{"line":20,"column":26}},"loc":{"start":{"line":20,"column":31},"end":{"line":175,"column":1}},"line":20},"9":{"name":"(anonymous_9)","decl":{"start":{"line":22,"column":35},"end":{"line":22,"column":36}},"loc":{"start":{"line":22,"column":41},"end":{"line":66,"column":5}},"line":22},"10":{"name":"(anonymous_10)","decl":{"start":{"line":23,"column":37},"end":{"line":23,"column":38}},"loc":{"start":{"line":23,"column":43},"end":{"line":37,"column":10}},"line":23},"11":{"name":"(anonymous_11)","decl":{"start":{"line":23,"column":77},"end":{"line":23,"column":78}},"loc":{"start":{"line":23,"column":90},"end":{"line":37,"column":9}},"line":23},"12":{"name":"(anonymous_12)","decl":{"start":{"line":38,"column":56},"end":{"line":38,"column":57}},"loc":{"start":{"line":38,"column":62},"end":{"line":51,"column":10}},"line":38},"13":{"name":"(anonymous_13)","decl":{"start":{"line":38,"column":96},"end":{"line":38,"column":97}},"loc":{"start":{"line":38,"column":109},"end":{"line":51,"column":9}},"line":38},"14":{"name":"(anonymous_14)","decl":{"start":{"line":52,"column":44},"end":{"line":52,"column":45}},"loc":{"start":{"line":52,"column":50},"end":{"line":65,"column":10}},"line":52},"15":{"name":"(anonymous_15)","decl":{"start":{"line":52,"column":84},"end":{"line":52,"column":85}},"loc":{"start":{"line":52,"column":97},"end":{"line":65,"column":9}},"line":52},"16":{"name":"(anonymous_16)","decl":{"start":{"line":67,"column":34},"end":{"line":67,"column":35}},"loc":{"start":{"line":67,"column":40},"end":{"line":109,"column":5}},"line":67},"17":{"name":"(anonymous_17)","decl":{"start":{"line":69,"column":60},"end":{"line":69,"column":61}},"loc":{"start":{"line":69,"column":66},"end":{"line":80,"column":10}},"line":69},"18":{"name":"(anonymous_18)","decl":{"start":{"line":69,"column":100},"end":{"line":69,"column":101}},"loc":{"start":{"line":69,"column":113},"end":{"line":80,"column":9}},"line":69},"19":{"name":"(anonymous_19)","decl":{"start":{"line":82,"column":44},"end":{"line":82,"column":45}},"loc":{"start":{"line":82,"column":50},"end":{"line":96,"column":10}},"line":82},"20":{"name":"(anonymous_20)","decl":{"start":{"line":82,"column":84},"end":{"line":82,"column":85}},"loc":{"start":{"line":82,"column":97},"end":{"line":96,"column":9}},"line":82},"21":{"name":"(anonymous_21)","decl":{"start":{"line":97,"column":51},"end":{"line":97,"column":52}},"loc":{"start":{"line":97,"column":57},"end":{"line":108,"column":10}},"line":97},"22":{"name":"(anonymous_22)","decl":{"start":{"line":97,"column":91},"end":{"line":97,"column":92}},"loc":{"start":{"line":97,"column":104},"end":{"line":108,"column":9}},"line":97},"23":{"name":"(anonymous_23)","decl":{"start":{"line":110,"column":44},"end":{"line":110,"column":45}},"loc":{"start":{"line":110,"column":50},"end":{"line":127,"column":5}},"line":110},"24":{"name":"(anonymous_24)","decl":{"start":{"line":111,"column":76},"end":{"line":111,"column":77}},"loc":{"start":{"line":111,"column":82},"end":{"line":118,"column":10}},"line":111},"25":{"name":"(anonymous_25)","decl":{"start":{"line":111,"column":116},"end":{"line":111,"column":117}},"loc":{"start":{"line":111,"column":129},"end":{"line":118,"column":9}},"line":111},"26":{"name":"(anonymous_26)","decl":{"start":{"line":119,"column":71},"end":{"line":119,"column":72}},"loc":{"start":{"line":119,"column":77},"end":{"line":126,"column":10}},"line":119},"27":{"name":"(anonymous_27)","decl":{"start":{"line":119,"column":111},"end":{"line":119,"column":112}},"loc":{"start":{"line":119,"column":124},"end":{"line":126,"column":9}},"line":119},"28":{"name":"(anonymous_28)","decl":{"start":{"line":128,"column":40},"end":{"line":128,"column":41}},"loc":{"start":{"line":128,"column":46},"end":{"line":139,"column":5}},"line":128},"29":{"name":"(anonymous_29)","decl":{"start":{"line":129,"column":66},"end":{"line":129,"column":67}},"loc":{"start":{"line":129,"column":72},"end":{"line":138,"column":10}},"line":129},"30":{"name":"(anonymous_30)","decl":{"start":{"line":129,"column":106},"end":{"line":129,"column":107}},"loc":{"start":{"line":129,"column":119},"end":{"line":138,"column":9}},"line":129},"31":{"name":"(anonymous_31)","decl":{"start":{"line":140,"column":43},"end":{"line":140,"column":44}},"loc":{"start":{"line":140,"column":49},"end":{"line":149,"column":5}},"line":140},"32":{"name":"(anonymous_32)","decl":{"start":{"line":141,"column":72},"end":{"line":141,"column":73}},"loc":{"start":{"line":141,"column":78},"end":{"line":148,"column":10}},"line":141},"33":{"name":"(anonymous_33)","decl":{"start":{"line":141,"column":112},"end":{"line":141,"column":113}},"loc":{"start":{"line":141,"column":125},"end":{"line":148,"column":9}},"line":141},"34":{"name":"(anonymous_34)","decl":{"start":{"line":150,"column":35},"end":{"line":150,"column":36}},"loc":{"start":{"line":150,"column":41},"end":{"line":174,"column":5}},"line":150},"35":{"name":"(anonymous_35)","decl":{"start":{"line":151,"column":68},"end":{"line":151,"column":69}},"loc":{"start":{"line":151,"column":74},"end":{"line":158,"column":10}},"line":151},"36":{"name":"(anonymous_36)","decl":{"start":{"line":151,"column":108},"end":{"line":151,"column":109}},"loc":{"start":{"line":151,"column":121},"end":{"line":158,"column":9}},"line":151},"37":{"name":"(anonymous_37)","decl":{"start":{"line":159,"column":66},"end":{"line":159,"column":67}},"loc":{"start":{"line":159,"column":72},"end":{"line":165,"column":10}},"line":159},"38":{"name":"(anonymous_38)","decl":{"start":{"line":159,"column":106},"end":{"line":159,"column":107}},"loc":{"start":{"line":159,"column":119},"end":{"line":165,"column":9}},"line":159},"39":{"name":"(anonymous_39)","decl":{"start":{"line":166,"column":58},"end":{"line":166,"column":59}},"loc":{"start":{"line":166,"column":64},"end":{"line":173,"column":10}},"line":166},"40":{"name":"(anonymous_40)","decl":{"start":{"line":166,"column":98},"end":{"line":166,"column":99}},"loc":{"start":{"line":166,"column":111},"end":{"line":173,"column":9}},"line":166}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":17},"end":{"line":2,"column":21}},{"start":{"line":2,"column":25},"end":{"line":2,"column":39}},{"start":{"line":2,"column":44},"end":{"line":10,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":35},"end":{"line":3,"column":109}},"type":"cond-expr","locations":[{"start":{"line":3,"column":56},"end":{"line":3,"column":61}},{"start":{"line":3,"column":64},"end":{"line":3,"column":109}}],"line":3},"2":{"loc":{"start":{"line":4,"column":16},"end":{"line":4,"column":34}},"type":"binary-expr","locations":[{"start":{"line":4,"column":16},"end":{"line":4,"column":17}},{"start":{"line":4,"column":22},"end":{"line":4,"column":33}}],"line":4},"3":{"loc":{"start":{"line":7,"column":32},"end":{"line":7,"column":115}},"type":"cond-expr","locations":[{"start":{"line":7,"column":46},"end":{"line":7,"column":67}},{"start":{"line":7,"column":70},"end":{"line":7,"column":115}}],"line":7},"4":{"loc":{"start":{"line":8,"column":51},"end":{"line":8,"column":67}},"type":"binary-expr","locations":[{"start":{"line":8,"column":51},"end":{"line":8,"column":61}},{"start":{"line":8,"column":65},"end":{"line":8,"column":67}}],"line":8},"5":{"loc":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"type":"binary-expr","locations":[{"start":{"line":11,"column":23},"end":{"line":11,"column":27}},{"start":{"line":11,"column":31},"end":{"line":11,"column":51}},{"start":{"line":11,"column":56},"end":{"line":13,"column":1}}],"line":11},"6":{"loc":{"start":{"line":12,"column":11},"end":{"line":12,"column":61}},"type":"cond-expr","locations":[{"start":{"line":12,"column":37},"end":{"line":12,"column":40}},{"start":{"line":12,"column":43},"end":{"line":12,"column":61}}],"line":12},"7":{"loc":{"start":{"line":12,"column":12},"end":{"line":12,"column":33}},"type":"binary-expr","locations":[{"start":{"line":12,"column":12},"end":{"line":12,"column":15}},{"start":{"line":12,"column":19},"end":{"line":12,"column":33}}],"line":12}},"s":{"0":1,"1":14,"2":13,"3":13,"4":14,"5":14,"6":0,"7":0,"8":0,"9":0,"10":27,"11":13,"12":1,"13":2,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":1,"40":1,"41":1,"42":1,"43":1,"44":1,"45":1,"46":1,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":1,"58":1,"59":1,"60":1,"61":1,"62":1,"63":1,"64":1,"65":1,"66":1,"67":1,"68":1,"69":1,"70":1,"71":1,"72":1,"73":1,"74":1,"75":1,"76":1,"77":1,"78":1,"79":1,"80":1,"81":1,"82":1,"83":1,"84":1,"85":1,"86":1,"87":1,"88":1,"89":1,"90":1,"91":1,"92":1,"93":1,"94":1,"95":1,"96":1,"97":1,"98":1,"99":1,"100":1,"101":1},"f":{"0":13,"1":14,"2":13,"3":13,"4":14,"5":0,"6":27,"7":2,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":1,"40":1},"b":{"0":[1,1,1],"1":[1,13],"2":[13,13],"3":[13,14],"4":[13,13],"5":[1,1,1],"6":[1,1],"7":[2,2]},"inputSourceMap":{"version":3,"file":"C:/Users/Administrator/Desktop/Full-Stack Projects/Small-Blog/API/src/test/handler/1-user.spec.ts","sources":["C:/Users/Administrator/Desktop/Full-Stack Projects/Small-Blog/API/src/test/handler/1-user.spec.ts"],"names":[],"mappings":"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","sourcesContent":["import { expect } from 'chai';\r\nimport app from '../../server';\r\nimport request from 'supertest';\r\nimport { User } from '../../model/user';\r\n\r\nconst store = new User();\r\n\r\ndescribe('User handler', () => {\r\n  let id: string, token: string;\r\n  describe('POST /users/signup', () => {\r\n    it('Should create new user', async () => {\r\n      const user = {\r\n        email: 'test@test.com',\r\n        password: '123456',\r\n        confirmPassword: '123456',\r\n        name: 'Bassel',\r\n      };\r\n      const response = await request(app)\r\n        .post('/users/signup')\r\n        .send(user)\r\n        .set('Accept', 'application/json');\r\n      expect(response.status).eq(201);\r\n      expect(response.body.message).eq('user created');\r\n\r\n      id = response.body.user.id;\r\n    });\r\n\r\n    it('Should throw an error name must be unique', async () => {\r\n      const user = {\r\n        email: 'test2@test.com',\r\n        password: '123456',\r\n        confirmPassword: '123456',\r\n        name: 'Bassel',\r\n      };\r\n      const response = await request(app)\r\n        .post('/users/signup')\r\n        .send(user)\r\n        .set('Accept', 'application/json');\r\n      expect(response.status).eq(422);\r\n      expect(response.body.errors.msg).eq(\r\n        'E-mail and Username must be unique.'\r\n      );\r\n    });\r\n\r\n    it('Should throw validation error', async () => {\r\n      const user = {\r\n        email: 'test10',\r\n        password: '123456',\r\n        confirmPassword: '123456',\r\n        name: 'Bassel10',\r\n      };\r\n      const response = await request(app)\r\n        .post('/users/signup')\r\n        .send(user)\r\n        .set('Accept', 'application/json');\r\n      expect(response.status).eq(422);\r\n      expect(response.body.errors.msg).eq('Please provide a valid email.');\r\n    });\r\n  });\r\n\r\n  describe('POST /users/login', () => {\r\n    // HERE  before confirming email\r\n    it('Should reject login before email confirmation', async () => {\r\n      const user = {\r\n        email: 'test@test.com',\r\n        password: '123456',\r\n      };\r\n      const response = await request(app)\r\n        .post('/users/login')\r\n        .send(user)\r\n        .set('Accept', 'application/json');\r\n      expect(response.status).eq(401);\r\n      expect(response.body.error).eq('Please confirm your email.');\r\n    });\r\n\r\n    // HERE  after confirming email\r\n    it('Should login user sucessfully', async () => {\r\n      const user = {\r\n        email: 'test@test.com',\r\n        password: '123456',\r\n      };\r\n      await store.confirmUser(id);\r\n\r\n      const response = await request(app)\r\n        .post('/users/login')\r\n        .send(user)\r\n        .set('Accept', 'application/json');\r\n      expect(response.status).eq(200);\r\n      expect(response.body.name).eq('Bassel');\r\n      expect(response.headers['set-cookie'][0]).to.be.a('string');\r\n      token = response.body.accessToken;\r\n    });\r\n\r\n    it('Should reject login, invalid account', async () => {\r\n      const user = {\r\n        email: 'test@test.com',\r\n        password: '000000',\r\n      };\r\n      const response = await request(app)\r\n        .post('/users/login')\r\n        .send(user)\r\n        .set('Accept', 'application/json');\r\n      expect(response.status).eq(404);\r\n      expect(response.body.error).eq('Invalid email or password');\r\n    });\r\n  });\r\n\r\n  describe('POST /users/forgot-password', () => {\r\n    it('Should confirm an E-mail is sent when giving registered email', async () => {\r\n      const response = await request(app)\r\n        .post('/users/forgot-password')\r\n        .send({ email: 'test@test.com' })\r\n        .set('Accept', 'application/json');\r\n      expect(response.status).eq(200);\r\n      expect(response.body.message).eq('An E-mail has been sent.');\r\n    });\r\n\r\n    it('Should deny that the user exists if email not registered', async () => {\r\n      const response = await request(app)\r\n        .post('/users/forgot-password')\r\n        .send({ email: 'notfound@test.com' })\r\n        .set('Accept', 'application/json');\r\n      expect(response.status).eq(404);\r\n      expect(response.body.error).eq(\"User doesn't exist..\");\r\n    });\r\n  });\r\n\r\n  describe('POST /users/check-reset', () => {\r\n    it('Should give an error if the reset code is not valid', async () => {\r\n      // IMPORTANT  the code is only 6 digits\r\n      const response = await request(app)\r\n        .post('/users/check-reset')\r\n        .send({ code: 111111 })\r\n        .query({ id, token: 'dummy-token' })\r\n        .set('Accept', 'application/json');\r\n      expect(response.status).eq(404);\r\n      expect(response.body.error).eq(\r\n        'Expired password reset token or wrong code'\r\n      );\r\n    });\r\n  });\r\n\r\n  describe('POST /users/reset-password', () => {\r\n    it('Should give an error, when the reset code is not verified', async () => {\r\n      const response = await request(app)\r\n        .post('/users/reset-password')\r\n        .send({ password: '123456', confirmPassword: '123456' })\r\n        .query({ id });\r\n      expect(response.status).eq(403);\r\n      expect(response.body.error).eq(\r\n        'Password reset code is not verified you are not allowed to change password.'\r\n      );\r\n    });\r\n  });\r\n\r\n  describe('GET /users/:author', () => {\r\n    it('Should return user info, if jwt provided and username', async () => {\r\n      const response = await request(app)\r\n        .get('/users/Bassel')\r\n        .set('Authorization', 'Bearer ' + token)\r\n        .expect('Content-Type', /json/);\r\n      expect(response.status).eq(200);\r\n      expect(response.body.message).eq('retrived the user');\r\n    });\r\n\r\n    it('Should prevent from getting user if there is no jwt', async () => {\r\n      const response = await request(app)\r\n        .get('/users/Bassel')\r\n        .expect('Content-Type', /json/);\r\n      expect(response.status).eq(403);\r\n      expect(response.body.error).eq('No token was provided');\r\n    });\r\n\r\n    it(\"Should not get user cause it doesn't exists\", async () => {\r\n      const response = await request(app)\r\n        .get('/users/Bassel2')\r\n        .set('Authorization', 'Bearer ' + token)\r\n        .expect('Content-Type', /json/);\r\n      expect(response.status).eq(404);\r\n      expect(response.body.error).eq(\"couldn't find user Bassel2\");\r\n    });\r\n  });\r\n});\r\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"cd07f4284afc4b02b94be25279b85a20110868d7","contentHash":"ee5eb6a2dd01e05f256c4977b6d98e6078bc00609a5f3a11fc6aedabf7aea965"},"C:\\Users\\Administrator\\Desktop\\Full-Stack Projects\\Small-Blog\\API\\src\\server.ts":{"path":"C:\\Users\\Administrator\\Desktop\\Full-Stack Projects\\Small-Blog\\API\\src\\server.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":18},"end":{"line":6,"column":53}},"4":{"start":{"line":7,"column":15},"end":{"line":7,"column":47}},"5":{"start":{"line":8,"column":24},"end":{"line":8,"column":65}},"6":{"start":{"line":9,"column":29},"end":{"line":9,"column":75}},"7":{"start":{"line":10,"column":17},"end":{"line":10,"column":51}},"8":{"start":{"line":11,"column":17},"end":{"line":11,"column":51}},"9":{"start":{"line":12,"column":23},"end":{"line":12,"column":66}},"10":{"start":{"line":13,"column":19},"end":{"line":13,"column":63}},"11":{"start":{"line":14,"column":15},"end":{"line":14,"column":57}},"12":{"start":{"line":15,"column":15},"end":{"line":15,"column":57}},"13":{"start":{"line":16,"column":18},"end":{"line":16,"column":63}},"14":{"start":{"line":17,"column":23},"end":{"line":17,"column":73}},"15":{"start":{"line":18,"column":17},"end":{"line":18,"column":61}},"16":{"start":{"line":19,"column":0},"end":{"line":19,"column":26}},"17":{"start":{"line":20,"column":12},"end":{"line":20,"column":36}},"18":{"start":{"line":21,"column":13},"end":{"line":21,"column":37}},"19":{"start":{"line":22,"column":0},"end":{"line":22,"column":85}},"20":{"start":{"line":23,"column":0},"end":{"line":23,"column":38}},"21":{"start":{"line":24,"column":0},"end":{"line":24,"column":65}},"22":{"start":{"line":25,"column":0},"end":{"line":25,"column":34}},"23":{"start":{"line":26,"column":0},"end":{"line":26,"column":57}},"24":{"start":{"line":27,"column":0},"end":{"line":27,"column":117}},"25":{"start":{"line":28,"column":0},"end":{"line":28,"column":25}},"26":{"start":{"line":29,"column":0},"end":{"line":29,"column":25}},"27":{"start":{"line":30,"column":0},"end":{"line":30,"column":28}},"28":{"start":{"line":31,"column":0},"end":{"line":31,"column":33}},"29":{"start":{"line":32,"column":0},"end":{"line":32,"column":27}},"30":{"start":{"line":33,"column":0},"end":{"line":35,"column":3}},"31":{"start":{"line":34,"column":4},"end":{"line":34,"column":153}},"32":{"start":{"line":36,"column":0},"end":{"line":39,"column":3}},"33":{"start":{"line":37,"column":20},"end":{"line":37,"column":30}},"34":{"start":{"line":38,"column":4},"end":{"line":38,"column":58}},"35":{"start":{"line":40,"column":0},"end":{"line":42,"column":3}},"36":{"start":{"line":41,"column":4},"end":{"line":41,"column":68}},"37":{"start":{"line":43,"column":0},"end":{"line":43,"column":22}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":33,"column":13},"end":{"line":33,"column":14}},"loc":{"start":{"line":33,"column":33},"end":{"line":35,"column":1}},"line":33},"2":{"name":"(anonymous_2)","decl":{"start":{"line":36,"column":8},"end":{"line":36,"column":9}},"loc":{"start":{"line":36,"column":35},"end":{"line":39,"column":1}},"line":36},"3":{"name":"(anonymous_3)","decl":{"start":{"line":40,"column":17},"end":{"line":40,"column":18}},"loc":{"start":{"line":40,"column":23},"end":{"line":42,"column":1}},"line":40}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":21,"column":13},"end":{"line":21,"column":37}},"type":"binary-expr","locations":[{"start":{"line":21,"column":13},"end":{"line":21,"column":29}},{"start":{"line":21,"column":33},"end":{"line":21,"column":37}}],"line":21}},"s":{"0":1,"1":13,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":0,"32":1,"33":10,"34":10,"35":1,"36":1,"37":1},"f":{"0":13,"1":0,"2":10,"3":1},"b":{"0":[1,1,1],"1":[6,7],"2":[13,13],"3":[1,1]},"inputSourceMap":{"version":3,"file":"C:/Users/Administrator/Desktop/Full-Stack Projects/Small-Blog/API/src/server.ts","sources":["C:/Users/Administrator/Desktop/Full-Stack Projects/Small-Blog/API/src/server.ts"],"names":[],"mappings":";;;;;AAAA,sDAAmE;AACnE,gDAAwB;AACxB,kEAAyC;AACzC,4EAA2C;AAC3C,oDAA4B;AAC5B,oDAA4B;AAE5B,mEAA8C;AAC9C,gEAAwC;AACxC,0DAAwC;AACxC,0DAAwC;AACxC,gEAA+C;AAC/C,0EAAuD;AACvD,8DAA4C;AAE5C,gBAAM,CAAC,MAAM,EAAE,CAAC;AAEhB,MAAM,GAAG,GAAwB,IAAA,iBAAO,GAAE,CAAC;AAE3C,MAAM,IAAI,GAAG,OAAO,CAAC,GAAG,CAAC,IAAI,IAAI,IAAI,CAAC;AAEtC,GAAG,CAAC,GAAG,CAAC,IAAA,cAAI,EAAC,EAAE,WAAW,EAAE,IAAI,EAAE,MAAM,EAAE,uBAAuB,EAAE,CAAC,CAAC,CAAC;AAEtE,GAAG,CAAC,GAAG,CAAC,IAAA,gBAAM,EAAC,KAAK,CAAC,CAAC,CAAC;AACvB,GAAG,CAAC,GAAG,CAAC,IAAA,uBAAY,EAAC,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,CAAC;AACjD,GAAG,CAAC,GAAG,CAAC,iBAAO,CAAC,IAAI,EAAE,CAAC,CAAC;AACxB,GAAG,CAAC,GAAG,CAAC,UAAU,EAAE,iBAAO,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC;AAC/C,GAAG,CAAC,GAAG,CAAC,WAAW,EAAE,4BAAS,CAAC,KAAK,EAAE,4BAAS,CAAC,KAAK,CAAC,sBAAe,CAAC,CAAC,CAAC;AAExE,IAAA,cAAU,EAAC,GAAG,CAAC,CAAC;AAChB,IAAA,cAAU,EAAC,GAAG,CAAC,CAAC;AAChB,IAAA,iBAAc,EAAC,GAAG,CAAC,CAAC;AACpB,IAAA,sBAAiB,EAAC,GAAG,CAAC,CAAC;AACvB,IAAA,gBAAY,EAAC,GAAG,CAAC,CAAC;AAElB,GAAG,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,EAAE;IAC9B,IAAI,CACF,IAAI,kBAAQ,CACV,oCAAoC,GAAG,CAAC,OAAO,4BAA4B,EAC3E,GAAG,EACH,8BAA8B,EAC9B,IAAI,CACL,CACF,CAAC;AACJ,CAAC,CAAC,CAAC;AAEH,GAAG,CAAC,GAAG,CAAC,CAAC,KAAe,EAAE,GAAY,EAAE,GAAa,EAAE,IAAkB,EAAE,EAAE;IAC3E,MAAM,OAAO,GAAG,KAAK,CAAC,IAAI,CAAC;IAC3B,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,OAAO,EAAE,CAAC,CAAC;AACxD,CAAC,CAAC,CAAC;AAEH,GAAG,CAAC,MAAM,CAAC,IAAI,EAAE,GAAG,EAAE;IACpB,OAAO,CAAC,GAAG,CAAC,4CAA4C,IAAI,EAAE,CAAC,CAAC;AAClE,CAAC,CAAC,CAAC;AAEH,kBAAe,GAAG,CAAC","sourcesContent":["import express, { Request, Response, NextFunction } from 'express';\r\nimport cors from 'cors';\r\nimport cookieParser from 'cookie-parser';\r\nimport swaggerUI from 'swagger-ui-express';\r\nimport dotenv from 'dotenv';\r\nimport morgan from 'morgan';\r\n\r\nimport swaggerDocument from '../swagger.json';\r\nimport APIError from './Error/ApiError';\r\nimport userRoutes from './handler/user';\r\nimport postRoutes from './handler/post';\r\nimport commentsRoutes from './handler/comment';\r\nimport refreshTokenRoute from './handler/refreshToken';\r\nimport oauth2Routes from './handler/oauth2';\r\n\r\ndotenv.config();\r\n\r\nconst app: express.Application = express();\r\n\r\nconst port = process.env.PORT || 3000;\r\n\r\napp.use(cors({ credentials: true, origin: 'http://localhost:5173' }));\r\n\r\napp.use(morgan('dev'));\r\napp.use(cookieParser(process.env.COOKIE_SECRET));\r\napp.use(express.json());\r\napp.use('/uploads', express.static('uploads'));\r\napp.use('/api-docs', swaggerUI.serve, swaggerUI.setup(swaggerDocument));\r\n\r\nuserRoutes(app);\r\npostRoutes(app);\r\ncommentsRoutes(app);\r\nrefreshTokenRoute(app);\r\noauth2Routes(app);\r\n\r\napp.all('*', (req, res, next) => {\r\n  next(\r\n    new APIError(\r\n      `Couldn't find such a route visit ${req.baseUrl}/api-docs to get more info`,\r\n      404,\r\n      \"this route couldn't be found\",\r\n      true\r\n    )\r\n  );\r\n});\r\n\r\napp.use((error: APIError, req: Request, res: Response, next: NextFunction) => {\r\n  const message = error.name;\r\n  res.status(error.statusCode).json({ error: message });\r\n});\r\n\r\napp.listen(port, () => {\r\n  console.log(`server is running up on http://localhost:${port}`);\r\n});\r\n\r\nexport default app;\r\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"1c6d24f7f563815b33085ce3373447ed1cfdc97f","contentHash":"b8da77379a81d125eb314eda4318da2a17b7494428fb2ea143197728f1e5d93d"},"C:\\Users\\Administrator\\Desktop\\Full-Stack Projects\\Small-Blog\\API\\src\\Error\\ApiError.ts":{"path":"C:\\Users\\Administrator\\Desktop\\Full-Stack Projects\\Small-Blog\\API\\src\\Error\\ApiError.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":16},"end":{"line":6,"column":51}},"4":{"start":{"line":9,"column":0},"end":{"line":9,"column":27}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1},"f":{"0":1},"b":{"0":[1,1,1],"1":[1,0],"2":[1,1]},"inputSourceMap":{"version":3,"file":"C:/Users/Administrator/Desktop/Full-Stack Projects/Small-Blog/API/src/Error/ApiError.ts","sources":["C:/Users/Administrator/Desktop/Full-Stack Projects/Small-Blog/API/src/Error/ApiError.ts"],"names":[],"mappings":";;;;;AAAA,oDAAgC;AAEhC,MAAM,QAAS,SAAQ,eAAS;CAAG;AAEnC,kBAAe,QAAQ,CAAC","sourcesContent":["import BaseError from './Error';\r\n\r\nclass APIError extends BaseError {}\r\n\r\nexport default APIError;\r\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"68d3c709f90a6b1d12c38275d7d06619d4a1db09","contentHash":"bf864639aa3815456a888903310f322b3ec0a29756ca5b4209d8b46123193071"},"C:\\Users\\Administrator\\Desktop\\Full-Stack Projects\\Small-Blog\\API\\src\\Error\\Error.ts":{"path":"C:\\Users\\Administrator\\Desktop\\Full-Stack Projects\\Small-Blog\\API\\src\\Error\\Error.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":5,"column":8},"end":{"line":5,"column":27}},"2":{"start":{"line":7,"column":8},"end":{"line":7,"column":37}},"3":{"start":{"line":8,"column":8},"end":{"line":8,"column":25}},"4":{"start":{"line":9,"column":8},"end":{"line":9,"column":39}},"5":{"start":{"line":10,"column":8},"end":{"line":10,"column":43}},"6":{"start":{"line":11,"column":8},"end":{"line":11,"column":38}},"7":{"start":{"line":14,"column":0},"end":{"line":14,"column":28}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":4,"column":4},"end":{"line":4,"column":5}},"loc":{"start":{"line":4,"column":62},"end":{"line":12,"column":5}},"line":4}},"branchMap":{},"s":{"0":1,"1":10,"2":10,"3":10,"4":10,"5":10,"6":10,"7":1},"f":{"0":10},"b":{},"inputSourceMap":{"version":3,"file":"C:/Users/Administrator/Desktop/Full-Stack Projects/Small-Blog/API/src/Error/Error.ts","sources":["C:/Users/Administrator/Desktop/Full-Stack Projects/Small-Blog/API/src/Error/Error.ts"],"names":[],"mappings":";;AAAA,MAAM,SAAU,SAAQ,KAAK;IAS3B,YACE,IAAY,EACZ,UAAkB,EAClB,WAAmB,EACnB,aAAsB;QAEtB,KAAK,CAAC,WAAW,CAAC,CAAC;QACnB,gDAAgD;QAChD,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;QAC7B,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;QAC/B,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;QACnC,KAAK,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC;IAChC,CAAC;CACF;AAED,kBAAe,SAAS,CAAC","sourcesContent":["class BaseError extends Error {\r\n  name: string;\r\n\r\n  statusCode: number;\r\n\r\n  description: string;\r\n\r\n  isOperational: boolean;\r\n\r\n  constructor(\r\n    name: string,\r\n    statusCode: number,\r\n    description: string,\r\n    isOperational: boolean\r\n  ) {\r\n    super(description);\r\n    // Object.prototype(this, new.target.prototype);\r\n    this.statusCode = statusCode;\r\n    this.name = name;\r\n    this.description = description;\r\n    this.isOperational = isOperational;\r\n    Error.captureStackTrace(this);\r\n  }\r\n}\r\n\r\nexport default BaseError;\r\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"70bd39670ce278768140d7464da61ba3850eaee6","contentHash":"5a1a2c1f5c2b159dfb62a4a168c6d7d12039bb509ac2d56947c4a87ff4d3c95e"},"C:\\Users\\Administrator\\Desktop\\Full-Stack Projects\\Small-Blog\\API\\src\\handler\\user.ts":{"path":"C:\\Users\\Administrator\\Desktop\\Full-Stack Projects\\Small-Blog\\API\\src\\handler\\user.ts","statementMap":{"0":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"1":{"start":{"line":3,"column":28},"end":{"line":3,"column":110}},"2":{"start":{"line":3,"column":91},"end":{"line":3,"column":106}},"3":{"start":{"line":4,"column":4},"end":{"line":9,"column":7}},"4":{"start":{"line":5,"column":36},"end":{"line":5,"column":97}},"5":{"start":{"line":5,"column":42},"end":{"line":5,"column":70}},"6":{"start":{"line":5,"column":85},"end":{"line":5,"column":95}},"7":{"start":{"line":6,"column":35},"end":{"line":6,"column":100}},"8":{"start":{"line":6,"column":41},"end":{"line":6,"column":73}},"9":{"start":{"line":6,"column":88},"end":{"line":6,"column":98}},"10":{"start":{"line":7,"column":32},"end":{"line":7,"column":116}},"11":{"start":{"line":8,"column":8},"end":{"line":8,"column":78}},"12":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"13":{"start":{"line":12,"column":4},"end":{"line":12,"column":62}},"14":{"start":{"line":14,"column":0},"end":{"line":14,"column":62}},"15":{"start":{"line":15,"column":17},"end":{"line":15,"column":51}},"16":{"start":{"line":16,"column":15},"end":{"line":16,"column":39}},"17":{"start":{"line":17,"column":20},"end":{"line":17,"column":65}},"18":{"start":{"line":18,"column":21},"end":{"line":18,"column":73}},"19":{"start":{"line":19,"column":22},"end":{"line":19,"column":75}},"20":{"start":{"line":20,"column":19},"end":{"line":20,"column":64}},"21":{"start":{"line":21,"column":17},"end":{"line":21,"column":51}},"22":{"start":{"line":22,"column":25},"end":{"line":22,"column":69}},"23":{"start":{"line":23,"column":17},"end":{"line":23,"column":34}},"24":{"start":{"line":24,"column":18},"end":{"line":24,"column":61}},"25":{"start":{"line":25,"column":16},"end":{"line":25,"column":41}},"26":{"start":{"line":26,"column":23},"end":{"line":26,"column":46}},"27":{"start":{"line":27,"column":0},"end":{"line":27,"column":26}},"28":{"start":{"line":28,"column":14},"end":{"line":28,"column":31}},"29":{"start":{"line":29,"column":14},"end":{"line":29,"column":33}},"30":{"start":{"line":30,"column":116},"end":{"line":30,"column":127}},"31":{"start":{"line":31,"column":14},"end":{"line":39,"column":2}},"32":{"start":{"line":31,"column":29},"end":{"line":39,"column":2}},"33":{"start":{"line":32,"column":4},"end":{"line":38,"column":5}},"34":{"start":{"line":33,"column":22},"end":{"line":33,"column":41}},"35":{"start":{"line":34,"column":8},"end":{"line":34,"column":73}},"36":{"start":{"line":37,"column":8},"end":{"line":37,"column":54}},"37":{"start":{"line":40,"column":13},"end":{"line":55,"column":2}},"38":{"start":{"line":40,"column":33},"end":{"line":55,"column":2}},"39":{"start":{"line":41,"column":4},"end":{"line":54,"column":5}},"40":{"start":{"line":42,"column":21},"end":{"line":42,"column":56}},"41":{"start":{"line":43,"column":8},"end":{"line":45,"column":9}},"42":{"start":{"line":44,"column":12},"end":{"line":44,"column":141}},"43":{"start":{"line":46,"column":8},"end":{"line":50,"column":11}},"44":{"start":{"line":53,"column":8},"end":{"line":53,"column":72}},"45":{"start":{"line":56,"column":15},"end":{"line":64,"column":2}},"46":{"start":{"line":56,"column":29},"end":{"line":64,"column":2}},"47":{"start":{"line":57,"column":4},"end":{"line":63,"column":5}},"48":{"start":{"line":58,"column":21},"end":{"line":58,"column":54}},"49":{"start":{"line":59,"column":8},"end":{"line":59,"column":66}},"50":{"start":{"line":62,"column":8},"end":{"line":62,"column":74}},"51":{"start":{"line":65,"column":15},"end":{"line":71,"column":2}},"52":{"start":{"line":65,"column":35},"end":{"line":71,"column":2}},"53":{"start":{"line":66,"column":17},"end":{"line":66,"column":69}},"54":{"start":{"line":67,"column":4},"end":{"line":69,"column":5}},"55":{"start":{"line":68,"column":8},"end":{"line":68,"column":138}},"56":{"start":{"line":70,"column":4},"end":{"line":70,"column":59}},"57":{"start":{"line":72,"column":15},"end":{"line":81,"column":2}},"58":{"start":{"line":72,"column":35},"end":{"line":81,"column":2}},"59":{"start":{"line":73,"column":17},"end":{"line":73,"column":45}},"60":{"start":{"line":74,"column":4},"end":{"line":76,"column":5}},"61":{"start":{"line":75,"column":8},"end":{"line":75,"column":138}},"62":{"start":{"line":77,"column":25},"end":{"line":77,"column":105}},"63":{"start":{"line":78,"column":17},"end":{"line":78,"column":70}},"64":{"start":{"line":79,"column":4},"end":{"line":79,"column":78}},"65":{"start":{"line":80,"column":4},"end":{"line":80,"column":60}},"66":{"start":{"line":82,"column":21},"end":{"line":126,"column":2}},"67":{"start":{"line":82,"column":41},"end":{"line":126,"column":2}},"68":{"start":{"line":84,"column":4},"end":{"line":125,"column":5}},"69":{"start":{"line":85,"column":26},"end":{"line":85,"column":54}},"70":{"start":{"line":86,"column":36},"end":{"line":86,"column":44}},"71":{"start":{"line":87,"column":21},"end":{"line":87,"column":62}},"72":{"start":{"line":88,"column":8},"end":{"line":90,"column":9}},"73":{"start":{"line":89,"column":12},"end":{"line":89,"column":123}},"74":{"start":{"line":91,"column":8},"end":{"line":93,"column":9}},"75":{"start":{"line":92,"column":12},"end":{"line":92,"column":136}},"76":{"start":{"line":94,"column":29},"end":{"line":94,"column":33}},"77":{"start":{"line":95,"column":22},"end":{"line":95,"column":108}},"78":{"start":{"line":96,"column":29},"end":{"line":96,"column":124}},"79":{"start":{"line":98,"column":32},"end":{"line":100,"column":111}},"80":{"start":{"line":100,"column":94},"end":{"line":100,"column":110}},"81":{"start":{"line":101,"column":8},"end":{"line":112,"column":9}},"82":{"start":{"line":103,"column":31},"end":{"line":103,"column":65}},"83":{"start":{"line":104,"column":12},"end":{"line":107,"column":13}},"84":{"start":{"line":106,"column":16},"end":{"line":106,"column":38}},"85":{"start":{"line":108,"column":12},"end":{"line":111,"column":15}},"86":{"start":{"line":113,"column":8},"end":{"line":115,"column":9}},"87":{"start":{"line":114,"column":12},"end":{"line":114,"column":34}},"88":{"start":{"line":116,"column":8},"end":{"line":116,"column":75}},"89":{"start":{"line":117,"column":8},"end":{"line":120,"column":11}},"90":{"start":{"line":121,"column":8},"end":{"line":121,"column":70}},"91":{"start":{"line":124,"column":8},"end":{"line":124,"column":82}},"92":{"start":{"line":127,"column":23},"end":{"line":152,"column":2}},"93":{"start":{"line":127,"column":43},"end":{"line":152,"column":2}},"94":{"start":{"line":128,"column":4},"end":{"line":151,"column":5}},"95":{"start":{"line":129,"column":21},"end":{"line":129,"column":57}},"96":{"start":{"line":130,"column":8},"end":{"line":132,"column":9}},"97":{"start":{"line":131,"column":12},"end":{"line":131,"column":118}},"98":{"start":{"line":133,"column":26},"end":{"line":133,"column":74}},"99":{"start":{"line":134,"column":27},"end":{"line":134,"column":75}},"100":{"start":{"line":135,"column":28},"end":{"line":135,"column":76}},"101":{"start":{"line":136,"column":27},"end":{"line":139,"column":26}},"102":{"start":{"line":141,"column":8},"end":{"line":141,"column":46}},"103":{"start":{"line":142,"column":8},"end":{"line":142,"column":66}},"104":{"start":{"line":144,"column":21},"end":{"line":144,"column":84}},"105":{"start":{"line":145,"column":8},"end":{"line":145,"column":97}},"106":{"start":{"line":146,"column":8},"end":{"line":146,"column":70}},"107":{"start":{"line":150,"column":8},"end":{"line":150,"column":25}},"108":{"start":{"line":153,"column":23},"end":{"line":175,"column":2}},"109":{"start":{"line":153,"column":43},"end":{"line":175,"column":2}},"110":{"start":{"line":154,"column":4},"end":{"line":174,"column":5}},"111":{"start":{"line":155,"column":30},"end":{"line":155,"column":39}},"112":{"start":{"line":156,"column":28},"end":{"line":156,"column":57}},"113":{"start":{"line":157,"column":8},"end":{"line":159,"column":9}},"114":{"start":{"line":158,"column":12},"end":{"line":158,"column":137}},"115":{"start":{"line":160,"column":8},"end":{"line":164,"column":9}},"116":{"start":{"line":163,"column":12},"end":{"line":163,"column":140}},"117":{"start":{"line":165,"column":8},"end":{"line":165,"column":42}},"118":{"start":{"line":166,"column":8},"end":{"line":168,"column":11}},"119":{"start":{"line":171,"column":8},"end":{"line":173,"column":75}},"120":{"start":{"line":176,"column":22},"end":{"line":205,"column":2}},"121":{"start":{"line":176,"column":42},"end":{"line":205,"column":2}},"122":{"start":{"line":177,"column":4},"end":{"line":204,"column":5}},"123":{"start":{"line":178,"column":23},"end":{"line":178,"column":32}},"124":{"start":{"line":179,"column":29},"end":{"line":179,"column":37}},"125":{"start":{"line":192,"column":28},"end":{"line":192,"column":57}},"126":{"start":{"line":193,"column":8},"end":{"line":195,"column":9}},"127":{"start":{"line":194,"column":12},"end":{"line":194,"column":166}},"128":{"start":{"line":196,"column":8},"end":{"line":196,"column":46}},"129":{"start":{"line":197,"column":8},"end":{"line":197,"column":41}},"130":{"start":{"line":198,"column":8},"end":{"line":200,"column":74}},"131":{"start":{"line":203,"column":8},"end":{"line":203,"column":25}},"132":{"start":{"line":206,"column":21},"end":{"line":221,"column":2}},"133":{"start":{"line":206,"column":41},"end":{"line":221,"column":2}},"134":{"start":{"line":207,"column":4},"end":{"line":220,"column":5}},"135":{"start":{"line":209,"column":26},"end":{"line":209,"column":36}},"136":{"start":{"line":210,"column":34},"end":{"line":210,"column":83}},"137":{"start":{"line":211,"column":21},"end":{"line":211,"column":49}},"138":{"start":{"line":212,"column":8},"end":{"line":214,"column":9}},"139":{"start":{"line":213,"column":12},"end":{"line":213,"column":198}},"140":{"start":{"line":215,"column":8},"end":{"line":215,"column":41}},"141":{"start":{"line":216,"column":8},"end":{"line":216,"column":79}},"142":{"start":{"line":219,"column":8},"end":{"line":219,"column":28}},"143":{"start":{"line":222,"column":19},"end":{"line":235,"column":1}},"144":{"start":{"line":224,"column":4},"end":{"line":224,"column":29}},"145":{"start":{"line":225,"column":4},"end":{"line":225,"column":37}},"146":{"start":{"line":226,"column":4},"end":{"line":226,"column":102}},"147":{"start":{"line":228,"column":4},"end":{"line":228,"column":59}},"148":{"start":{"line":229,"column":4},"end":{"line":229,"column":104}},"149":{"start":{"line":230,"column":4},"end":{"line":230,"column":115}},"150":{"start":{"line":231,"column":4},"end":{"line":231,"column":129}},"151":{"start":{"line":232,"column":4},"end":{"line":232,"column":121}},"152":{"start":{"line":233,"column":4},"end":{"line":233,"column":126}},"153":{"start":{"line":234,"column":4},"end":{"line":234,"column":51}},"154":{"start":{"line":236,"column":0},"end":{"line":236,"column":29}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":44},"end":{"line":2,"column":45}},"loc":{"start":{"line":2,"column":89},"end":{"line":10,"column":1}},"line":2},"1":{"name":"adopt","decl":{"start":{"line":3,"column":13},"end":{"line":3,"column":18}},"loc":{"start":{"line":3,"column":26},"end":{"line":3,"column":112}},"line":3},"2":{"name":"(anonymous_2)","decl":{"start":{"line":3,"column":70},"end":{"line":3,"column":71}},"loc":{"start":{"line":3,"column":89},"end":{"line":3,"column":108}},"line":3},"3":{"name":"(anonymous_3)","decl":{"start":{"line":4,"column":36},"end":{"line":4,"column":37}},"loc":{"start":{"line":4,"column":63},"end":{"line":9,"column":5}},"line":4},"4":{"name":"fulfilled","decl":{"start":{"line":5,"column":17},"end":{"line":5,"column":26}},"loc":{"start":{"line":5,"column":34},"end":{"line":5,"column":99}},"line":5},"5":{"name":"rejected","decl":{"start":{"line":6,"column":17},"end":{"line":6,"column":25}},"loc":{"start":{"line":6,"column":33},"end":{"line":6,"column":102}},"line":6},"6":{"name":"step","decl":{"start":{"line":7,"column":17},"end":{"line":7,"column":21}},"loc":{"start":{"line":7,"column":30},"end":{"line":7,"column":118}},"line":7},"7":{"name":"(anonymous_7)","decl":{"start":{"line":11,"column":56},"end":{"line":11,"column":57}},"loc":{"start":{"line":11,"column":71},"end":{"line":13,"column":1}},"line":11},"8":{"name":"(anonymous_8)","decl":{"start":{"line":31,"column":14},"end":{"line":31,"column":15}},"loc":{"start":{"line":31,"column":29},"end":{"line":39,"column":2}},"line":31},"9":{"name":"(anonymous_9)","decl":{"start":{"line":31,"column":63},"end":{"line":31,"column":64}},"loc":{"start":{"line":31,"column":76},"end":{"line":39,"column":1}},"line":31},"10":{"name":"(anonymous_10)","decl":{"start":{"line":40,"column":13},"end":{"line":40,"column":14}},"loc":{"start":{"line":40,"column":33},"end":{"line":55,"column":2}},"line":40},"11":{"name":"(anonymous_11)","decl":{"start":{"line":40,"column":67},"end":{"line":40,"column":68}},"loc":{"start":{"line":40,"column":80},"end":{"line":55,"column":1}},"line":40},"12":{"name":"(anonymous_12)","decl":{"start":{"line":56,"column":15},"end":{"line":56,"column":16}},"loc":{"start":{"line":56,"column":29},"end":{"line":64,"column":2}},"line":56},"13":{"name":"(anonymous_13)","decl":{"start":{"line":56,"column":63},"end":{"line":56,"column":64}},"loc":{"start":{"line":56,"column":76},"end":{"line":64,"column":1}},"line":56},"14":{"name":"(anonymous_14)","decl":{"start":{"line":65,"column":15},"end":{"line":65,"column":16}},"loc":{"start":{"line":65,"column":35},"end":{"line":71,"column":2}},"line":65},"15":{"name":"(anonymous_15)","decl":{"start":{"line":65,"column":69},"end":{"line":65,"column":70}},"loc":{"start":{"line":65,"column":82},"end":{"line":71,"column":1}},"line":65},"16":{"name":"(anonymous_16)","decl":{"start":{"line":72,"column":15},"end":{"line":72,"column":16}},"loc":{"start":{"line":72,"column":35},"end":{"line":81,"column":2}},"line":72},"17":{"name":"(anonymous_17)","decl":{"start":{"line":72,"column":69},"end":{"line":72,"column":70}},"loc":{"start":{"line":72,"column":82},"end":{"line":81,"column":1}},"line":72},"18":{"name":"(anonymous_18)","decl":{"start":{"line":82,"column":21},"end":{"line":82,"column":22}},"loc":{"start":{"line":82,"column":41},"end":{"line":126,"column":2}},"line":82},"19":{"name":"(anonymous_19)","decl":{"start":{"line":82,"column":75},"end":{"line":82,"column":76}},"loc":{"start":{"line":82,"column":88},"end":{"line":126,"column":1}},"line":82},"20":{"name":"(anonymous_20)","decl":{"start":{"line":100,"column":86},"end":{"line":100,"column":87}},"loc":{"start":{"line":100,"column":94},"end":{"line":100,"column":110}},"line":100},"21":{"name":"(anonymous_21)","decl":{"start":{"line":127,"column":23},"end":{"line":127,"column":24}},"loc":{"start":{"line":127,"column":43},"end":{"line":152,"column":2}},"line":127},"22":{"name":"(anonymous_22)","decl":{"start":{"line":127,"column":77},"end":{"line":127,"column":78}},"loc":{"start":{"line":127,"column":90},"end":{"line":152,"column":1}},"line":127},"23":{"name":"(anonymous_23)","decl":{"start":{"line":153,"column":23},"end":{"line":153,"column":24}},"loc":{"start":{"line":153,"column":43},"end":{"line":175,"column":2}},"line":153},"24":{"name":"(anonymous_24)","decl":{"start":{"line":153,"column":77},"end":{"line":153,"column":78}},"loc":{"start":{"line":153,"column":90},"end":{"line":175,"column":1}},"line":153},"25":{"name":"(anonymous_25)","decl":{"start":{"line":176,"column":22},"end":{"line":176,"column":23}},"loc":{"start":{"line":176,"column":42},"end":{"line":205,"column":2}},"line":176},"26":{"name":"(anonymous_26)","decl":{"start":{"line":176,"column":76},"end":{"line":176,"column":77}},"loc":{"start":{"line":176,"column":89},"end":{"line":205,"column":1}},"line":176},"27":{"name":"(anonymous_27)","decl":{"start":{"line":206,"column":21},"end":{"line":206,"column":22}},"loc":{"start":{"line":206,"column":41},"end":{"line":221,"column":2}},"line":206},"28":{"name":"(anonymous_28)","decl":{"start":{"line":206,"column":75},"end":{"line":206,"column":76}},"loc":{"start":{"line":206,"column":88},"end":{"line":221,"column":1}},"line":206},"29":{"name":"(anonymous_29)","decl":{"start":{"line":222,"column":19},"end":{"line":222,"column":20}},"loc":{"start":{"line":222,"column":28},"end":{"line":235,"column":1}},"line":222}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":17},"end":{"line":2,"column":21}},{"start":{"line":2,"column":25},"end":{"line":2,"column":39}},{"start":{"line":2,"column":44},"end":{"line":10,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":35},"end":{"line":3,"column":109}},"type":"cond-expr","locations":[{"start":{"line":3,"column":56},"end":{"line":3,"column":61}},{"start":{"line":3,"column":64},"end":{"line":3,"column":109}}],"line":3},"2":{"loc":{"start":{"line":4,"column":16},"end":{"line":4,"column":34}},"type":"binary-expr","locations":[{"start":{"line":4,"column":16},"end":{"line":4,"column":17}},{"start":{"line":4,"column":22},"end":{"line":4,"column":33}}],"line":4},"3":{"loc":{"start":{"line":7,"column":32},"end":{"line":7,"column":115}},"type":"cond-expr","locations":[{"start":{"line":7,"column":46},"end":{"line":7,"column":67}},{"start":{"line":7,"column":70},"end":{"line":7,"column":115}}],"line":7},"4":{"loc":{"start":{"line":8,"column":51},"end":{"line":8,"column":67}},"type":"binary-expr","locations":[{"start":{"line":8,"column":51},"end":{"line":8,"column":61}},{"start":{"line":8,"column":65},"end":{"line":8,"column":67}}],"line":8},"5":{"loc":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"type":"binary-expr","locations":[{"start":{"line":11,"column":23},"end":{"line":11,"column":27}},{"start":{"line":11,"column":31},"end":{"line":11,"column":51}},{"start":{"line":11,"column":56},"end":{"line":13,"column":1}}],"line":11},"6":{"loc":{"start":{"line":12,"column":11},"end":{"line":12,"column":61}},"type":"cond-expr","locations":[{"start":{"line":12,"column":37},"end":{"line":12,"column":40}},{"start":{"line":12,"column":43},"end":{"line":12,"column":61}}],"line":12},"7":{"loc":{"start":{"line":12,"column":12},"end":{"line":12,"column":33}},"type":"binary-expr","locations":[{"start":{"line":12,"column":12},"end":{"line":12,"column":15}},{"start":{"line":12,"column":19},"end":{"line":12,"column":33}}],"line":12},"8":{"loc":{"start":{"line":43,"column":8},"end":{"line":45,"column":9}},"type":"if","locations":[{"start":{"line":43,"column":8},"end":{"line":45,"column":9}},{"start":{"line":43,"column":8},"end":{"line":45,"column":9}}],"line":43},"9":{"loc":{"start":{"line":67,"column":4},"end":{"line":69,"column":5}},"type":"if","locations":[{"start":{"line":67,"column":4},"end":{"line":69,"column":5}},{"start":{"line":67,"column":4},"end":{"line":69,"column":5}}],"line":67},"10":{"loc":{"start":{"line":74,"column":4},"end":{"line":76,"column":5}},"type":"if","locations":[{"start":{"line":74,"column":4},"end":{"line":76,"column":5}},{"start":{"line":74,"column":4},"end":{"line":76,"column":5}}],"line":74},"11":{"loc":{"start":{"line":88,"column":8},"end":{"line":90,"column":9}},"type":"if","locations":[{"start":{"line":88,"column":8},"end":{"line":90,"column":9}},{"start":{"line":88,"column":8},"end":{"line":90,"column":9}}],"line":88},"12":{"loc":{"start":{"line":91,"column":8},"end":{"line":93,"column":9}},"type":"if","locations":[{"start":{"line":91,"column":8},"end":{"line":93,"column":9}},{"start":{"line":91,"column":8},"end":{"line":93,"column":9}}],"line":91},"13":{"loc":{"start":{"line":98,"column":32},"end":{"line":100,"column":111}},"type":"cond-expr","locations":[{"start":{"line":99,"column":14},"end":{"line":99,"column":31}},{"start":{"line":100,"column":14},"end":{"line":100,"column":111}}],"line":98},"14":{"loc":{"start":{"line":100,"column":14},"end":{"line":100,"column":111}},"type":"cond-expr","locations":[{"start":{"line":100,"column":67},"end":{"line":100,"column":73}},{"start":{"line":100,"column":76},"end":{"line":100,"column":111}}],"line":100},"15":{"loc":{"start":{"line":100,"column":14},"end":{"line":100,"column":64}},"type":"binary-expr","locations":[{"start":{"line":100,"column":14},"end":{"line":100,"column":47}},{"start":{"line":100,"column":51},"end":{"line":100,"column":64}}],"line":100},"16":{"loc":{"start":{"line":101,"column":8},"end":{"line":112,"column":9}},"type":"if","locations":[{"start":{"line":101,"column":8},"end":{"line":112,"column":9}},{"start":{"line":101,"column":8},"end":{"line":112,"column":9}}],"line":101},"17":{"loc":{"start":{"line":104,"column":12},"end":{"line":107,"column":13}},"type":"if","locations":[{"start":{"line":104,"column":12},"end":{"line":107,"column":13}},{"start":{"line":104,"column":12},"end":{"line":107,"column":13}}],"line":104},"18":{"loc":{"start":{"line":113,"column":8},"end":{"line":115,"column":9}},"type":"if","locations":[{"start":{"line":113,"column":8},"end":{"line":115,"column":9}},{"start":{"line":113,"column":8},"end":{"line":115,"column":9}}],"line":113},"19":{"loc":{"start":{"line":130,"column":8},"end":{"line":132,"column":9}},"type":"if","locations":[{"start":{"line":130,"column":8},"end":{"line":132,"column":9}},{"start":{"line":130,"column":8},"end":{"line":132,"column":9}}],"line":130},"20":{"loc":{"start":{"line":157,"column":8},"end":{"line":159,"column":9}},"type":"if","locations":[{"start":{"line":157,"column":8},"end":{"line":159,"column":9}},{"start":{"line":157,"column":8},"end":{"line":159,"column":9}}],"line":157},"21":{"loc":{"start":{"line":160,"column":8},"end":{"line":164,"column":9}},"type":"if","locations":[{"start":{"line":160,"column":8},"end":{"line":164,"column":9}},{"start":{"line":160,"column":8},"end":{"line":164,"column":9}}],"line":160},"22":{"loc":{"start":{"line":160,"column":12},"end":{"line":162,"column":32}},"type":"binary-expr","locations":[{"start":{"line":160,"column":12},"end":{"line":160,"column":73}},{"start":{"line":161,"column":12},"end":{"line":162,"column":32}}],"line":160},"23":{"loc":{"start":{"line":193,"column":8},"end":{"line":195,"column":9}},"type":"if","locations":[{"start":{"line":193,"column":8},"end":{"line":195,"column":9}},{"start":{"line":193,"column":8},"end":{"line":195,"column":9}}],"line":193},"24":{"loc":{"start":{"line":193,"column":14},"end":{"line":193,"column":92}},"type":"cond-expr","locations":[{"start":{"line":193,"column":63},"end":{"line":193,"column":69}},{"start":{"line":193,"column":72},"end":{"line":193,"column":92}}],"line":193},"25":{"loc":{"start":{"line":193,"column":14},"end":{"line":193,"column":60}},"type":"binary-expr","locations":[{"start":{"line":193,"column":14},"end":{"line":193,"column":34}},{"start":{"line":193,"column":38},"end":{"line":193,"column":60}}],"line":193},"26":{"loc":{"start":{"line":212,"column":8},"end":{"line":214,"column":9}},"type":"if","locations":[{"start":{"line":212,"column":8},"end":{"line":214,"column":9}},{"start":{"line":212,"column":8},"end":{"line":214,"column":9}}],"line":212},"27":{"loc":{"start":{"line":212,"column":12},"end":{"line":212,"column":35}},"type":"binary-expr","locations":[{"start":{"line":212,"column":12},"end":{"line":212,"column":17}},{"start":{"line":212,"column":21},"end":{"line":212,"column":35}}],"line":212}},"s":{"0":1,"1":19,"2":0,"3":12,"4":19,"5":19,"6":0,"7":0,"8":0,"9":0,"10":31,"11":12,"12":1,"13":7,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":0,"33":0,"34":0,"35":0,"36":0,"37":1,"38":2,"39":2,"40":2,"41":2,"42":1,"43":1,"44":0,"45":1,"46":0,"47":0,"48":0,"49":0,"50":0,"51":1,"52":0,"53":0,"54":0,"55":0,"56":0,"57":1,"58":1,"59":1,"60":1,"61":0,"62":1,"63":1,"64":1,"65":1,"66":1,"67":5,"68":5,"69":5,"70":5,"71":5,"72":5,"73":1,"74":4,"75":1,"76":3,"77":3,"78":3,"79":3,"80":0,"81":3,"82":0,"83":0,"84":0,"85":0,"86":3,"87":1,"88":3,"89":3,"90":3,"91":0,"92":1,"93":2,"94":2,"95":2,"96":2,"97":1,"98":1,"99":1,"100":1,"101":1,"102":1,"103":1,"104":1,"105":1,"106":1,"107":0,"108":1,"109":1,"110":1,"111":1,"112":1,"113":1,"114":0,"115":1,"116":1,"117":0,"118":0,"119":0,"120":1,"121":1,"122":1,"123":1,"124":1,"125":1,"126":1,"127":1,"128":0,"129":0,"130":0,"131":0,"132":1,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":1,"144":1,"145":1,"146":1,"147":1,"148":1,"149":1,"150":1,"151":1,"152":1,"153":1,"154":1},"f":{"0":12,"1":19,"2":0,"3":12,"4":19,"5":0,"6":31,"7":7,"8":0,"9":0,"10":2,"11":2,"12":0,"13":0,"14":0,"15":0,"16":1,"17":1,"18":5,"19":5,"20":0,"21":2,"22":2,"23":1,"24":1,"25":1,"26":1,"27":0,"28":0,"29":1},"b":{"0":[1,1,1],"1":[19,0],"2":[12,12],"3":[12,19],"4":[12,12],"5":[1,1,1],"6":[5,2],"7":[7,7],"8":[1,1],"9":[0,0],"10":[0,1],"11":[1,4],"12":[1,3],"13":[3,0],"14":[0,0],"15":[0,0],"16":[0,3],"17":[0,0],"18":[1,2],"19":[1,1],"20":[0,1],"21":[1,0],"22":[1,0],"23":[1,0],"24":[0,1],"25":[1,1],"26":[0,0],"27":[0,0]},"inputSourceMap":{"version":3,"file":"C:/Users/Administrator/Desktop/Full-Stack Projects/Small-Blog/API/src/handler/user.ts","sources":["C:/Users/Administrator/Desktop/Full-Stack Projects/Small-Blog/API/src/handler/user.ts"],"names":[],"mappings":"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","sourcesContent":["import { Application, Request, Response, NextFunction } from 'express';\r\nimport crypto from 'crypto';\r\nimport { User } from '../model/user';\r\nimport signToken from '../util/signToken';\r\nimport validation from '../middleware/validation';\r\nimport verifyToken from '../middleware/verifyToken';\r\n\r\nimport APIError from '../Error/ApiError';\r\n\r\nimport dotenv from 'dotenv';\r\nimport {\r\n  validateUserUpdate,\r\n  validateUserCreate,\r\n  validateUserAuthenticate,\r\n  validateUserForgetPassword,\r\n  validateUserCheckReset,\r\n  validateUserResetPassword,\r\n} from '../util/validators/userValidators';\r\n\r\nimport { compare, hash } from 'bcrypt';\r\nimport mail from '../util/mailing';\r\nimport { Token } from '../model/token';\r\nimport { verify } from 'jsonwebtoken';\r\ndotenv.config();\r\n\r\nconst store = new User();\r\nconst reset = new Token();\r\n\r\nconst {\r\n  JWT_SECRET,\r\n  JWT_ACCESS_EXPIRY,\r\n  JWT_REFRESH_SECRET,\r\n  JWT_REFRESH_EXPIRY,\r\n  SR,\r\n  JWT_EMAIL,\r\n  JWT_EMAIL_EXPIRY,\r\n} = process.env;\r\n\r\nconst index = async (_req: Request, res: Response): Promise<void> => {\r\n  try {\r\n    const users = await store.index();\r\n    res.json({ message: 'retrived users sucessfully', data: users });\r\n  } catch (err) {\r\n    throw new Error(`couldn't get users, ${err}`);\r\n  }\r\n};\r\n\r\nconst show = async (\r\n  req: Request,\r\n  res: Response,\r\n  next: NextFunction\r\n): Promise<void> => {\r\n  try {\r\n    const user = await store.show(req.params.author);\r\n    if (!user.author) {\r\n      return next(\r\n        new APIError(\r\n          `couldn't find user ${req.params.author}`,\r\n          404,\r\n          'failed while trying to get the user',\r\n          true\r\n        )\r\n      );\r\n    }\r\n    res.json({\r\n      message: 'retrived the user',\r\n      author: user.author,\r\n      posts: user.posts,\r\n    });\r\n  } catch (err) {\r\n    throw new Error(`couldn't find user,${req.params.id} , ${err}`);\r\n  }\r\n};\r\n\r\nconst remove = async (req: Request, res: Response): Promise<void> => {\r\n  try {\r\n    const user = await store.delete(req.params.id);\r\n    res.json({ message: ' the user is deleted', data: user });\r\n  } catch (err) {\r\n    throw new Error(`couldn't delete user,${req.params.id} , ${err}`);\r\n  }\r\n};\r\n\r\nconst update = async (\r\n  req: Request,\r\n  res: Response,\r\n  next: NextFunction\r\n): Promise<void> => {\r\n  const user = await store.update(req.params.id, req.body.password);\r\n  if (!user) {\r\n    return next(\r\n      new APIError(\r\n        `couldn't update user ${req.params.id}`,\r\n        422,\r\n        'failed while trying to update the user',\r\n        true\r\n      )\r\n    );\r\n  }\r\n  res.json({ message: 'updated the user ', data: user });\r\n};\r\n\r\nconst create = async (\r\n  req: Request,\r\n  res: Response,\r\n  next: NextFunction\r\n): Promise<void> => {\r\n  const user = await store.create(req.body);\r\n  if (!user) {\r\n    return next(\r\n      new APIError(\r\n        `couldn't create user ${req.params.id}`,\r\n        404,\r\n        'failed while trying to create the user',\r\n        true\r\n      )\r\n    );\r\n  }\r\n  const confirmToken = signToken(\r\n    { id: user.id },\r\n    JWT_EMAIL + '',\r\n    JWT_EMAIL_EXPIRY + ''\r\n  );\r\n  const link = `http://localhost:3000/users/confirm/${confirmToken}`;\r\n  mail(user.email, 'Email Confirmation', link, user.name);\r\n  res.status(201).json({ message: 'user created', user });\r\n};\r\n\r\nconst authenticate = async (\r\n  req: Request,\r\n  res: Response,\r\n  next: NextFunction\r\n): Promise<void> => {\r\n  try {\r\n    const jwtCookie = req.cookies['refresh-token'];\r\n    const { email, password } = req.body;\r\n    const user = await store.authenticate(email, password);\r\n    if (!user) {\r\n      return next(\r\n        new APIError(\r\n          `Invalid email or password`,\r\n          404,\r\n          'failed to authenticate the user',\r\n          true\r\n        )\r\n      );\r\n    }\r\n    if (user.confirmed === false) {\r\n      return next(\r\n        new APIError(\r\n          `Please confirm your email.`,\r\n          401,\r\n          'User must confirm email to be able to login',\r\n          true\r\n        )\r\n      );\r\n    }\r\n    const { id, name } = user;\r\n    const token = signToken(\r\n      { id, name, email },\r\n      JWT_SECRET + '',\r\n      JWT_ACCESS_EXPIRY + ''\r\n    );\r\n    const refreshToken = signToken(\r\n      { id, name, email },\r\n      JWT_REFRESH_SECRET + '',\r\n      JWT_REFRESH_EXPIRY + ''\r\n    );\r\n\r\n    // ? remove the old token if exists in cookie\r\n    let newRefreshTokens = (\r\n      !jwtCookie\r\n        ? user.refreshtoken\r\n        : user.refreshtoken?.filter((rt) => rt !== jwtCookie)\r\n    ) as Array<string>;\r\n\r\n    if (jwtCookie) {\r\n      // ! if user logs in, never logs out or use RT (we must check for reuse detection so same refresh token not used in 2 logins or more)\r\n\r\n      const foundToken = await store.showByToken(jwtCookie);\r\n      if (!foundToken) {\r\n        // ? now we are sure the token is deleted and was used before\r\n        newRefreshTokens = [];\r\n      }\r\n\r\n      res.clearCookie('refresh-token', {\r\n        httpOnly: true,\r\n        maxAge: 24 * 60 * 60 * 1000,\r\n      });\r\n    }\r\n    if (!newRefreshTokens) {\r\n      newRefreshTokens = [];\r\n    }\r\n    await store.storeToken(email, [...newRefreshTokens, refreshToken]);\r\n    res.cookie('refresh-token', refreshToken, {\r\n      httpOnly: true,\r\n      maxAge: 24 * 60 * 60 * 1000,\r\n    });\r\n\r\n    res.status(200).json({ name: user.name, accessToken: token });\r\n  } catch (err) {\r\n    throw new Error(`couldn't authenticate user, ${req.body.email} , ${err}`);\r\n  }\r\n};\r\n\r\nconst forgotPassword = async (\r\n  req: Request,\r\n  res: Response,\r\n  next: NextFunction\r\n): Promise<void> => {\r\n  try {\r\n    const user = await store.validate(req.body.email);\r\n    if (!user) {\r\n      return next(\r\n        new APIError(\r\n          `User doesn't exist..`,\r\n          404,\r\n          'failed to authenticate the user',\r\n          true\r\n        )\r\n      );\r\n    }\r\n    const resetCode = Math.floor(100000 + Math.random() * 900000) + ''; // NOTE  ensuring first digit will never be 0\r\n    const resetToken = crypto.randomBytes(20).toString('hex');\r\n    const hashedToken = await hash(resetToken, Number(SR));\r\n    const hashedCode = crypto\r\n      .createHash('sha512')\r\n      .update(resetCode)\r\n      .digest('hex');\r\n\r\n    // !  HERE  instead of removing all previous reset Tokens, ordering tokens and get last one (DESC) and once user reset password we delete all he created before\r\n\r\n    await reset.removeToken(user.id + '');\r\n    await reset.createToken(hashedToken, hashedCode, user.id);\r\n    // NOTE saved hashs will be later compared to see if we really got valid request or not, resetToken valid for 15min, check if verified\r\n    const link = `http://localhost:5173/reset?token=${resetToken}&id=${user.id}`;\r\n    mail(user.email, 'Password Reset Request', link, user.name, resetCode);\r\n    res.status(200).send({ message: 'An E-mail has been sent.' });\r\n  } catch (err) {\r\n    // NOTE we may delete all info we saved if an error happened\r\n    console.log(err);\r\n  }\r\n};\r\n\r\nconst checkResetCode = async (\r\n  req: Request,\r\n  res: Response,\r\n  next: NextFunction\r\n): Promise<void> => {\r\n  try {\r\n    const { token, id } = req.query;\r\n    const storedToken = await reset.getToken(id + '');\r\n    if (!storedToken) {\r\n      return next(\r\n        new APIError(\r\n          `Invalid or expired password reset token`,\r\n          404,\r\n          'failed to authenticate the user',\r\n          true\r\n        )\r\n      );\r\n    }\r\n    if (\r\n      !(await compare(token + '', storedToken.token)) ||\r\n      crypto.createHash('sha512').update(req.body.code).digest('hex') !==\r\n        storedToken.code\r\n    ) {\r\n      return next(\r\n        new APIError(\r\n          `Expired password reset token or wrong code`,\r\n          404,\r\n          'failed to authenticate the user',\r\n          true\r\n        )\r\n      );\r\n    }\r\n\r\n    await reset.verifiedCode(id + '');\r\n    res.status(200).send({\r\n      message:\r\n        'The reset code has been verified you are ready to change the password',\r\n    });\r\n  } catch (err) {\r\n    res\r\n      .status(422)\r\n      .json({ message: 'error occured while verifying reset code' });\r\n  }\r\n};\r\n\r\nconst resetPassword = async (\r\n  req: Request,\r\n  res: Response,\r\n  next: NextFunction\r\n): Promise<void> => {\r\n  try {\r\n    const { id } = req.query;\r\n    const { password } = req.body;\r\n    // HERE  verifying that the user indeed exists\r\n    // const user = await store.getById(id);\r\n    // if (!user) {\r\n    //   return next(\r\n    //     new APIError(\r\n    //       `Cannot find the user with Id: ${id}`,\r\n    //       404,\r\n    //       'failed to get the user',\r\n    //       true\r\n    //     )\r\n    //   );\r\n    // }\r\n    const storedToken = await reset.getToken(id + '');\r\n    if (!storedToken?.verified) {\r\n      return next(\r\n        new APIError(\r\n          `Password reset code is not verified you are not allowed to change password.`,\r\n          403,\r\n          'Not verified reset token',\r\n          true\r\n        )\r\n      );\r\n    }\r\n    await store.update(id + '', password);\r\n    await reset.removeToken(id + '');\r\n\r\n    res\r\n      .status(200)\r\n      .send({ message: 'You changed your password successfully.' });\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n\r\nconst confirmEmail = async (\r\n  req: Request,\r\n  res: Response,\r\n  next: NextFunction\r\n): Promise<void> => {\r\n  try {\r\n    // NOTE  we need to validate if the user is confirmed or not\r\n    const { token } = req.params;\r\n    const {\r\n      user: { id },\r\n    } = verify(token, JWT_EMAIL + '') as { user: { id: number } };\r\n    const user = await store.getById(id + '');\r\n    if (!user || user.confirmed) {\r\n      return next(\r\n        new APIError(\r\n          `The Link expired or no user found.`,\r\n          403,\r\n          \"the user is trying to confirming an email which is alread confirmed or a user that doesn't exists\",\r\n          true\r\n        )\r\n      );\r\n    }\r\n    await store.confirmUser(id + '');\r\n    res.status(302).redirect('http://localhost:5173/login?confirmed=true');\r\n  } catch (err) {\r\n    res.sendStatus(403);\r\n  }\r\n};\r\n\r\nconst userRoutes = (app: Application): void => {\r\n  // ! Development purpose only\r\n  app.get('/users', index);\r\n  app.delete('/users/:id', remove);\r\n  app.patch('/users/:id', validateUserUpdate(), validation, update);\r\n  // HERE  . our used routes\r\n  app.get('/users/:author', verifyToken, show);\r\n  app.post('/users/signup', validateUserCreate(), validation, create);\r\n  app.post(\r\n    '/users/login',\r\n    validateUserAuthenticate(),\r\n    validation,\r\n    authenticate\r\n  );\r\n  app.post(\r\n    '/users/forgot-password',\r\n    validateUserForgetPassword(),\r\n    validation,\r\n    forgotPassword\r\n  );\r\n  app.post(\r\n    '/users/check-reset',\r\n    validateUserCheckReset(),\r\n    validation,\r\n    checkResetCode\r\n  );\r\n  app.post(\r\n    '/users/reset-password',\r\n    validateUserResetPassword(),\r\n    validation,\r\n    resetPassword\r\n  );\r\n  app.get('/users/confirm/:token', confirmEmail);\r\n};\r\n\r\nexport default userRoutes;\r\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"06c410fa8b0c78f140d6931a2a137d19c8485541","contentHash":"f9f5ecdcf1d43aea8682a82577721938cde3d88cbfd50ca39a875673d6479d9e"},"C:\\Users\\Administrator\\Desktop\\Full-Stack Projects\\Small-Blog\\API\\src\\model\\user.ts":{"path":"C:\\Users\\Administrator\\Desktop\\Full-Stack Projects\\Small-Blog\\API\\src\\model\\user.ts","statementMap":{"0":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"1":{"start":{"line":3,"column":28},"end":{"line":3,"column":110}},"2":{"start":{"line":3,"column":91},"end":{"line":3,"column":106}},"3":{"start":{"line":4,"column":4},"end":{"line":9,"column":7}},"4":{"start":{"line":5,"column":36},"end":{"line":5,"column":97}},"5":{"start":{"line":5,"column":42},"end":{"line":5,"column":70}},"6":{"start":{"line":5,"column":85},"end":{"line":5,"column":95}},"7":{"start":{"line":6,"column":35},"end":{"line":6,"column":100}},"8":{"start":{"line":6,"column":41},"end":{"line":6,"column":73}},"9":{"start":{"line":6,"column":88},"end":{"line":6,"column":98}},"10":{"start":{"line":7,"column":32},"end":{"line":7,"column":116}},"11":{"start":{"line":8,"column":8},"end":{"line":8,"column":78}},"12":{"start":{"line":11,"column":13},"end":{"line":21,"column":1}},"13":{"start":{"line":12,"column":12},"end":{"line":12,"column":14}},"14":{"start":{"line":13,"column":4},"end":{"line":14,"column":20}},"15":{"start":{"line":13,"column":21},"end":{"line":14,"column":20}},"16":{"start":{"line":14,"column":8},"end":{"line":14,"column":20}},"17":{"start":{"line":15,"column":4},"end":{"line":19,"column":9}},"18":{"start":{"line":16,"column":8},"end":{"line":19,"column":9}},"19":{"start":{"line":16,"column":21},"end":{"line":16,"column":22}},"20":{"start":{"line":16,"column":28},"end":{"line":16,"column":59}},"21":{"start":{"line":17,"column":12},"end":{"line":18,"column":34}},"22":{"start":{"line":18,"column":16},"end":{"line":18,"column":34}},"23":{"start":{"line":20,"column":4},"end":{"line":20,"column":13}},"24":{"start":{"line":22,"column":22},"end":{"line":24,"column":1}},"25":{"start":{"line":23,"column":4},"end":{"line":23,"column":62}},"26":{"start":{"line":25,"column":0},"end":{"line":25,"column":62}},"27":{"start":{"line":26,"column":0},"end":{"line":26,"column":22}},"28":{"start":{"line":27,"column":17},"end":{"line":27,"column":63}},"29":{"start":{"line":28,"column":17},"end":{"line":28,"column":51}},"30":{"start":{"line":29,"column":17},"end":{"line":29,"column":51}},"31":{"start":{"line":30,"column":0},"end":{"line":30,"column":26}},"32":{"start":{"line":31,"column":23},"end":{"line":31,"column":34}},"33":{"start":{"line":34,"column":8},"end":{"line":45,"column":11}},"34":{"start":{"line":35,"column":12},"end":{"line":44,"column":13}},"35":{"start":{"line":36,"column":29},"end":{"line":36,"column":61}},"36":{"start":{"line":37,"column":28},"end":{"line":37,"column":58}},"37":{"start":{"line":38,"column":31},"end":{"line":38,"column":52}},"38":{"start":{"line":39,"column":16},"end":{"line":39,"column":31}},"39":{"start":{"line":40,"column":16},"end":{"line":40,"column":35}},"40":{"start":{"line":43,"column":16},"end":{"line":43,"column":59}},"41":{"start":{"line":48,"column":8},"end":{"line":61,"column":11}},"42":{"start":{"line":49,"column":12},"end":{"line":60,"column":13}},"43":{"start":{"line":50,"column":29},"end":{"line":50,"column":61}},"44":{"start":{"line":51,"column":28},"end":{"line":51,"column":72}},"45":{"start":{"line":52,"column":31},"end":{"line":52,"column":62}},"46":{"start":{"line":53,"column":29},"end":{"line":53,"column":95}},"47":{"start":{"line":54,"column":32},"end":{"line":54,"column":64}},"48":{"start":{"line":55,"column":16},"end":{"line":55,"column":31}},"49":{"start":{"line":56,"column":16},"end":{"line":56,"column":71}},"50":{"start":{"line":59,"column":16},"end":{"line":59,"column":69}},"51":{"start":{"line":64,"column":8},"end":{"line":75,"column":11}},"52":{"start":{"line":65,"column":12},"end":{"line":74,"column":13}},"53":{"start":{"line":66,"column":29},"end":{"line":66,"column":61}},"54":{"start":{"line":67,"column":28},"end":{"line":67,"column":61}},"55":{"start":{"line":68,"column":31},"end":{"line":68,"column":58}},"56":{"start":{"line":69,"column":16},"end":{"line":69,"column":31}},"57":{"start":{"line":70,"column":16},"end":{"line":70,"column":38}},"58":{"start":{"line":73,"column":16},"end":{"line":73,"column":65}},"59":{"start":{"line":78,"column":8},"end":{"line":90,"column":11}},"60":{"start":{"line":79,"column":12},"end":{"line":89,"column":13}},"61":{"start":{"line":80,"column":29},"end":{"line":80,"column":61}},"62":{"start":{"line":81,"column":28},"end":{"line":81,"column":98}},"63":{"start":{"line":82,"column":39},"end":{"line":82,"column":97}},"64":{"start":{"line":83,"column":31},"end":{"line":83,"column":78}},"65":{"start":{"line":84,"column":16},"end":{"line":84,"column":31}},"66":{"start":{"line":85,"column":16},"end":{"line":85,"column":38}},"67":{"start":{"line":88,"column":16},"end":{"line":88,"column":61}},"68":{"start":{"line":93,"column":8},"end":{"line":103,"column":11}},"69":{"start":{"line":94,"column":12},"end":{"line":102,"column":13}},"70":{"start":{"line":95,"column":29},"end":{"line":95,"column":61}},"71":{"start":{"line":96,"column":28},"end":{"line":96,"column":73}},"72":{"start":{"line":97,"column":16},"end":{"line":97,"column":44}},"73":{"start":{"line":98,"column":16},"end":{"line":98,"column":31}},"74":{"start":{"line":101,"column":16},"end":{"line":101,"column":67}},"75":{"start":{"line":106,"column":8},"end":{"line":117,"column":11}},"76":{"start":{"line":107,"column":12},"end":{"line":116,"column":13}},"77":{"start":{"line":108,"column":29},"end":{"line":108,"column":61}},"78":{"start":{"line":109,"column":28},"end":{"line":109,"column":71}},"79":{"start":{"line":110,"column":31},"end":{"line":110,"column":58}},"80":{"start":{"line":111,"column":16},"end":{"line":111,"column":31}},"81":{"start":{"line":112,"column":16},"end":{"line":112,"column":38}},"82":{"start":{"line":115,"column":16},"end":{"line":115,"column":68}},"83":{"start":{"line":120,"column":8},"end":{"line":136,"column":11}},"84":{"start":{"line":121,"column":12},"end":{"line":135,"column":13}},"85":{"start":{"line":122,"column":29},"end":{"line":122,"column":61}},"86":{"start":{"line":123,"column":28},"end":{"line":123,"column":110}},"87":{"start":{"line":124,"column":39},"end":{"line":124,"column":102}},"88":{"start":{"line":125,"column":31},"end":{"line":129,"column":18}},"89":{"start":{"line":130,"column":16},"end":{"line":130,"column":31}},"90":{"start":{"line":131,"column":16},"end":{"line":131,"column":38}},"91":{"start":{"line":134,"column":16},"end":{"line":134,"column":76}},"92":{"start":{"line":139,"column":8},"end":{"line":157,"column":11}},"93":{"start":{"line":140,"column":12},"end":{"line":156,"column":13}},"94":{"start":{"line":141,"column":29},"end":{"line":141,"column":61}},"95":{"start":{"line":142,"column":28},"end":{"line":142,"column":64}},"96":{"start":{"line":143,"column":31},"end":{"line":143,"column":61}},"97":{"start":{"line":144,"column":16},"end":{"line":144,"column":31}},"98":{"start":{"line":145,"column":16},"end":{"line":151,"column":17}},"99":{"start":{"line":146,"column":33},"end":{"line":146,"column":47}},"100":{"start":{"line":147,"column":20},"end":{"line":150,"column":21}},"101":{"start":{"line":148,"column":50},"end":{"line":148,"column":54}},"102":{"start":{"line":148,"column":63},"end":{"line":148,"column":89}},"103":{"start":{"line":149,"column":24},"end":{"line":149,"column":36}},"104":{"start":{"line":152,"column":16},"end":{"line":152,"column":28}},"105":{"start":{"line":155,"column":16},"end":{"line":155,"column":69}},"106":{"start":{"line":161,"column":8},"end":{"line":172,"column":11}},"107":{"start":{"line":162,"column":12},"end":{"line":171,"column":13}},"108":{"start":{"line":163,"column":29},"end":{"line":163,"column":61}},"109":{"start":{"line":164,"column":28},"end":{"line":164,"column":129}},"110":{"start":{"line":165,"column":31},"end":{"line":165,"column":61}},"111":{"start":{"line":166,"column":16},"end":{"line":166,"column":31}},"112":{"start":{"line":167,"column":16},"end":{"line":167,"column":38}},"113":{"start":{"line":170,"column":16},"end":{"line":170,"column":69}},"114":{"start":{"line":176,"column":8},"end":{"line":187,"column":11}},"115":{"start":{"line":177,"column":12},"end":{"line":186,"column":13}},"116":{"start":{"line":178,"column":29},"end":{"line":178,"column":61}},"117":{"start":{"line":179,"column":28},"end":{"line":179,"column":76}},"118":{"start":{"line":180,"column":31},"end":{"line":180,"column":61}},"119":{"start":{"line":181,"column":16},"end":{"line":181,"column":31}},"120":{"start":{"line":182,"column":16},"end":{"line":182,"column":38}},"121":{"start":{"line":185,"column":16},"end":{"line":185,"column":69}},"122":{"start":{"line":191,"column":8},"end":{"line":201,"column":11}},"123":{"start":{"line":192,"column":12},"end":{"line":200,"column":13}},"124":{"start":{"line":193,"column":29},"end":{"line":193,"column":61}},"125":{"start":{"line":194,"column":28},"end":{"line":194,"column":76}},"126":{"start":{"line":195,"column":16},"end":{"line":195,"column":44}},"127":{"start":{"line":196,"column":16},"end":{"line":196,"column":31}},"128":{"start":{"line":199,"column":16},"end":{"line":199,"column":66}},"129":{"start":{"line":204,"column":8},"end":{"line":214,"column":11}},"130":{"start":{"line":205,"column":12},"end":{"line":213,"column":13}},"131":{"start":{"line":206,"column":29},"end":{"line":206,"column":61}},"132":{"start":{"line":207,"column":28},"end":{"line":207,"column":77}},"133":{"start":{"line":208,"column":16},"end":{"line":208,"column":54}},"134":{"start":{"line":209,"column":16},"end":{"line":209,"column":31}},"135":{"start":{"line":212,"column":16},"end":{"line":212,"column":87}},"136":{"start":{"line":217,"column":8},"end":{"line":228,"column":11}},"137":{"start":{"line":218,"column":12},"end":{"line":227,"column":13}},"138":{"start":{"line":219,"column":29},"end":{"line":219,"column":61}},"139":{"start":{"line":220,"column":28},"end":{"line":220,"column":113}},"140":{"start":{"line":221,"column":31},"end":{"line":221,"column":67}},"141":{"start":{"line":222,"column":16},"end":{"line":222,"column":31}},"142":{"start":{"line":223,"column":16},"end":{"line":223,"column":38}},"143":{"start":{"line":226,"column":16},"end":{"line":226,"column":71}},"144":{"start":{"line":231,"column":0},"end":{"line":231,"column":20}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":44},"end":{"line":2,"column":45}},"loc":{"start":{"line":2,"column":89},"end":{"line":10,"column":1}},"line":2},"1":{"name":"adopt","decl":{"start":{"line":3,"column":13},"end":{"line":3,"column":18}},"loc":{"start":{"line":3,"column":26},"end":{"line":3,"column":112}},"line":3},"2":{"name":"(anonymous_2)","decl":{"start":{"line":3,"column":70},"end":{"line":3,"column":71}},"loc":{"start":{"line":3,"column":89},"end":{"line":3,"column":108}},"line":3},"3":{"name":"(anonymous_3)","decl":{"start":{"line":4,"column":36},"end":{"line":4,"column":37}},"loc":{"start":{"line":4,"column":63},"end":{"line":9,"column":5}},"line":4},"4":{"name":"fulfilled","decl":{"start":{"line":5,"column":17},"end":{"line":5,"column":26}},"loc":{"start":{"line":5,"column":34},"end":{"line":5,"column":99}},"line":5},"5":{"name":"rejected","decl":{"start":{"line":6,"column":17},"end":{"line":6,"column":25}},"loc":{"start":{"line":6,"column":33},"end":{"line":6,"column":102}},"line":6},"6":{"name":"step","decl":{"start":{"line":7,"column":17},"end":{"line":7,"column":21}},"loc":{"start":{"line":7,"column":30},"end":{"line":7,"column":118}},"line":7},"7":{"name":"(anonymous_7)","decl":{"start":{"line":11,"column":38},"end":{"line":11,"column":39}},"loc":{"start":{"line":11,"column":54},"end":{"line":21,"column":1}},"line":11},"8":{"name":"(anonymous_8)","decl":{"start":{"line":22,"column":56},"end":{"line":22,"column":57}},"loc":{"start":{"line":22,"column":71},"end":{"line":24,"column":1}},"line":22},"9":{"name":"(anonymous_9)","decl":{"start":{"line":33,"column":4},"end":{"line":33,"column":5}},"loc":{"start":{"line":33,"column":12},"end":{"line":46,"column":5}},"line":33},"10":{"name":"(anonymous_10)","decl":{"start":{"line":34,"column":47},"end":{"line":34,"column":48}},"loc":{"start":{"line":34,"column":60},"end":{"line":45,"column":9}},"line":34},"11":{"name":"(anonymous_11)","decl":{"start":{"line":47,"column":4},"end":{"line":47,"column":5}},"loc":{"start":{"line":47,"column":17},"end":{"line":62,"column":5}},"line":47},"12":{"name":"(anonymous_12)","decl":{"start":{"line":48,"column":47},"end":{"line":48,"column":48}},"loc":{"start":{"line":48,"column":60},"end":{"line":61,"column":9}},"line":48},"13":{"name":"(anonymous_13)","decl":{"start":{"line":63,"column":4},"end":{"line":63,"column":5}},"loc":{"start":{"line":63,"column":16},"end":{"line":76,"column":5}},"line":63},"14":{"name":"(anonymous_14)","decl":{"start":{"line":64,"column":47},"end":{"line":64,"column":48}},"loc":{"start":{"line":64,"column":60},"end":{"line":75,"column":9}},"line":64},"15":{"name":"(anonymous_15)","decl":{"start":{"line":77,"column":4},"end":{"line":77,"column":5}},"loc":{"start":{"line":77,"column":25},"end":{"line":91,"column":5}},"line":77},"16":{"name":"(anonymous_16)","decl":{"start":{"line":78,"column":47},"end":{"line":78,"column":48}},"loc":{"start":{"line":78,"column":60},"end":{"line":90,"column":9}},"line":78},"17":{"name":"(anonymous_17)","decl":{"start":{"line":92,"column":4},"end":{"line":92,"column":5}},"loc":{"start":{"line":92,"column":20},"end":{"line":104,"column":5}},"line":92},"18":{"name":"(anonymous_18)","decl":{"start":{"line":93,"column":47},"end":{"line":93,"column":48}},"loc":{"start":{"line":93,"column":60},"end":{"line":103,"column":9}},"line":93},"19":{"name":"(anonymous_19)","decl":{"start":{"line":105,"column":4},"end":{"line":105,"column":5}},"loc":{"start":{"line":105,"column":15},"end":{"line":118,"column":5}},"line":105},"20":{"name":"(anonymous_20)","decl":{"start":{"line":106,"column":47},"end":{"line":106,"column":48}},"loc":{"start":{"line":106,"column":60},"end":{"line":117,"column":9}},"line":106},"21":{"name":"(anonymous_21)","decl":{"start":{"line":119,"column":4},"end":{"line":119,"column":5}},"loc":{"start":{"line":119,"column":17},"end":{"line":137,"column":5}},"line":119},"22":{"name":"(anonymous_22)","decl":{"start":{"line":120,"column":47},"end":{"line":120,"column":48}},"loc":{"start":{"line":120,"column":60},"end":{"line":136,"column":9}},"line":120},"23":{"name":"(anonymous_23)","decl":{"start":{"line":138,"column":4},"end":{"line":138,"column":5}},"loc":{"start":{"line":138,"column":34},"end":{"line":158,"column":5}},"line":138},"24":{"name":"(anonymous_24)","decl":{"start":{"line":139,"column":47},"end":{"line":139,"column":48}},"loc":{"start":{"line":139,"column":60},"end":{"line":157,"column":9}},"line":139},"25":{"name":"(anonymous_25)","decl":{"start":{"line":160,"column":4},"end":{"line":160,"column":5}},"loc":{"start":{"line":160,"column":26},"end":{"line":173,"column":5}},"line":160},"26":{"name":"(anonymous_26)","decl":{"start":{"line":161,"column":47},"end":{"line":161,"column":48}},"loc":{"start":{"line":161,"column":60},"end":{"line":172,"column":9}},"line":161},"27":{"name":"(anonymous_27)","decl":{"start":{"line":175,"column":4},"end":{"line":175,"column":5}},"loc":{"start":{"line":175,"column":23},"end":{"line":188,"column":5}},"line":175},"28":{"name":"(anonymous_28)","decl":{"start":{"line":176,"column":47},"end":{"line":176,"column":48}},"loc":{"start":{"line":176,"column":60},"end":{"line":187,"column":9}},"line":176},"29":{"name":"(anonymous_29)","decl":{"start":{"line":190,"column":4},"end":{"line":190,"column":5}},"loc":{"start":{"line":190,"column":27},"end":{"line":202,"column":5}},"line":190},"30":{"name":"(anonymous_30)","decl":{"start":{"line":191,"column":47},"end":{"line":191,"column":48}},"loc":{"start":{"line":191,"column":60},"end":{"line":201,"column":9}},"line":191},"31":{"name":"(anonymous_31)","decl":{"start":{"line":203,"column":4},"end":{"line":203,"column":5}},"loc":{"start":{"line":203,"column":29},"end":{"line":215,"column":5}},"line":203},"32":{"name":"(anonymous_32)","decl":{"start":{"line":204,"column":47},"end":{"line":204,"column":48}},"loc":{"start":{"line":204,"column":60},"end":{"line":214,"column":9}},"line":204},"33":{"name":"(anonymous_33)","decl":{"start":{"line":216,"column":4},"end":{"line":216,"column":5}},"loc":{"start":{"line":216,"column":36},"end":{"line":229,"column":5}},"line":216},"34":{"name":"(anonymous_34)","decl":{"start":{"line":217,"column":47},"end":{"line":217,"column":48}},"loc":{"start":{"line":217,"column":60},"end":{"line":228,"column":9}},"line":217}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":17},"end":{"line":2,"column":21}},{"start":{"line":2,"column":25},"end":{"line":2,"column":39}},{"start":{"line":2,"column":44},"end":{"line":10,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":35},"end":{"line":3,"column":109}},"type":"cond-expr","locations":[{"start":{"line":3,"column":56},"end":{"line":3,"column":61}},{"start":{"line":3,"column":64},"end":{"line":3,"column":109}}],"line":3},"2":{"loc":{"start":{"line":4,"column":16},"end":{"line":4,"column":34}},"type":"binary-expr","locations":[{"start":{"line":4,"column":16},"end":{"line":4,"column":17}},{"start":{"line":4,"column":22},"end":{"line":4,"column":33}}],"line":4},"3":{"loc":{"start":{"line":7,"column":32},"end":{"line":7,"column":115}},"type":"cond-expr","locations":[{"start":{"line":7,"column":46},"end":{"line":7,"column":67}},{"start":{"line":7,"column":70},"end":{"line":7,"column":115}}],"line":7},"4":{"loc":{"start":{"line":8,"column":51},"end":{"line":8,"column":67}},"type":"binary-expr","locations":[{"start":{"line":8,"column":51},"end":{"line":8,"column":61}},{"start":{"line":8,"column":65},"end":{"line":8,"column":67}}],"line":8},"5":{"loc":{"start":{"line":11,"column":13},"end":{"line":21,"column":1}},"type":"binary-expr","locations":[{"start":{"line":11,"column":14},"end":{"line":11,"column":18}},{"start":{"line":11,"column":22},"end":{"line":11,"column":33}},{"start":{"line":11,"column":38},"end":{"line":21,"column":1}}],"line":11},"6":{"loc":{"start":{"line":13,"column":21},"end":{"line":14,"column":20}},"type":"if","locations":[{"start":{"line":13,"column":21},"end":{"line":14,"column":20}},{"start":{"line":13,"column":21},"end":{"line":14,"column":20}}],"line":13},"7":{"loc":{"start":{"line":13,"column":25},"end":{"line":13,"column":87}},"type":"binary-expr","locations":[{"start":{"line":13,"column":25},"end":{"line":13,"column":67}},{"start":{"line":13,"column":71},"end":{"line":13,"column":87}}],"line":13},"8":{"loc":{"start":{"line":15,"column":4},"end":{"line":19,"column":9}},"type":"if","locations":[{"start":{"line":15,"column":4},"end":{"line":19,"column":9}},{"start":{"line":15,"column":4},"end":{"line":19,"column":9}}],"line":15},"9":{"loc":{"start":{"line":15,"column":8},"end":{"line":15,"column":71}},"type":"binary-expr","locations":[{"start":{"line":15,"column":8},"end":{"line":15,"column":17}},{"start":{"line":15,"column":21},"end":{"line":15,"column":71}}],"line":15},"10":{"loc":{"start":{"line":17,"column":12},"end":{"line":18,"column":34}},"type":"if","locations":[{"start":{"line":17,"column":12},"end":{"line":18,"column":34}},{"start":{"line":17,"column":12},"end":{"line":18,"column":34}}],"line":17},"11":{"loc":{"start":{"line":17,"column":16},"end":{"line":17,"column":90}},"type":"binary-expr","locations":[{"start":{"line":17,"column":16},"end":{"line":17,"column":35}},{"start":{"line":17,"column":39},"end":{"line":17,"column":90}}],"line":17},"12":{"loc":{"start":{"line":22,"column":22},"end":{"line":24,"column":1}},"type":"binary-expr","locations":[{"start":{"line":22,"column":23},"end":{"line":22,"column":27}},{"start":{"line":22,"column":31},"end":{"line":22,"column":51}},{"start":{"line":22,"column":56},"end":{"line":24,"column":1}}],"line":22},"13":{"loc":{"start":{"line":23,"column":11},"end":{"line":23,"column":61}},"type":"cond-expr","locations":[{"start":{"line":23,"column":37},"end":{"line":23,"column":40}},{"start":{"line":23,"column":43},"end":{"line":23,"column":61}}],"line":23},"14":{"loc":{"start":{"line":23,"column":12},"end":{"line":23,"column":33}},"type":"binary-expr","locations":[{"start":{"line":23,"column":12},"end":{"line":23,"column":15}},{"start":{"line":23,"column":19},"end":{"line":23,"column":33}}],"line":23},"15":{"loc":{"start":{"line":145,"column":16},"end":{"line":151,"column":17}},"type":"if","locations":[{"start":{"line":145,"column":16},"end":{"line":151,"column":17}},{"start":{"line":145,"column":16},"end":{"line":151,"column":17}}],"line":145},"16":{"loc":{"start":{"line":147,"column":20},"end":{"line":150,"column":21}},"type":"if","locations":[{"start":{"line":147,"column":20},"end":{"line":150,"column":21}},{"start":{"line":147,"column":20},"end":{"line":150,"column":21}}],"line":147},"17":{"loc":{"start":{"line":164,"column":91},"end":{"line":164,"column":127}},"type":"cond-expr","locations":[{"start":{"line":164,"column":98},"end":{"line":164,"column":122}},{"start":{"line":164,"column":125},"end":{"line":164,"column":127}}],"line":164}},"s":{"0":1,"1":54,"2":0,"3":22,"4":54,"5":54,"6":0,"7":0,"8":0,"9":0,"10":76,"11":22,"12":1,"13":4,"14":4,"15":24,"16":20,"17":4,"18":4,"19":4,"20":4,"21":0,"22":0,"23":4,"24":1,"25":3,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":1,"40":0,"41":3,"42":3,"43":3,"44":3,"45":3,"46":3,"47":3,"48":3,"49":3,"50":0,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":1,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":1,"69":1,"70":1,"71":1,"72":1,"73":1,"74":0,"75":1,"76":1,"77":1,"78":1,"79":1,"80":1,"81":1,"82":0,"83":2,"84":2,"85":2,"86":2,"87":2,"88":2,"89":2,"90":2,"91":0,"92":5,"93":5,"94":5,"95":5,"96":5,"97":5,"98":5,"99":5,"100":5,"101":4,"102":4,"103":4,"104":1,"105":0,"106":5,"107":5,"108":5,"109":5,"110":5,"111":5,"112":5,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":3,"130":3,"131":3,"132":3,"133":3,"134":3,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":1},"f":{"0":22,"1":54,"2":0,"3":22,"4":54,"5":0,"6":76,"7":4,"8":3,"9":1,"10":1,"11":3,"12":3,"13":1,"14":1,"15":0,"16":0,"17":1,"18":1,"19":1,"20":1,"21":2,"22":2,"23":5,"24":5,"25":5,"26":5,"27":0,"28":0,"29":0,"30":0,"31":3,"32":3,"33":0,"34":0},"b":{"0":[1,1,1],"1":[54,0],"2":[22,22],"3":[22,54],"4":[22,22],"5":[1,1,1],"6":[20,4],"7":[24,24],"8":[4,0],"9":[4,4],"10":[0,0],"11":[0,0],"12":[1,1,1],"13":[1,2],"14":[3,3],"15":[5,0],"16":[4,1],"17":[3,2]},"inputSourceMap":{"version":3,"file":"C:/Users/Administrator/Desktop/Full-Stack Projects/Small-Blog/API/src/model/user.ts","sources":["C:/Users/Administrator/Desktop/Full-Stack Projects/Small-Blog/API/src/model/user.ts"],"names":[],"mappings":"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","sourcesContent":["import Client from '../database/client';\r\nimport dotenv from 'dotenv';\r\nimport bcrypt from 'bcrypt';\r\nimport { TPost } from './post';\r\n\r\ndotenv.config();\r\nconst { PEPPER, SR } = process.env;\r\n\r\nexport type TUser = {\r\n  id?: number;\r\n  email: string;\r\n  password: string;\r\n  name?: string;\r\n  confirmed?: boolean;\r\n  refreshtoken?: string[];\r\n};\r\n\r\nexport class User {\r\n  async index(): Promise<TUser[]> {\r\n    try {\r\n      const conn = await Client.connect();\r\n      const sql = 'SELECT email,name FROM users';\r\n      const result = await conn.query(sql);\r\n      conn.release();\r\n      return result.rows;\r\n    } catch (err) {\r\n      throw new Error(`Cannot get users ${err}`);\r\n    }\r\n  }\r\n\r\n  async show(author: string): Promise<{ author: TUser; posts: TPost[] }> {\r\n    try {\r\n      const conn = await Client.connect();\r\n      const sql = 'SELECT name,email FROM users WHERE name=$1';\r\n      const result = await conn.query(sql, [author]);\r\n      const sql2 =\r\n        'SELECT * FROM posts p WHERE author=$1 ORDER BY p.id DESC LIMIT 6';\r\n      const result2 = await conn.query(sql2, [author]);\r\n      conn.release();\r\n      return { author: result.rows[0], posts: result2.rows };\r\n    } catch (err) {\r\n      throw new Error(`Cannot get user ${author}, ${err}`);\r\n    }\r\n  }\r\n\r\n  async getById(id: string): Promise<TUser> {\r\n    try {\r\n      const conn = await Client.connect();\r\n      const sql = 'SELECT * FROM users WHERE id=$1';\r\n      const result = await conn.query(sql, [id]);\r\n      conn.release();\r\n      return result.rows[0];\r\n    } catch (err) {\r\n      throw new Error(`Cannot get user ${id}, ${err}`);\r\n    }\r\n  }\r\n\r\n  async update(id: string, password: string): Promise<TUser | undefined> {\r\n    try {\r\n      const conn = await Client.connect();\r\n      const sql =\r\n        'UPDATE users SET password=$1,refreshtoken=$2 WHERE id=$3 RETURNING *';\r\n      const hashedPassword = await bcrypt.hash(password + PEPPER, Number(SR));\r\n      const result = await conn.query(sql, [hashedPassword, [], id]);\r\n      conn.release();\r\n      return result.rows[0];\r\n    } catch (err) {\r\n      console.log(`Cannot get user ${id}, ${err}`);\r\n    }\r\n  }\r\n\r\n  async confirmUser(id: string): Promise<void> {\r\n    try {\r\n      const conn = await Client.connect();\r\n      const sql = 'UPDATE users SET confirmed=TRUE WHERE id=$1';\r\n      await conn.query(sql, [id]);\r\n      conn.release();\r\n    } catch (err) {\r\n      console.log(`Couldn't confirm user ${id}, ${err}`);\r\n    }\r\n  }\r\n\r\n  async delete(id: string): Promise<TUser> {\r\n    try {\r\n      const conn = await Client.connect();\r\n      const sql = 'DELETE FROM users WHERE id=$1 RETURNING *';\r\n      const result = await conn.query(sql, [id]);\r\n      conn.release();\r\n      return result.rows[0];\r\n    } catch (err) {\r\n      throw new Error(`Cannot delete user ${id}, ${err}`);\r\n    }\r\n  }\r\n\r\n  async create(user: TUser): Promise<TUser> {\r\n    try {\r\n      const conn = await Client.connect();\r\n      const sql =\r\n        'INSERT INTO users(email,password,name) VALUES ($1,$2,$3) RETURNING email,name,id';\r\n      const hashedPassword = await bcrypt.hash(\r\n        user.password + PEPPER,\r\n        Number(SR)\r\n      );\r\n      const result = await conn.query(sql, [\r\n        user.email,\r\n        hashedPassword,\r\n        user.name,\r\n      ]);\r\n      conn.release();\r\n      return result.rows[0];\r\n    } catch (err) {\r\n      throw new Error(`Cannot create user ${user.name} , ${err}`);\r\n    }\r\n  }\r\n\r\n  async authenticate(email: string, password: string): Promise<TUser | null> {\r\n    try {\r\n      const conn = await Client.connect();\r\n      const sql = 'SELECT * FROM users WHERE email=$1';\r\n      const result = await conn.query(sql, [email]);\r\n      conn.release();\r\n      if (result.rows.length) {\r\n        const user = result.rows[0];\r\n        if (await bcrypt.compare(password + PEPPER, user.password)) {\r\n          const { password: pwd, ...info } = user;\r\n          return info;\r\n        }\r\n      }\r\n      return null;\r\n    } catch (err) {\r\n      throw new Error(`Cannot Find user ${email}, ${err}`);\r\n    }\r\n  }\r\n\r\n  // ? for validation purpose\r\n  async validate(email: string, name?: string): Promise<TUser> {\r\n    try {\r\n      const conn = await Client.connect();\r\n      const sql = `SELECT id,name,email,refreshtoken FROM users WHERE email=$1 ${\r\n        name ? `OR name='${name + ''}'` : ''\r\n      }`;\r\n      const result = await conn.query(sql, [email]);\r\n      conn.release();\r\n      return result.rows[0];\r\n    } catch (err) {\r\n      throw new Error(`Cannot Find user ${email}, ${err}`);\r\n    }\r\n  }\r\n\r\n  // ? for checking if user got fresh token or not\r\n  async showByToken(value: string): Promise<TUser> {\r\n    try {\r\n      const conn = await Client.connect();\r\n      const sql = `SELECT * FROM users WHERE $1=ANY(refreshToken)`;\r\n      const result = await conn.query(sql, [value]);\r\n      conn.release();\r\n      return result.rows[0];\r\n    } catch (err) {\r\n      throw new Error(`Cannot Find user ${value}, ${err}`);\r\n    }\r\n  }\r\n\r\n  // ? for removing the refresh token on logout\r\n  async deleteRefreshToken(id: string): Promise<void> {\r\n    try {\r\n      const conn = await Client.connect();\r\n      const sql = `UPDATE users SET refreshToken=NULL WHERE id=$1`;\r\n      await conn.query(sql, [id]);\r\n      conn.release();\r\n    } catch (err) {\r\n      throw new Error(`Cannot Find user ${id}, ${err}`);\r\n    }\r\n  }\r\n\r\n  async storeToken(email: string, token: string[]): Promise<void> {\r\n    try {\r\n      const conn = await Client.connect();\r\n      const sql = 'UPDATE users SET refreshToken=$1 WHERE email=$2';\r\n      await conn.query(sql, [token, email]);\r\n      conn.release();\r\n    } catch (err) {\r\n      throw new Error(`Couldn't insert user ${email} refresh token, ${err}`);\r\n    }\r\n  }\r\n\r\n  async googleAuthRegister(email: string, name: string): Promise<TUser> {\r\n    try {\r\n      const conn = await Client.connect();\r\n      const sql =\r\n        'INSERT INTO users(email,name,confirmed) VALUES ($1,$2,TRUE) RETURNING email,name,id';\r\n      const result = await conn.query(sql, [email, name]);\r\n      conn.release();\r\n      return result.rows[0];\r\n    } catch (err) {\r\n      throw new Error(`Cannot create user ${name} , ${err}`);\r\n    }\r\n  }\r\n}\r\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"f82cc06493407cb3e56a1235e4fac0a7c16f4d79","contentHash":"1c604638a423c09967af5a92da87d73ad9d020cf89bd28c2e50c885251e61fb1"},"C:\\Users\\Administrator\\Desktop\\Full-Stack Projects\\Small-Blog\\API\\src\\database\\client.ts":{"path":"C:\\Users\\Administrator\\Desktop\\Full-Stack Projects\\Small-Blog\\API\\src\\database\\client.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":13},"end":{"line":6,"column":26}},"4":{"start":{"line":7,"column":17},"end":{"line":7,"column":51}},"5":{"start":{"line":8,"column":0},"end":{"line":8,"column":26}},"6":{"start":{"line":9,"column":66},"end":{"line":9,"column":77}},"7":{"start":{"line":10,"column":15},"end":{"line":15,"column":2}},"8":{"start":{"line":16,"column":0},"end":{"line":16,"column":25}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":12,"column":14},"end":{"line":12,"column":49}},"type":"cond-expr","locations":[{"start":{"line":12,"column":31},"end":{"line":12,"column":41}},{"start":{"line":12,"column":44},"end":{"line":12,"column":49}}],"line":12}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1},"f":{"0":1},"b":{"0":[1,1,1],"1":[0,1],"2":[1,1],"3":[1,0]},"inputSourceMap":{"version":3,"file":"C:/Users/Administrator/Desktop/Full-Stack Projects/Small-Blog/API/src/database/client.ts","sources":["C:/Users/Administrator/Desktop/Full-Stack Projects/Small-Blog/API/src/database/client.ts"],"names":[],"mappings":";;;;;AAAA,2BAA0B;AAC1B,oDAA4B;AAC5B,gBAAM,CAAC,MAAM,EAAE,CAAC;AAEhB,MAAM,EAAE,OAAO,EAAE,KAAK,EAAE,UAAU,EAAE,OAAO,EAAE,WAAW,EAAE,GAAG,EAAE,GAAG,OAAO,CAAC,GAAG,CAAC;AAE9E,MAAM,MAAM,GAAG,IAAI,SAAI,CAAC;IACtB,IAAI,EAAE,OAAO;IACb,QAAQ,EAAE,GAAG,KAAK,MAAM,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,KAAK;IAC7C,IAAI,EAAE,OAAO;IACb,QAAQ,EAAE,WAAW;CACtB,CAAC,CAAC;AAEH,kBAAe,MAAM,CAAC","sourcesContent":["import { Pool } from 'pg';\r\nimport dotenv from 'dotenv';\r\ndotenv.config();\r\n\r\nconst { PG_HOST, PG_DB, PG_TEST_DB, PG_USER, PG_PASSWORD, ENV } = process.env;\r\n\r\nconst Client = new Pool({\r\n  host: PG_HOST,\r\n  database: ENV === 'TEST' ? PG_TEST_DB : PG_DB,\r\n  user: PG_USER,\r\n  password: PG_PASSWORD,\r\n});\r\n\r\nexport default Client;\r\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"a27e16a5cb4d512ed8ac4d8d74d9e02abbb069b6","contentHash":"7c16577eead50df3c4ccc54979cf2873e3412d1df44d3f654be41e2f0b2fd988"},"C:\\Users\\Administrator\\Desktop\\Full-Stack Projects\\Small-Blog\\API\\src\\util\\signToken.ts":{"path":"C:\\Users\\Administrator\\Desktop\\Full-Stack Projects\\Small-Blog\\API\\src\\util\\signToken.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":23},"end":{"line":3,"column":46}},"2":{"start":{"line":4,"column":18},"end":{"line":10,"column":1}},"3":{"start":{"line":6,"column":18},"end":{"line":8,"column":6}},"4":{"start":{"line":9,"column":4},"end":{"line":9,"column":17}},"5":{"start":{"line":11,"column":0},"end":{"line":11,"column":28}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":4,"column":18},"end":{"line":4,"column":19}},"loc":{"start":{"line":4,"column":44},"end":{"line":10,"column":1}},"line":4}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":7,"4":7,"5":1},"f":{"0":7},"b":{},"inputSourceMap":{"version":3,"file":"C:/Users/Administrator/Desktop/Full-Stack Projects/Small-Blog/API/src/util/signToken.ts","sources":["C:/Users/Administrator/Desktop/Full-Stack Projects/Small-Blog/API/src/util/signToken.ts"],"names":[],"mappings":";;AAAA,+CAAoC;AAGpC,MAAM,SAAS,GAAG,CAAC,IAAoB,EAAE,MAAc,EAAE,MAAc,EAAE,EAAE;IACzE,6CAA6C;IAC7C,MAAM,KAAK,GAAG,IAAA,mBAAI,EAAC,EAAE,IAAI,EAAE,EAAE,MAAM,EAAE;QACnC,SAAS,EAAE,MAAM;KAClB,CAAC,CAAC;IACH,OAAO,KAAK,CAAC;AACf,CAAC,CAAC;AAEF,kBAAe,SAAS,CAAC","sourcesContent":["import { sign } from 'jsonwebtoken';\r\nimport { TUser } from '../model/user';\r\n\r\nconst signToken = (user: Partial<TUser>, secret: string, expiry: string) => {\r\n  // NOTE  providing a cb at end makes it async\r\n  const token = sign({ user }, secret, {\r\n    expiresIn: expiry,\r\n  });\r\n  return token;\r\n};\r\n\r\nexport default signToken;\r\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"4fdf41c43c79c8d9523d180637b5f625f60b00a5","contentHash":"e52303a001c69ce3a670bab17b7b80fb09a686a9cee7476a7eb33c904c4a9da9"},"C:\\Users\\Administrator\\Desktop\\Full-Stack Projects\\Small-Blog\\API\\src\\middleware\\validation.ts":{"path":"C:\\Users\\Administrator\\Desktop\\Full-Stack Projects\\Small-Blog\\API\\src\\middleware\\validation.ts","statementMap":{"0":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"1":{"start":{"line":3,"column":28},"end":{"line":3,"column":110}},"2":{"start":{"line":3,"column":91},"end":{"line":3,"column":106}},"3":{"start":{"line":4,"column":4},"end":{"line":9,"column":7}},"4":{"start":{"line":5,"column":36},"end":{"line":5,"column":97}},"5":{"start":{"line":5,"column":42},"end":{"line":5,"column":70}},"6":{"start":{"line":5,"column":85},"end":{"line":5,"column":95}},"7":{"start":{"line":6,"column":35},"end":{"line":6,"column":100}},"8":{"start":{"line":6,"column":41},"end":{"line":6,"column":73}},"9":{"start":{"line":6,"column":88},"end":{"line":6,"column":98}},"10":{"start":{"line":7,"column":32},"end":{"line":7,"column":116}},"11":{"start":{"line":8,"column":8},"end":{"line":8,"column":78}},"12":{"start":{"line":11,"column":0},"end":{"line":11,"column":62}},"13":{"start":{"line":12,"column":28},"end":{"line":12,"column":56}},"14":{"start":{"line":13,"column":19},"end":{"line":24,"column":2}},"15":{"start":{"line":13,"column":39},"end":{"line":24,"column":2}},"16":{"start":{"line":14,"column":4},"end":{"line":23,"column":5}},"17":{"start":{"line":15,"column":23},"end":{"line":15,"column":69}},"18":{"start":{"line":16,"column":8},"end":{"line":18,"column":9}},"19":{"start":{"line":17,"column":12},"end":{"line":17,"column":71}},"20":{"start":{"line":19,"column":8},"end":{"line":19,"column":15}},"21":{"start":{"line":22,"column":8},"end":{"line":22,"column":45}},"22":{"start":{"line":25,"column":0},"end":{"line":25,"column":29}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":44},"end":{"line":2,"column":45}},"loc":{"start":{"line":2,"column":89},"end":{"line":10,"column":1}},"line":2},"1":{"name":"adopt","decl":{"start":{"line":3,"column":13},"end":{"line":3,"column":18}},"loc":{"start":{"line":3,"column":26},"end":{"line":3,"column":112}},"line":3},"2":{"name":"(anonymous_2)","decl":{"start":{"line":3,"column":70},"end":{"line":3,"column":71}},"loc":{"start":{"line":3,"column":89},"end":{"line":3,"column":108}},"line":3},"3":{"name":"(anonymous_3)","decl":{"start":{"line":4,"column":36},"end":{"line":4,"column":37}},"loc":{"start":{"line":4,"column":63},"end":{"line":9,"column":5}},"line":4},"4":{"name":"fulfilled","decl":{"start":{"line":5,"column":17},"end":{"line":5,"column":26}},"loc":{"start":{"line":5,"column":34},"end":{"line":5,"column":99}},"line":5},"5":{"name":"rejected","decl":{"start":{"line":6,"column":17},"end":{"line":6,"column":25}},"loc":{"start":{"line":6,"column":33},"end":{"line":6,"column":102}},"line":6},"6":{"name":"step","decl":{"start":{"line":7,"column":17},"end":{"line":7,"column":21}},"loc":{"start":{"line":7,"column":30},"end":{"line":7,"column":118}},"line":7},"7":{"name":"(anonymous_7)","decl":{"start":{"line":13,"column":19},"end":{"line":13,"column":20}},"loc":{"start":{"line":13,"column":39},"end":{"line":24,"column":2}},"line":13},"8":{"name":"(anonymous_8)","decl":{"start":{"line":13,"column":73},"end":{"line":13,"column":74}},"loc":{"start":{"line":13,"column":86},"end":{"line":24,"column":1}},"line":13}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":17},"end":{"line":2,"column":21}},{"start":{"line":2,"column":25},"end":{"line":2,"column":39}},{"start":{"line":2,"column":44},"end":{"line":10,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":35},"end":{"line":3,"column":109}},"type":"cond-expr","locations":[{"start":{"line":3,"column":56},"end":{"line":3,"column":61}},{"start":{"line":3,"column":64},"end":{"line":3,"column":109}}],"line":3},"2":{"loc":{"start":{"line":4,"column":16},"end":{"line":4,"column":34}},"type":"binary-expr","locations":[{"start":{"line":4,"column":16},"end":{"line":4,"column":17}},{"start":{"line":4,"column":22},"end":{"line":4,"column":33}}],"line":4},"3":{"loc":{"start":{"line":7,"column":32},"end":{"line":7,"column":115}},"type":"cond-expr","locations":[{"start":{"line":7,"column":46},"end":{"line":7,"column":67}},{"start":{"line":7,"column":70},"end":{"line":7,"column":115}}],"line":7},"4":{"loc":{"start":{"line":8,"column":51},"end":{"line":8,"column":67}},"type":"binary-expr","locations":[{"start":{"line":8,"column":51},"end":{"line":8,"column":61}},{"start":{"line":8,"column":65},"end":{"line":8,"column":67}}],"line":8},"5":{"loc":{"start":{"line":16,"column":8},"end":{"line":18,"column":9}},"type":"if","locations":[{"start":{"line":16,"column":8},"end":{"line":18,"column":9}},{"start":{"line":16,"column":8},"end":{"line":18,"column":9}}],"line":16}},"s":{"0":1,"1":0,"2":0,"3":24,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":24,"11":24,"12":1,"13":1,"14":1,"15":24,"16":24,"17":24,"18":24,"19":5,"20":19,"21":0,"22":1},"f":{"0":24,"1":0,"2":0,"3":24,"4":0,"5":0,"6":24,"7":24,"8":24},"b":{"0":[1,1,1],"1":[0,0],"2":[24,24],"3":[24,0],"4":[24,24],"5":[5,19]},"inputSourceMap":{"version":3,"file":"C:/Users/Administrator/Desktop/Full-Stack Projects/Small-Blog/API/src/middleware/validation.ts","sources":["C:/Users/Administrator/Desktop/Full-Stack Projects/Small-Blog/API/src/middleware/validation.ts"],"names":[],"mappings":";;;;;;;;;;;AAEA,yDAAqD;AAErD,MAAM,UAAU,GAAG,CAAO,GAAY,EAAE,GAAa,EAAE,IAAkB,EAAE,EAAE;IAC3E,IAAI;QACF,MAAM,MAAM,GAAG,IAAA,oCAAgB,EAAC,GAAG,CAAC,CAAC;QACrC,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,EAAE;YACrB,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;SAC5D;QACD,IAAI,EAAE,CAAC;KACR;IAAC,OAAO,GAAG,EAAE;QACZ,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,GAAG,EAAE,CAAC,CAAC;KACtC;AACH,CAAC,CAAA,CAAC;AAEF,kBAAe,UAAU,CAAC","sourcesContent":["import { NextFunction, Request, Response } from 'express';\r\n\r\nimport { validationResult } from 'express-validator';\r\n\r\nconst validation = async (req: Request, res: Response, next: NextFunction) => {\r\n  try {\r\n    const errors = validationResult(req);\r\n    if (!errors.isEmpty()) {\r\n      return res.status(422).json({ errors: errors.array()[0] });\r\n    }\r\n    next();\r\n  } catch (err) {\r\n    res.status(422).json({ error: err });\r\n  }\r\n};\r\n\r\nexport default validation;\r\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"1736327e63efabf0dd834bca03c0a817483ebe24","contentHash":"459a74ca5b55a3230c3c41519cefe50426ade3928ef22d361659033f7046f437"},"C:\\Users\\Administrator\\Desktop\\Full-Stack Projects\\Small-Blog\\API\\src\\middleware\\verifyToken.ts":{"path":"C:\\Users\\Administrator\\Desktop\\Full-Stack Projects\\Small-Blog\\API\\src\\middleware\\verifyToken.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":23},"end":{"line":3,"column":46}},"2":{"start":{"line":4,"column":20},"end":{"line":19,"column":1}},"3":{"start":{"line":6,"column":4},"end":{"line":18,"column":5}},"4":{"start":{"line":7,"column":8},"end":{"line":9,"column":9}},"5":{"start":{"line":8,"column":12},"end":{"line":8,"column":76}},"6":{"start":{"line":10,"column":22},"end":{"line":10,"column":108}},"7":{"start":{"line":11,"column":24},"end":{"line":11,"column":81}},"8":{"start":{"line":12,"column":8},"end":{"line":12,"column":44}},"9":{"start":{"line":13,"column":8},"end":{"line":13,"column":48}},"10":{"start":{"line":14,"column":8},"end":{"line":14,"column":15}},"11":{"start":{"line":17,"column":8},"end":{"line":17,"column":68}},"12":{"start":{"line":20,"column":0},"end":{"line":20,"column":30}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":4,"column":20},"end":{"line":4,"column":21}},"loc":{"start":{"line":4,"column":40},"end":{"line":19,"column":1}},"line":4}},"branchMap":{"0":{"loc":{"start":{"line":7,"column":8},"end":{"line":9,"column":9}},"type":"if","locations":[{"start":{"line":7,"column":8},"end":{"line":9,"column":9}},{"start":{"line":7,"column":8},"end":{"line":9,"column":9}}],"line":7},"1":{"loc":{"start":{"line":10,"column":22},"end":{"line":10,"column":108}},"type":"cond-expr","locations":[{"start":{"line":10,"column":83},"end":{"line":10,"column":89}},{"start":{"line":10,"column":92},"end":{"line":10,"column":108}}],"line":10},"2":{"loc":{"start":{"line":10,"column":22},"end":{"line":10,"column":80}},"type":"binary-expr","locations":[{"start":{"line":10,"column":22},"end":{"line":10,"column":63}},{"start":{"line":10,"column":67},"end":{"line":10,"column":80}}],"line":10}},"s":{"0":1,"1":1,"2":1,"3":26,"4":26,"5":9,"6":17,"7":17,"8":17,"9":17,"10":17,"11":0,"12":1},"f":{"0":26},"b":{"0":[9,17],"1":[0,17],"2":[17,17]},"inputSourceMap":{"version":3,"file":"C:/Users/Administrator/Desktop/Full-Stack Projects/Small-Blog/API/src/middleware/verifyToken.ts","sources":["C:/Users/Administrator/Desktop/Full-Stack Projects/Small-Blog/API/src/middleware/verifyToken.ts"],"names":[],"mappings":";;AAEA,+CAAsC;AAEtC,MAAM,WAAW,GAAG,CAAC,GAAY,EAAE,GAAa,EAAE,IAAkB,EAAE,EAAE;;IACtE,IAAI;QACF,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,aAAa,EAAE;YAC9B,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,uBAAuB,EAAE,CAAC,CAAC;SACjE;QAED,MAAM,KAAK,GAAG,MAAA,GAAG,CAAC,OAAO,CAAC,aAAa,0CAAE,KAAK,CAAC,GAAG,EAAE,CAAC,CAAW,CAAC;QACjE,MAAM,OAAO,GAAG,IAAA,qBAAM,EAAC,KAAK,EAAE,OAAO,CAAC,GAAG,CAAC,UAAoB,CAAa,CAAC;QAC5E,GAAG,CAAC,MAAM,CAAC,MAAM,GAAG,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC;QACpC,GAAG,CAAC,MAAM,CAAC,QAAQ,GAAG,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC;QACxC,IAAI,EAAE,CAAC;KACR;IAAC,OAAO,GAAG,EAAE;QACZ,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,0BAA0B,EAAE,CAAC,CAAC;KAC7D;AACH,CAAC,CAAC;AAEF,kBAAe,WAAW,CAAC","sourcesContent":["import { IPayload } from './../interface/payload';\r\nimport { NextFunction, Request, Response } from 'express';\r\nimport { verify } from 'jsonwebtoken';\r\n\r\nconst verifyToken = (req: Request, res: Response, next: NextFunction) => {\r\n  try {\r\n    if (!req.headers.authorization) {\r\n      return res.status(403).json({ error: 'No token was provided' });\r\n    }\r\n\r\n    const token = req.headers.authorization?.split(' ')[1] as string;\r\n    const payload = verify(token, process.env.JWT_SECRET as string) as IPayload;\r\n    res.locals.userId = payload.user.id;\r\n    res.locals.username = payload.user.name;\r\n    next();\r\n  } catch (err) {\r\n    res.status(403).json({ error: 'Token invalid or expired' });\r\n  }\r\n};\r\n\r\nexport default verifyToken;\r\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"85e46690a42224b004d53e8711c1e4fc18a26d37","contentHash":"9c21a237ad01dbf94d17ce420abba23e0c921f4d8977b37347d58e81fc4cc3e0"},"C:\\Users\\Administrator\\Desktop\\Full-Stack Projects\\Small-Blog\\API\\src\\util\\validators\\userValidators.ts":{"path":"C:\\Users\\Administrator\\Desktop\\Full-Stack Projects\\Small-Blog\\API\\src\\util\\validators\\userValidators.ts","statementMap":{"0":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"1":{"start":{"line":3,"column":28},"end":{"line":3,"column":110}},"2":{"start":{"line":3,"column":91},"end":{"line":3,"column":106}},"3":{"start":{"line":4,"column":4},"end":{"line":9,"column":7}},"4":{"start":{"line":5,"column":36},"end":{"line":5,"column":97}},"5":{"start":{"line":5,"column":42},"end":{"line":5,"column":70}},"6":{"start":{"line":5,"column":85},"end":{"line":5,"column":95}},"7":{"start":{"line":6,"column":35},"end":{"line":6,"column":100}},"8":{"start":{"line":6,"column":41},"end":{"line":6,"column":73}},"9":{"start":{"line":6,"column":88},"end":{"line":6,"column":98}},"10":{"start":{"line":7,"column":32},"end":{"line":7,"column":116}},"11":{"start":{"line":8,"column":8},"end":{"line":8,"column":78}},"12":{"start":{"line":11,"column":0},"end":{"line":11,"column":62}},"13":{"start":{"line":12,"column":0},"end":{"line":12,"column":206}},"14":{"start":{"line":13,"column":28},"end":{"line":13,"column":56}},"15":{"start":{"line":14,"column":15},"end":{"line":14,"column":42}},"16":{"start":{"line":15,"column":14},"end":{"line":15,"column":31}},"17":{"start":{"line":17,"column":27},"end":{"line":43,"column":1}},"18":{"start":{"line":18,"column":4},"end":{"line":42,"column":6}},"19":{"start":{"line":22,"column":40},"end":{"line":28,"column":10}},"20":{"start":{"line":23,"column":25},"end":{"line":23,"column":67}},"21":{"start":{"line":24,"column":12},"end":{"line":26,"column":13}},"22":{"start":{"line":25,"column":16},"end":{"line":25,"column":77}},"23":{"start":{"line":34,"column":12},"end":{"line":36,"column":13}},"24":{"start":{"line":35,"column":16},"end":{"line":35,"column":81}},"25":{"start":{"line":37,"column":12},"end":{"line":37,"column":24}},"26":{"start":{"line":44,"column":0},"end":{"line":44,"column":48}},"27":{"start":{"line":45,"column":27},"end":{"line":59,"column":1}},"28":{"start":{"line":46,"column":4},"end":{"line":58,"column":6}},"29":{"start":{"line":52,"column":12},"end":{"line":54,"column":13}},"30":{"start":{"line":53,"column":16},"end":{"line":53,"column":81}},"31":{"start":{"line":55,"column":12},"end":{"line":55,"column":24}},"32":{"start":{"line":60,"column":0},"end":{"line":60,"column":48}},"33":{"start":{"line":61,"column":33},"end":{"line":69,"column":1}},"34":{"start":{"line":62,"column":4},"end":{"line":68,"column":6}},"35":{"start":{"line":70,"column":0},"end":{"line":70,"column":60}},"36":{"start":{"line":71,"column":35},"end":{"line":73,"column":1}},"37":{"start":{"line":72,"column":4},"end":{"line":72,"column":106}},"38":{"start":{"line":74,"column":0},"end":{"line":74,"column":64}},"39":{"start":{"line":75,"column":31},"end":{"line":84,"column":1}},"40":{"start":{"line":76,"column":4},"end":{"line":83,"column":6}},"41":{"start":{"line":85,"column":0},"end":{"line":85,"column":56}},"42":{"start":{"line":86,"column":34},"end":{"line":100,"column":1}},"43":{"start":{"line":87,"column":4},"end":{"line":99,"column":6}},"44":{"start":{"line":93,"column":12},"end":{"line":95,"column":13}},"45":{"start":{"line":94,"column":16},"end":{"line":94,"column":81}},"46":{"start":{"line":96,"column":12},"end":{"line":96,"column":24}},"47":{"start":{"line":101,"column":0},"end":{"line":101,"column":62}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":44},"end":{"line":2,"column":45}},"loc":{"start":{"line":2,"column":89},"end":{"line":10,"column":1}},"line":2},"1":{"name":"adopt","decl":{"start":{"line":3,"column":13},"end":{"line":3,"column":18}},"loc":{"start":{"line":3,"column":26},"end":{"line":3,"column":112}},"line":3},"2":{"name":"(anonymous_2)","decl":{"start":{"line":3,"column":70},"end":{"line":3,"column":71}},"loc":{"start":{"line":3,"column":89},"end":{"line":3,"column":108}},"line":3},"3":{"name":"(anonymous_3)","decl":{"start":{"line":4,"column":36},"end":{"line":4,"column":37}},"loc":{"start":{"line":4,"column":63},"end":{"line":9,"column":5}},"line":4},"4":{"name":"fulfilled","decl":{"start":{"line":5,"column":17},"end":{"line":5,"column":26}},"loc":{"start":{"line":5,"column":34},"end":{"line":5,"column":99}},"line":5},"5":{"name":"rejected","decl":{"start":{"line":6,"column":17},"end":{"line":6,"column":25}},"loc":{"start":{"line":6,"column":33},"end":{"line":6,"column":102}},"line":6},"6":{"name":"step","decl":{"start":{"line":7,"column":17},"end":{"line":7,"column":21}},"loc":{"start":{"line":7,"column":30},"end":{"line":7,"column":118}},"line":7},"7":{"name":"(anonymous_7)","decl":{"start":{"line":17,"column":27},"end":{"line":17,"column":28}},"loc":{"start":{"line":17,"column":33},"end":{"line":43,"column":1}},"line":17},"8":{"name":"(anonymous_8)","decl":{"start":{"line":22,"column":20},"end":{"line":22,"column":21}},"loc":{"start":{"line":22,"column":40},"end":{"line":28,"column":10}},"line":22},"9":{"name":"(anonymous_9)","decl":{"start":{"line":22,"column":74},"end":{"line":22,"column":75}},"loc":{"start":{"line":22,"column":87},"end":{"line":28,"column":9}},"line":22},"10":{"name":"(anonymous_10)","decl":{"start":{"line":33,"column":20},"end":{"line":33,"column":21}},"loc":{"start":{"line":33,"column":40},"end":{"line":38,"column":9}},"line":33},"11":{"name":"(anonymous_11)","decl":{"start":{"line":45,"column":27},"end":{"line":45,"column":28}},"loc":{"start":{"line":45,"column":33},"end":{"line":59,"column":1}},"line":45},"12":{"name":"(anonymous_12)","decl":{"start":{"line":51,"column":20},"end":{"line":51,"column":21}},"loc":{"start":{"line":51,"column":40},"end":{"line":56,"column":9}},"line":51},"13":{"name":"(anonymous_13)","decl":{"start":{"line":61,"column":33},"end":{"line":61,"column":34}},"loc":{"start":{"line":61,"column":39},"end":{"line":69,"column":1}},"line":61},"14":{"name":"(anonymous_14)","decl":{"start":{"line":71,"column":35},"end":{"line":71,"column":36}},"loc":{"start":{"line":71,"column":41},"end":{"line":73,"column":1}},"line":71},"15":{"name":"(anonymous_15)","decl":{"start":{"line":75,"column":31},"end":{"line":75,"column":32}},"loc":{"start":{"line":75,"column":37},"end":{"line":84,"column":1}},"line":75},"16":{"name":"(anonymous_16)","decl":{"start":{"line":86,"column":34},"end":{"line":86,"column":35}},"loc":{"start":{"line":86,"column":40},"end":{"line":100,"column":1}},"line":86},"17":{"name":"(anonymous_17)","decl":{"start":{"line":92,"column":20},"end":{"line":92,"column":21}},"loc":{"start":{"line":92,"column":40},"end":{"line":97,"column":9}},"line":92}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":17},"end":{"line":2,"column":21}},{"start":{"line":2,"column":25},"end":{"line":2,"column":39}},{"start":{"line":2,"column":44},"end":{"line":10,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":35},"end":{"line":3,"column":109}},"type":"cond-expr","locations":[{"start":{"line":3,"column":56},"end":{"line":3,"column":61}},{"start":{"line":3,"column":64},"end":{"line":3,"column":109}}],"line":3},"2":{"loc":{"start":{"line":4,"column":16},"end":{"line":4,"column":34}},"type":"binary-expr","locations":[{"start":{"line":4,"column":16},"end":{"line":4,"column":17}},{"start":{"line":4,"column":22},"end":{"line":4,"column":33}}],"line":4},"3":{"loc":{"start":{"line":7,"column":32},"end":{"line":7,"column":115}},"type":"cond-expr","locations":[{"start":{"line":7,"column":46},"end":{"line":7,"column":67}},{"start":{"line":7,"column":70},"end":{"line":7,"column":115}}],"line":7},"4":{"loc":{"start":{"line":8,"column":51},"end":{"line":8,"column":67}},"type":"binary-expr","locations":[{"start":{"line":8,"column":51},"end":{"line":8,"column":61}},{"start":{"line":8,"column":65},"end":{"line":8,"column":67}}],"line":8},"5":{"loc":{"start":{"line":24,"column":12},"end":{"line":26,"column":13}},"type":"if","locations":[{"start":{"line":24,"column":12},"end":{"line":26,"column":13}},{"start":{"line":24,"column":12},"end":{"line":26,"column":13}}],"line":24},"6":{"loc":{"start":{"line":34,"column":12},"end":{"line":36,"column":13}},"type":"if","locations":[{"start":{"line":34,"column":12},"end":{"line":36,"column":13}},{"start":{"line":34,"column":12},"end":{"line":36,"column":13}}],"line":34},"7":{"loc":{"start":{"line":52,"column":12},"end":{"line":54,"column":13}},"type":"if","locations":[{"start":{"line":52,"column":12},"end":{"line":54,"column":13}},{"start":{"line":52,"column":12},"end":{"line":54,"column":13}}],"line":52},"8":{"loc":{"start":{"line":93,"column":12},"end":{"line":95,"column":13}},"type":"if","locations":[{"start":{"line":93,"column":12},"end":{"line":95,"column":13}},{"start":{"line":93,"column":12},"end":{"line":95,"column":13}}],"line":93}},"s":{"0":1,"1":3,"2":0,"3":3,"4":3,"5":3,"6":0,"7":0,"8":0,"9":0,"10":6,"11":3,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":3,"20":3,"21":3,"22":1,"23":3,"24":0,"25":3,"26":1,"27":1,"28":1,"29":0,"30":0,"31":0,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":1,"40":1,"41":1,"42":1,"43":1,"44":1,"45":0,"46":1,"47":1},"f":{"0":3,"1":3,"2":0,"3":3,"4":3,"5":0,"6":6,"7":1,"8":3,"9":3,"10":3,"11":1,"12":0,"13":1,"14":1,"15":1,"16":1,"17":1},"b":{"0":[1,1,1],"1":[3,0],"2":[3,3],"3":[3,3],"4":[3,3],"5":[1,2],"6":[0,3],"7":[0,0],"8":[0,1]},"inputSourceMap":{"version":3,"file":"C:/Users/Administrator/Desktop/Full-Stack Projects/Small-Blog/API/src/util/validators/userValidators.ts","sources":["C:/Users/Administrator/Desktop/Full-Stack Projects/Small-Blog/API/src/util/validators/userValidators.ts"],"names":[],"mappings":"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","sourcesContent":["import { body, param, query } from 'express-validator';\r\n\r\nimport { User } from '../../model/user';\r\n\r\nconst store = new User();\r\n\r\n// email or name\r\n\r\nexport const validateUserCreate = () => {\r\n  return [\r\n    body('email', 'Please provide a valid email.')\r\n      .notEmpty()\r\n      .isEmail()\r\n      .custom(async (value: string, { req }) => {\r\n        const user = await store.validate(value, req.body.name);\r\n        if (user) {\r\n          return Promise.reject('E-mail and Username must be unique.');\r\n        }\r\n        // NOTE  to check whether the email is invalid or name ---> we can check if (value === user.email) or (req.body.name === user.name)\r\n      }),\r\n    body('password', 'Invalid password should be 6-16 characters')\r\n      .isAlphanumeric()\r\n      .isLength({ min: 6, max: 16 })\r\n      .notEmpty()\r\n      .custom((value: string, { req }) => {\r\n        if (value !== req.body.confirmPassword) {\r\n          throw new Error('Password confirmation does not match password');\r\n        }\r\n        return true;\r\n      }),\r\n    body('name', 'Invalid username should be at least 2 characters')\r\n      .isString()\r\n      .isLength({ min: 2, max: 40 }),\r\n  ];\r\n};\r\n\r\nexport const validateUserUpdate = () => {\r\n  return [\r\n    body('password', 'Invalid password should be 6-16 characters')\r\n      .isAlphanumeric()\r\n      .isLength({ min: 6, max: 16 })\r\n      .notEmpty()\r\n      .custom((value: string, { req }) => {\r\n        if (value !== req.body.confirmPassword) {\r\n          throw new Error('Password confirmation does not match password');\r\n        }\r\n        return true;\r\n      }),\r\n    param('id').notEmpty().isNumeric(),\r\n  ];\r\n};\r\n\r\nexport const validateUserAuthenticate = () => {\r\n  return [\r\n    body('email', 'Please provide a valid email.').notEmpty().isEmail(),\r\n    body('password', 'Invalid password should be 6-16 characters')\r\n      .isAlphanumeric()\r\n      .isLength({ min: 6, max: 16 })\r\n      .notEmpty(),\r\n  ];\r\n};\r\n\r\nexport const validateUserForgetPassword = () => {\r\n  return [body('email', 'Please provide a valid email.').notEmpty().isEmail()];\r\n};\r\n\r\nexport const validateUserCheckReset = () => {\r\n  return [\r\n    body('code', 'Please provide a valid email.')\r\n      .notEmpty()\r\n      .isAlphanumeric()\r\n      .isLength({ min: 6, max: 6 }),\r\n    query('token').notEmpty().isString(),\r\n    query('id').notEmpty().isString(),\r\n  ];\r\n};\r\n\r\nexport const validateUserResetPassword = () => {\r\n  return [\r\n    body('password', 'Invalid password should be 6-16 characters')\r\n      .isAlphanumeric()\r\n      .isLength({ min: 6, max: 16 })\r\n      .notEmpty()\r\n      .custom((value: string, { req }) => {\r\n        if (value !== req.body.confirmPassword) {\r\n          throw new Error('Password confirmation does not match password');\r\n        }\r\n        return true;\r\n      }),\r\n    query('id').notEmpty().isString(),\r\n  ];\r\n};\r\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"15b3f207bb5f235a49ddf5bf95252706b7acd5ba","contentHash":"c37d13b2b0394d333b220186a13f1e060f9acb93a77cb2f183dba4ab98b17eff"},"C:\\Users\\Administrator\\Desktop\\Full-Stack Projects\\Small-Blog\\API\\src\\util\\mailing.ts":{"path":"C:\\Users\\Administrator\\Desktop\\Full-Stack Projects\\Small-Blog\\API\\src\\util\\mailing.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":21},"end":{"line":6,"column":42}},"4":{"start":{"line":7,"column":17},"end":{"line":7,"column":51}},"5":{"start":{"line":8,"column":16},"end":{"line":8,"column":49}},"6":{"start":{"line":9,"column":0},"end":{"line":9,"column":26}},"7":{"start":{"line":10,"column":49},"end":{"line":10,"column":60}},"8":{"start":{"line":12,"column":13},"end":{"line":36,"column":1}},"9":{"start":{"line":14,"column":24},"end":{"line":20,"column":6}},"10":{"start":{"line":21,"column":20},"end":{"line":27,"column":5}},"11":{"start":{"line":28,"column":4},"end":{"line":35,"column":7}},"12":{"start":{"line":29,"column":8},"end":{"line":34,"column":9}},"13":{"start":{"line":30,"column":12},"end":{"line":30,"column":29}},"14":{"start":{"line":33,"column":12},"end":{"line":33,"column":37}},"15":{"start":{"line":37,"column":0},"end":{"line":37,"column":23}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":12,"column":13},"end":{"line":12,"column":14}},"loc":{"start":{"line":12,"column":51},"end":{"line":36,"column":1}},"line":12},"2":{"name":"(anonymous_2)","decl":{"start":{"line":28,"column":34},"end":{"line":28,"column":35}},"loc":{"start":{"line":28,"column":49},"end":{"line":35,"column":5}},"line":28}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":26,"column":14},"end":{"line":26,"column":108}},"type":"cond-expr","locations":[{"start":{"line":26,"column":21},"end":{"line":26,"column":65}},{"start":{"line":26,"column":68},"end":{"line":26,"column":108}}],"line":26},"4":{"loc":{"start":{"line":29,"column":8},"end":{"line":34,"column":9}},"type":"if","locations":[{"start":{"line":29,"column":8},"end":{"line":34,"column":9}},{"start":{"line":29,"column":8},"end":{"line":34,"column":9}}],"line":29}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":2,"10":2,"11":2,"12":0,"13":0,"14":0,"15":1},"f":{"0":1,"1":2,"2":0},"b":{"0":[1,1,1],"1":[0,1],"2":[1,1],"3":[1,1],"4":[0,0]},"inputSourceMap":{"version":3,"file":"C:/Users/Administrator/Desktop/Full-Stack Projects/Small-Blog/API/src/util/mailing.ts","sources":["C:/Users/Administrator/Desktop/Full-Stack Projects/Small-Blog/API/src/util/mailing.ts"],"names":[],"mappings":";;;;;AAAA,2CAA6C;AAC7C,oDAA4B;AAC5B,kDAAwE;AACxE,gBAAM,CAAC,MAAM,EAAE,CAAC;AAEhB,MAAM,EAAE,YAAY,EAAE,UAAU,EAAE,UAAU,EAAE,GAAG,OAAO,CAAC,GAAG,CAAC;AAE7D,uEAAuE;AACvE,MAAM,IAAI,GAAG,CACX,KAAa,EACb,OAAe,EACf,IAAY,EACZ,IAAa,EACb,IAAa,EACb,EAAE;IACF,qDAAqD;IACrD,MAAM,WAAW,GAAG,IAAA,4BAAe,EAAC;QAClC,OAAO,EAAE,SAAS;QAClB,IAAI,EAAE;YACJ,IAAI,EAAE,YAAY;YAClB,IAAI,EAAE,UAAU;SACjB;KACF,CAAC,CAAC;IAEH,MAAM,OAAO,GAAG;QACd,IAAI,EAAE,gBAAgB,UAAU,GAAG;QACnC,EAAE,EAAE,KAAK;QACT,OAAO,EAAE,OAAO;QAChB,IAAI,EAAE,yCAAyC;QAC/C,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC,IAAA,qBAAa,EAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,IAAA,uBAAe,EAAC,IAAI,EAAE,IAAI,CAAC;KAC3E,CAAC;IAEF,WAAW,CAAC,QAAQ,CAAC,OAAO,EAAE,UAAU,GAAG;QACzC,IAAI,GAAG,EAAE;YACP,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;SAClB;aAAM;YACL,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;SAC1B;IACH,CAAC,CAAC,CAAC;AACL,CAAC,CAAC;AAEF,kBAAe,IAAI,CAAC","sourcesContent":["import { createTransport } from 'nodemailer';\r\nimport dotenv from 'dotenv';\r\nimport { confirmTemplate, resetTemplate } from './mail-templates/mails';\r\ndotenv.config();\r\n\r\nconst { MAILING_USER, MAILING_PW, FROM_EMAIL } = process.env;\r\n\r\n// NOTE  remember to pass options to the function for email and content\r\nconst mail = (\r\n  email: string,\r\n  subject: string,\r\n  link: string,\r\n  name?: string,\r\n  code?: string\r\n) => {\r\n  // HERE  create SMTP service to be able to send mails\r\n  const transporter = createTransport({\r\n    service: 'hotmail',\r\n    auth: {\r\n      user: MAILING_USER,\r\n      pass: MAILING_PW,\r\n    },\r\n  });\r\n\r\n  const message = {\r\n    from: `Beanzo-Blog <${FROM_EMAIL}>`,\r\n    to: email,\r\n    subject: subject,\r\n    text: 'For clients with plaintext support only',\r\n    html: code ? resetTemplate(link, code, name) : confirmTemplate(link, name),\r\n  };\r\n\r\n  transporter.sendMail(message, function (err) {\r\n    if (err) {\r\n      console.log(err);\r\n    } else {\r\n      console.log('mail sent');\r\n    }\r\n  });\r\n};\r\n\r\nexport default mail;\r\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"2d3a21ce893c4d6dad3c12aff0d6d0627dbfdeeb","contentHash":"fa92f6b7db272d1d11f1e13d15bc770d077d89604c02497f06d35a296238b141"},"C:\\Users\\Administrator\\Desktop\\Full-Stack Projects\\Small-Blog\\API\\src\\util\\mail-templates\\mails.ts":{"path":"C:\\Users\\Administrator\\Desktop\\Full-Stack Projects\\Small-Blog\\API\\src\\util\\mail-templates\\mails.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":57}},"2":{"start":{"line":4,"column":22},"end":{"line":18,"column":1}},"3":{"start":{"line":5,"column":4},"end":{"line":17,"column":13}},"4":{"start":{"line":19,"column":0},"end":{"line":19,"column":38}},"5":{"start":{"line":20,"column":24},"end":{"line":35,"column":1}},"6":{"start":{"line":21,"column":4},"end":{"line":34,"column":13}},"7":{"start":{"line":36,"column":0},"end":{"line":36,"column":42}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":4,"column":22},"end":{"line":4,"column":23}},"loc":{"start":{"line":4,"column":44},"end":{"line":18,"column":1}},"line":4},"1":{"name":"(anonymous_1)","decl":{"start":{"line":20,"column":24},"end":{"line":20,"column":25}},"loc":{"start":{"line":20,"column":40},"end":{"line":35,"column":1}},"line":20}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1},"f":{"0":1,"1":1},"b":{},"inputSourceMap":{"version":3,"file":"C:/Users/Administrator/Desktop/Full-Stack Projects/Small-Blog/API/src/util/mail-templates/mails.ts","sources":["C:/Users/Administrator/Desktop/Full-Stack Projects/Small-Blog/API/src/util/mail-templates/mails.ts"],"names":[],"mappings":";;;AAAO,MAAM,aAAa,GAAG,CAAC,IAAY,EAAE,IAAY,EAAE,IAAa,EAAE,EAAE;IACzE,OAAO;;;;;;gBAMO,IAAI;;0BAEM,IAAI;;qBAET,IAAI;;YAEb,CAAC;AACb,CAAC,CAAC;AAdW,QAAA,aAAa,iBAcxB;AAEK,MAAM,eAAe,GAAG,CAAC,IAAY,EAAE,IAAa,EAAE,EAAE;IAC7D,OAAO;;;;;;gBAMO,IAAI;;;;;qBAKC,IAAI;;YAEb,CAAC;AACb,CAAC,CAAC;AAfW,QAAA,eAAe,mBAe1B","sourcesContent":["export const resetTemplate = (link: string, code: string, name?: string) => {\r\n  return `<!doctype html>\r\n    <html ⚡4email>\r\n      <head>\r\n        <meta charset=\"utf-8\">\r\n      </head>\r\n      <body>\r\n        <p>Hi ${name},</p>\r\n        <p>You requested to reset your password.</p>\r\n        <h2>Reset Code: ${code}</h2>\r\n        <p> Please, click the link below to reset your password</p>\r\n          <a href=\"${link}\">Reset Password</a>\r\n      </body>\r\n    </html>`;\r\n};\r\n\r\nexport const confirmTemplate = (link: string, name?: string) => {\r\n  return `<!doctype html>\r\n    <html ⚡4email>\r\n      <head>\r\n        <meta charset=\"utf-8\">\r\n      </head>\r\n      <body>\r\n        <p>Hi ${name},</p>\r\n        <p>Welcome to our blog, its nice to have you around.</p>\r\n        <h2>This mail is for confirming your email</h2>\r\n        <p>Note: if you got this by mistake, please ignore it</p>\r\n        <p>Please, click the link below to confirm your email</p>\r\n          <a href=\"${link}\">Click here</a>\r\n      </body>\r\n    </html>`;\r\n};\r\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"a50e4f40020c236c22b36a5af41168a8d0512a3f","contentHash":"689b7aa1de5aaaf558a8017052f8f9c539d21bd0c595c1444890c6944972fc50"},"C:\\Users\\Administrator\\Desktop\\Full-Stack Projects\\Small-Blog\\API\\src\\model\\token.ts":{"path":"C:\\Users\\Administrator\\Desktop\\Full-Stack Projects\\Small-Blog\\API\\src\\model\\token.ts","statementMap":{"0":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"1":{"start":{"line":3,"column":28},"end":{"line":3,"column":110}},"2":{"start":{"line":3,"column":91},"end":{"line":3,"column":106}},"3":{"start":{"line":4,"column":4},"end":{"line":9,"column":7}},"4":{"start":{"line":5,"column":36},"end":{"line":5,"column":97}},"5":{"start":{"line":5,"column":42},"end":{"line":5,"column":70}},"6":{"start":{"line":5,"column":85},"end":{"line":5,"column":95}},"7":{"start":{"line":6,"column":35},"end":{"line":6,"column":100}},"8":{"start":{"line":6,"column":41},"end":{"line":6,"column":73}},"9":{"start":{"line":6,"column":88},"end":{"line":6,"column":98}},"10":{"start":{"line":7,"column":32},"end":{"line":7,"column":116}},"11":{"start":{"line":8,"column":8},"end":{"line":8,"column":78}},"12":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"13":{"start":{"line":12,"column":4},"end":{"line":12,"column":62}},"14":{"start":{"line":14,"column":0},"end":{"line":14,"column":62}},"15":{"start":{"line":15,"column":0},"end":{"line":15,"column":23}},"16":{"start":{"line":16,"column":17},"end":{"line":16,"column":63}},"17":{"start":{"line":19,"column":8},"end":{"line":34,"column":11}},"18":{"start":{"line":20,"column":12},"end":{"line":33,"column":13}},"19":{"start":{"line":21,"column":29},"end":{"line":21,"column":61}},"20":{"start":{"line":22,"column":28},"end":{"line":22,"column":99}},"21":{"start":{"line":23,"column":16},"end":{"line":28,"column":19}},"22":{"start":{"line":29,"column":16},"end":{"line":29,"column":31}},"23":{"start":{"line":32,"column":16},"end":{"line":32,"column":77}},"24":{"start":{"line":37,"column":8},"end":{"line":50,"column":11}},"25":{"start":{"line":38,"column":12},"end":{"line":49,"column":13}},"26":{"start":{"line":39,"column":29},"end":{"line":39,"column":61}},"27":{"start":{"line":40,"column":28},"end":{"line":40,"column":66}},"28":{"start":{"line":41,"column":31},"end":{"line":41,"column":58}},"29":{"start":{"line":42,"column":16},"end":{"line":42,"column":31}},"30":{"start":{"line":43,"column":16},"end":{"line":44,"column":32}},"31":{"start":{"line":44,"column":20},"end":{"line":44,"column":32}},"32":{"start":{"line":45,"column":16},"end":{"line":45,"column":38}},"33":{"start":{"line":48,"column":16},"end":{"line":48,"column":71}},"34":{"start":{"line":53,"column":8},"end":{"line":63,"column":11}},"35":{"start":{"line":54,"column":12},"end":{"line":62,"column":13}},"36":{"start":{"line":55,"column":29},"end":{"line":55,"column":61}},"37":{"start":{"line":56,"column":28},"end":{"line":56,"column":77}},"38":{"start":{"line":57,"column":16},"end":{"line":57,"column":44}},"39":{"start":{"line":58,"column":16},"end":{"line":58,"column":31}},"40":{"start":{"line":61,"column":16},"end":{"line":61,"column":71}},"41":{"start":{"line":66,"column":8},"end":{"line":76,"column":11}},"42":{"start":{"line":67,"column":12},"end":{"line":75,"column":13}},"43":{"start":{"line":68,"column":29},"end":{"line":68,"column":61}},"44":{"start":{"line":69,"column":28},"end":{"line":69,"column":64}},"45":{"start":{"line":70,"column":16},"end":{"line":70,"column":44}},"46":{"start":{"line":71,"column":16},"end":{"line":71,"column":31}},"47":{"start":{"line":74,"column":16},"end":{"line":74,"column":77}},"48":{"start":{"line":79,"column":0},"end":{"line":79,"column":22}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":44},"end":{"line":2,"column":45}},"loc":{"start":{"line":2,"column":89},"end":{"line":10,"column":1}},"line":2},"1":{"name":"adopt","decl":{"start":{"line":3,"column":13},"end":{"line":3,"column":18}},"loc":{"start":{"line":3,"column":26},"end":{"line":3,"column":112}},"line":3},"2":{"name":"(anonymous_2)","decl":{"start":{"line":3,"column":70},"end":{"line":3,"column":71}},"loc":{"start":{"line":3,"column":89},"end":{"line":3,"column":108}},"line":3},"3":{"name":"(anonymous_3)","decl":{"start":{"line":4,"column":36},"end":{"line":4,"column":37}},"loc":{"start":{"line":4,"column":63},"end":{"line":9,"column":5}},"line":4},"4":{"name":"fulfilled","decl":{"start":{"line":5,"column":17},"end":{"line":5,"column":26}},"loc":{"start":{"line":5,"column":34},"end":{"line":5,"column":99}},"line":5},"5":{"name":"rejected","decl":{"start":{"line":6,"column":17},"end":{"line":6,"column":25}},"loc":{"start":{"line":6,"column":33},"end":{"line":6,"column":102}},"line":6},"6":{"name":"step","decl":{"start":{"line":7,"column":17},"end":{"line":7,"column":21}},"loc":{"start":{"line":7,"column":30},"end":{"line":7,"column":118}},"line":7},"7":{"name":"(anonymous_7)","decl":{"start":{"line":11,"column":56},"end":{"line":11,"column":57}},"loc":{"start":{"line":11,"column":71},"end":{"line":13,"column":1}},"line":11},"8":{"name":"(anonymous_8)","decl":{"start":{"line":18,"column":4},"end":{"line":18,"column":5}},"loc":{"start":{"line":18,"column":37},"end":{"line":35,"column":5}},"line":18},"9":{"name":"(anonymous_9)","decl":{"start":{"line":19,"column":47},"end":{"line":19,"column":48}},"loc":{"start":{"line":19,"column":60},"end":{"line":34,"column":9}},"line":19},"10":{"name":"(anonymous_10)","decl":{"start":{"line":36,"column":4},"end":{"line":36,"column":5}},"loc":{"start":{"line":36,"column":17},"end":{"line":51,"column":5}},"line":36},"11":{"name":"(anonymous_11)","decl":{"start":{"line":37,"column":47},"end":{"line":37,"column":48}},"loc":{"start":{"line":37,"column":60},"end":{"line":50,"column":9}},"line":37},"12":{"name":"(anonymous_12)","decl":{"start":{"line":52,"column":4},"end":{"line":52,"column":5}},"loc":{"start":{"line":52,"column":21},"end":{"line":64,"column":5}},"line":52},"13":{"name":"(anonymous_13)","decl":{"start":{"line":53,"column":47},"end":{"line":53,"column":48}},"loc":{"start":{"line":53,"column":60},"end":{"line":63,"column":9}},"line":53},"14":{"name":"(anonymous_14)","decl":{"start":{"line":65,"column":4},"end":{"line":65,"column":5}},"loc":{"start":{"line":65,"column":20},"end":{"line":77,"column":5}},"line":65},"15":{"name":"(anonymous_15)","decl":{"start":{"line":66,"column":47},"end":{"line":66,"column":48}},"loc":{"start":{"line":66,"column":60},"end":{"line":76,"column":9}},"line":66}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":17},"end":{"line":2,"column":21}},{"start":{"line":2,"column":25},"end":{"line":2,"column":39}},{"start":{"line":2,"column":44},"end":{"line":10,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":35},"end":{"line":3,"column":109}},"type":"cond-expr","locations":[{"start":{"line":3,"column":56},"end":{"line":3,"column":61}},{"start":{"line":3,"column":64},"end":{"line":3,"column":109}}],"line":3},"2":{"loc":{"start":{"line":4,"column":16},"end":{"line":4,"column":34}},"type":"binary-expr","locations":[{"start":{"line":4,"column":16},"end":{"line":4,"column":17}},{"start":{"line":4,"column":22},"end":{"line":4,"column":33}}],"line":4},"3":{"loc":{"start":{"line":7,"column":32},"end":{"line":7,"column":115}},"type":"cond-expr","locations":[{"start":{"line":7,"column":46},"end":{"line":7,"column":67}},{"start":{"line":7,"column":70},"end":{"line":7,"column":115}}],"line":7},"4":{"loc":{"start":{"line":8,"column":51},"end":{"line":8,"column":67}},"type":"binary-expr","locations":[{"start":{"line":8,"column":51},"end":{"line":8,"column":61}},{"start":{"line":8,"column":65},"end":{"line":8,"column":67}}],"line":8},"5":{"loc":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"type":"binary-expr","locations":[{"start":{"line":11,"column":23},"end":{"line":11,"column":27}},{"start":{"line":11,"column":31},"end":{"line":11,"column":51}},{"start":{"line":11,"column":56},"end":{"line":13,"column":1}}],"line":11},"6":{"loc":{"start":{"line":12,"column":11},"end":{"line":12,"column":61}},"type":"cond-expr","locations":[{"start":{"line":12,"column":37},"end":{"line":12,"column":40}},{"start":{"line":12,"column":43},"end":{"line":12,"column":61}}],"line":12},"7":{"loc":{"start":{"line":12,"column":12},"end":{"line":12,"column":33}},"type":"binary-expr","locations":[{"start":{"line":12,"column":12},"end":{"line":12,"column":15}},{"start":{"line":12,"column":19},"end":{"line":12,"column":33}}],"line":12},"8":{"loc":{"start":{"line":43,"column":16},"end":{"line":44,"column":32}},"type":"if","locations":[{"start":{"line":43,"column":16},"end":{"line":44,"column":32}},{"start":{"line":43,"column":16},"end":{"line":44,"column":32}}],"line":43}},"s":{"0":1,"1":8,"2":0,"3":4,"4":8,"5":8,"6":0,"7":0,"8":0,"9":0,"10":12,"11":4,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":0,"24":2,"25":2,"26":2,"27":2,"28":2,"29":2,"30":2,"31":0,"32":2,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":1,"42":1,"43":1,"44":1,"45":1,"46":1,"47":0,"48":1},"f":{"0":4,"1":8,"2":0,"3":4,"4":8,"5":0,"6":12,"7":1,"8":1,"9":1,"10":2,"11":2,"12":0,"13":0,"14":1,"15":1},"b":{"0":[1,1,1],"1":[8,0],"2":[4,4],"3":[4,8],"4":[4,4],"5":[1,1,1],"6":[1,0],"7":[1,1],"8":[0,2]},"inputSourceMap":{"version":3,"file":"C:/Users/Administrator/Desktop/Full-Stack Projects/Small-Blog/API/src/model/token.ts","sources":["C:/Users/Administrator/Desktop/Full-Stack Projects/Small-Blog/API/src/model/token.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;AAAA,gEAAwC;AAWxC,MAAa,KAAK;IACV,WAAW,CACf,KAAa,EACb,IAAY,EACZ,MAAe;;YAEf,IAAI;gBACF,MAAM,IAAI,GAAG,MAAM,gBAAM,CAAC,OAAO,EAAE,CAAC;gBACpC,MAAM,GAAG,GACP,uEAAuE,CAAC;gBAC1E,MAAM,IAAI,CAAC,KAAK,CAAC,GAAG,EAAE;oBACpB,MAAM;oBACN,KAAK;oBACL,IAAI;oBACJ,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI,GAAG,EAAE;iBACjC,CAAC,CAAC;gBACH,IAAI,CAAC,OAAO,EAAE,CAAC;aAChB;YAAC,OAAO,GAAG,EAAE;gBACZ,MAAM,IAAI,KAAK,CAAC,sCAAsC,GAAG,EAAE,CAAC,CAAC;aAC9D;QACH,CAAC;KAAA;IAEK,QAAQ,CAAC,EAAU;;YACvB,IAAI;gBACF,MAAM,IAAI,GAAG,MAAM,gBAAM,CAAC,OAAO,EAAE,CAAC;gBACpC,MAAM,GAAG,GAAG,sCAAsC,CAAC;gBACnD,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;gBAC3C,IAAI,CAAC,OAAO,EAAE,CAAC;gBACf,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,SAAS,GAAG,IAAI,CAAC,GAAG,EAAE;oBAAE,OAAO,IAAI,CAAC;gBACxD,OAAO,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;aACvB;YAAC,OAAO,GAAG,EAAE;gBACZ,MAAM,IAAI,KAAK,CAAC,qCAAqC,CAAC,CAAC;aACxD;QACH,CAAC;KAAA;IAEK,YAAY,CAAC,EAAU;;YAC3B,IAAI;gBACF,MAAM,IAAI,GAAG,MAAM,gBAAM,CAAC,OAAO,EAAE,CAAC;gBACpC,MAAM,GAAG,GAAG,iDAAiD,CAAC;gBAC9D,MAAM,IAAI,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;gBAC5B,IAAI,CAAC,OAAO,EAAE,CAAC;aAChB;YAAC,OAAO,GAAG,EAAE;gBACZ,MAAM,IAAI,KAAK,CAAC,qCAAqC,CAAC,CAAC;aACxD;QACH,CAAC;KAAA;IAEK,WAAW,CAAC,EAAU;;YAC1B,IAAI;gBACF,MAAM,IAAI,GAAG,MAAM,gBAAM,CAAC,OAAO,EAAE,CAAC;gBACpC,MAAM,GAAG,GAAG,oCAAoC,CAAC;gBACjD,MAAM,IAAI,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;gBAC5B,IAAI,CAAC,OAAO,EAAE,CAAC;aAChB;YAAC,OAAO,GAAG,EAAE;gBACZ,MAAM,IAAI,KAAK,CAAC,2CAA2C,CAAC,CAAC;aAC9D;QACH,CAAC;KAAA;CACF;AAxDD,sBAwDC","sourcesContent":["import Client from '../database/client';\r\n\r\ninterface IToken {\r\n  id?: number;\r\n  userId: number;\r\n  token: string;\r\n  code: string;\r\n  verified: boolean;\r\n  createdAt?: Date;\r\n}\r\n\r\nexport class Token {\r\n  async createToken(\r\n    token: string,\r\n    code: string,\r\n    userId?: number\r\n  ): Promise<void> {\r\n    try {\r\n      const conn = await Client.connect();\r\n      const sql =\r\n        'INSERT INTO tokens (userid,token,code,createdat) VALUES ($1,$2,$3,$4)';\r\n      await conn.query(sql, [\r\n        userId,\r\n        token,\r\n        code,\r\n        Date.now() + 15 * 60 * 1000 + '',\r\n      ]);\r\n      conn.release();\r\n    } catch (err) {\r\n      throw new Error(`Cannot create reset password token ${err}`);\r\n    }\r\n  }\r\n\r\n  async getToken(id: string): Promise<IToken | null> {\r\n    try {\r\n      const conn = await Client.connect();\r\n      const sql = 'SELECT * FROM tokens WHERE userid=$1';\r\n      const result = await conn.query(sql, [id]);\r\n      conn.release();\r\n      if (+result.rows[0].createdat < Date.now()) return null;\r\n      return result.rows[0];\r\n    } catch (err) {\r\n      throw new Error(`Cannot get the reset password token`);\r\n    }\r\n  }\r\n\r\n  async verifiedCode(id: string): Promise<void> {\r\n    try {\r\n      const conn = await Client.connect();\r\n      const sql = 'UPDATE tokens SET verified=TRUE WHERE userid=$1';\r\n      await conn.query(sql, [id]);\r\n      conn.release();\r\n    } catch (err) {\r\n      throw new Error(`Cannot get the reset password token`);\r\n    }\r\n  }\r\n\r\n  async removeToken(id: string): Promise<void> {\r\n    try {\r\n      const conn = await Client.connect();\r\n      const sql = 'DELETE FROM tokens WHERE userid=$1';\r\n      await conn.query(sql, [id]);\r\n      conn.release();\r\n    } catch (err) {\r\n      throw new Error(`An error happend while remove reset token`);\r\n    }\r\n  }\r\n}\r\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"2fba286f142ad665b5560a0e16fc97e59989295c","contentHash":"3570928e42ed4f1aac62ba9b2f651f39131a96097e21ca117ced57337abf83df"},"C:\\Users\\Administrator\\Desktop\\Full-Stack Projects\\Small-Blog\\API\\src\\handler\\post.ts":{"path":"C:\\Users\\Administrator\\Desktop\\Full-Stack Projects\\Small-Blog\\API\\src\\handler\\post.ts","statementMap":{"0":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"1":{"start":{"line":3,"column":28},"end":{"line":3,"column":110}},"2":{"start":{"line":3,"column":91},"end":{"line":3,"column":106}},"3":{"start":{"line":4,"column":4},"end":{"line":9,"column":7}},"4":{"start":{"line":5,"column":36},"end":{"line":5,"column":97}},"5":{"start":{"line":5,"column":42},"end":{"line":5,"column":70}},"6":{"start":{"line":5,"column":85},"end":{"line":5,"column":95}},"7":{"start":{"line":6,"column":35},"end":{"line":6,"column":100}},"8":{"start":{"line":6,"column":41},"end":{"line":6,"column":73}},"9":{"start":{"line":6,"column":88},"end":{"line":6,"column":98}},"10":{"start":{"line":7,"column":32},"end":{"line":7,"column":116}},"11":{"start":{"line":8,"column":8},"end":{"line":8,"column":78}},"12":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"13":{"start":{"line":12,"column":4},"end":{"line":12,"column":62}},"14":{"start":{"line":14,"column":0},"end":{"line":14,"column":62}},"15":{"start":{"line":15,"column":19},"end":{"line":15,"column":41}},"16":{"start":{"line":16,"column":15},"end":{"line":16,"column":39}},"17":{"start":{"line":17,"column":17},"end":{"line":17,"column":59}},"18":{"start":{"line":18,"column":24},"end":{"line":18,"column":79}},"19":{"start":{"line":19,"column":22},"end":{"line":19,"column":75}},"20":{"start":{"line":20,"column":21},"end":{"line":20,"column":73}},"21":{"start":{"line":21,"column":19},"end":{"line":21,"column":64}},"22":{"start":{"line":22,"column":25},"end":{"line":22,"column":69}},"23":{"start":{"line":23,"column":14},"end":{"line":23,"column":31}},"24":{"start":{"line":24,"column":21},"end":{"line":24,"column":22}},"25":{"start":{"line":25,"column":14},"end":{"line":34,"column":2}},"26":{"start":{"line":25,"column":28},"end":{"line":34,"column":2}},"27":{"start":{"line":26,"column":4},"end":{"line":33,"column":5}},"28":{"start":{"line":27,"column":23},"end":{"line":27,"column":55}},"29":{"start":{"line":28,"column":22},"end":{"line":28,"column":47}},"30":{"start":{"line":29,"column":8},"end":{"line":29,"column":73}},"31":{"start":{"line":32,"column":8},"end":{"line":32,"column":54}},"32":{"start":{"line":35,"column":15},"end":{"line":55,"column":2}},"33":{"start":{"line":35,"column":29},"end":{"line":55,"column":2}},"34":{"start":{"line":36,"column":4},"end":{"line":54,"column":5}},"35":{"start":{"line":37,"column":21},"end":{"line":37,"column":48}},"36":{"start":{"line":38,"column":23},"end":{"line":38,"column":39}},"37":{"start":{"line":39,"column":22},"end":{"line":39,"column":43}},"38":{"start":{"line":40,"column":21},"end":{"line":40,"column":46}},"39":{"start":{"line":41,"column":26},"end":{"line":41,"column":79}},"40":{"start":{"line":42,"column":27},"end":{"line":42,"column":47}},"41":{"start":{"line":43,"column":30},"end":{"line":43,"column":66}},"42":{"start":{"line":44,"column":21},"end":{"line":44,"column":68}},"43":{"start":{"line":45,"column":21},"end":{"line":45,"column":44}},"44":{"start":{"line":46,"column":8},"end":{"line":50,"column":11}},"45":{"start":{"line":53,"column":8},"end":{"line":53,"column":54}},"46":{"start":{"line":56,"column":13},"end":{"line":71,"column":2}},"47":{"start":{"line":56,"column":33},"end":{"line":71,"column":2}},"48":{"start":{"line":57,"column":4},"end":{"line":70,"column":5}},"49":{"start":{"line":58,"column":21},"end":{"line":58,"column":56}},"50":{"start":{"line":59,"column":8},"end":{"line":61,"column":9}},"51":{"start":{"line":60,"column":12},"end":{"line":60,"column":129}},"52":{"start":{"line":62,"column":8},"end":{"line":66,"column":11}},"53":{"start":{"line":69,"column":8},"end":{"line":69,"column":28}},"54":{"start":{"line":72,"column":15},"end":{"line":81,"column":2}},"55":{"start":{"line":72,"column":29},"end":{"line":81,"column":2}},"56":{"start":{"line":73,"column":4},"end":{"line":80,"column":5}},"57":{"start":{"line":74,"column":23},"end":{"line":74,"column":42}},"58":{"start":{"line":75,"column":21},"end":{"line":75,"column":95}},"59":{"start":{"line":76,"column":8},"end":{"line":76,"column":82}},"60":{"start":{"line":79,"column":8},"end":{"line":79,"column":57}},"61":{"start":{"line":82,"column":15},"end":{"line":103,"column":2}},"62":{"start":{"line":82,"column":35},"end":{"line":103,"column":2}},"63":{"start":{"line":83,"column":4},"end":{"line":102,"column":5}},"64":{"start":{"line":84,"column":21},"end":{"line":84,"column":89}},"65":{"start":{"line":85,"column":8},"end":{"line":87,"column":9}},"66":{"start":{"line":86,"column":12},"end":{"line":86,"column":139}},"67":{"start":{"line":88,"column":8},"end":{"line":97,"column":9}},"68":{"start":{"line":89,"column":12},"end":{"line":96,"column":13}},"69":{"start":{"line":90,"column":16},"end":{"line":90,"column":57}},"70":{"start":{"line":93,"column":16},"end":{"line":95,"column":87}},"71":{"start":{"line":98,"column":8},"end":{"line":98,"column":75}},"72":{"start":{"line":101,"column":8},"end":{"line":101,"column":58}},"73":{"start":{"line":104,"column":15},"end":{"line":116,"column":2}},"74":{"start":{"line":104,"column":35},"end":{"line":116,"column":2}},"75":{"start":{"line":105,"column":4},"end":{"line":115,"column":5}},"76":{"start":{"line":106,"column":21},"end":{"line":106,"column":79}},"77":{"start":{"line":107,"column":8},"end":{"line":109,"column":9}},"78":{"start":{"line":108,"column":12},"end":{"line":108,"column":139}},"79":{"start":{"line":110,"column":8},"end":{"line":110,"column":49}},"80":{"start":{"line":111,"column":8},"end":{"line":111,"column":71}},"81":{"start":{"line":114,"column":8},"end":{"line":114,"column":57}},"82":{"start":{"line":117,"column":19},"end":{"line":128,"column":1}},"83":{"start":{"line":118,"column":4},"end":{"line":121,"column":170}},"84":{"start":{"line":122,"column":4},"end":{"line":126,"column":171}},"85":{"start":{"line":127,"column":4},"end":{"line":127,"column":54}},"86":{"start":{"line":129,"column":0},"end":{"line":129,"column":29}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":44},"end":{"line":2,"column":45}},"loc":{"start":{"line":2,"column":89},"end":{"line":10,"column":1}},"line":2},"1":{"name":"adopt","decl":{"start":{"line":3,"column":13},"end":{"line":3,"column":18}},"loc":{"start":{"line":3,"column":26},"end":{"line":3,"column":112}},"line":3},"2":{"name":"(anonymous_2)","decl":{"start":{"line":3,"column":70},"end":{"line":3,"column":71}},"loc":{"start":{"line":3,"column":89},"end":{"line":3,"column":108}},"line":3},"3":{"name":"(anonymous_3)","decl":{"start":{"line":4,"column":36},"end":{"line":4,"column":37}},"loc":{"start":{"line":4,"column":63},"end":{"line":9,"column":5}},"line":4},"4":{"name":"fulfilled","decl":{"start":{"line":5,"column":17},"end":{"line":5,"column":26}},"loc":{"start":{"line":5,"column":34},"end":{"line":5,"column":99}},"line":5},"5":{"name":"rejected","decl":{"start":{"line":6,"column":17},"end":{"line":6,"column":25}},"loc":{"start":{"line":6,"column":33},"end":{"line":6,"column":102}},"line":6},"6":{"name":"step","decl":{"start":{"line":7,"column":17},"end":{"line":7,"column":21}},"loc":{"start":{"line":7,"column":30},"end":{"line":7,"column":118}},"line":7},"7":{"name":"(anonymous_7)","decl":{"start":{"line":11,"column":56},"end":{"line":11,"column":57}},"loc":{"start":{"line":11,"column":71},"end":{"line":13,"column":1}},"line":11},"8":{"name":"(anonymous_8)","decl":{"start":{"line":25,"column":14},"end":{"line":25,"column":15}},"loc":{"start":{"line":25,"column":28},"end":{"line":34,"column":2}},"line":25},"9":{"name":"(anonymous_9)","decl":{"start":{"line":25,"column":62},"end":{"line":25,"column":63}},"loc":{"start":{"line":25,"column":75},"end":{"line":34,"column":1}},"line":25},"10":{"name":"(anonymous_10)","decl":{"start":{"line":35,"column":15},"end":{"line":35,"column":16}},"loc":{"start":{"line":35,"column":29},"end":{"line":55,"column":2}},"line":35},"11":{"name":"(anonymous_11)","decl":{"start":{"line":35,"column":63},"end":{"line":35,"column":64}},"loc":{"start":{"line":35,"column":76},"end":{"line":55,"column":1}},"line":35},"12":{"name":"(anonymous_12)","decl":{"start":{"line":56,"column":13},"end":{"line":56,"column":14}},"loc":{"start":{"line":56,"column":33},"end":{"line":71,"column":2}},"line":56},"13":{"name":"(anonymous_13)","decl":{"start":{"line":56,"column":67},"end":{"line":56,"column":68}},"loc":{"start":{"line":56,"column":80},"end":{"line":71,"column":1}},"line":56},"14":{"name":"(anonymous_14)","decl":{"start":{"line":72,"column":15},"end":{"line":72,"column":16}},"loc":{"start":{"line":72,"column":29},"end":{"line":81,"column":2}},"line":72},"15":{"name":"(anonymous_15)","decl":{"start":{"line":72,"column":63},"end":{"line":72,"column":64}},"loc":{"start":{"line":72,"column":76},"end":{"line":81,"column":1}},"line":72},"16":{"name":"(anonymous_16)","decl":{"start":{"line":82,"column":15},"end":{"line":82,"column":16}},"loc":{"start":{"line":82,"column":35},"end":{"line":103,"column":2}},"line":82},"17":{"name":"(anonymous_17)","decl":{"start":{"line":82,"column":69},"end":{"line":82,"column":70}},"loc":{"start":{"line":82,"column":82},"end":{"line":103,"column":1}},"line":82},"18":{"name":"(anonymous_18)","decl":{"start":{"line":104,"column":15},"end":{"line":104,"column":16}},"loc":{"start":{"line":104,"column":35},"end":{"line":116,"column":2}},"line":104},"19":{"name":"(anonymous_19)","decl":{"start":{"line":104,"column":69},"end":{"line":104,"column":70}},"loc":{"start":{"line":104,"column":82},"end":{"line":116,"column":1}},"line":104},"20":{"name":"(anonymous_20)","decl":{"start":{"line":117,"column":19},"end":{"line":117,"column":20}},"loc":{"start":{"line":117,"column":28},"end":{"line":128,"column":1}},"line":117}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":17},"end":{"line":2,"column":21}},{"start":{"line":2,"column":25},"end":{"line":2,"column":39}},{"start":{"line":2,"column":44},"end":{"line":10,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":35},"end":{"line":3,"column":109}},"type":"cond-expr","locations":[{"start":{"line":3,"column":56},"end":{"line":3,"column":61}},{"start":{"line":3,"column":64},"end":{"line":3,"column":109}}],"line":3},"2":{"loc":{"start":{"line":4,"column":16},"end":{"line":4,"column":34}},"type":"binary-expr","locations":[{"start":{"line":4,"column":16},"end":{"line":4,"column":17}},{"start":{"line":4,"column":22},"end":{"line":4,"column":33}}],"line":4},"3":{"loc":{"start":{"line":7,"column":32},"end":{"line":7,"column":115}},"type":"cond-expr","locations":[{"start":{"line":7,"column":46},"end":{"line":7,"column":67}},{"start":{"line":7,"column":70},"end":{"line":7,"column":115}}],"line":7},"4":{"loc":{"start":{"line":8,"column":51},"end":{"line":8,"column":67}},"type":"binary-expr","locations":[{"start":{"line":8,"column":51},"end":{"line":8,"column":61}},{"start":{"line":8,"column":65},"end":{"line":8,"column":67}}],"line":8},"5":{"loc":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"type":"binary-expr","locations":[{"start":{"line":11,"column":23},"end":{"line":11,"column":27}},{"start":{"line":11,"column":31},"end":{"line":11,"column":51}},{"start":{"line":11,"column":56},"end":{"line":13,"column":1}}],"line":11},"6":{"loc":{"start":{"line":12,"column":11},"end":{"line":12,"column":61}},"type":"cond-expr","locations":[{"start":{"line":12,"column":37},"end":{"line":12,"column":40}},{"start":{"line":12,"column":43},"end":{"line":12,"column":61}}],"line":12},"7":{"loc":{"start":{"line":12,"column":12},"end":{"line":12,"column":33}},"type":"binary-expr","locations":[{"start":{"line":12,"column":12},"end":{"line":12,"column":15}},{"start":{"line":12,"column":19},"end":{"line":12,"column":33}}],"line":12},"8":{"loc":{"start":{"line":27,"column":23},"end":{"line":27,"column":55}},"type":"binary-expr","locations":[{"start":{"line":27,"column":23},"end":{"line":27,"column":47}},{"start":{"line":27,"column":51},"end":{"line":27,"column":55}}],"line":27},"9":{"loc":{"start":{"line":37,"column":21},"end":{"line":37,"column":48}},"type":"binary-expr","locations":[{"start":{"line":37,"column":21},"end":{"line":37,"column":43}},{"start":{"line":37,"column":47},"end":{"line":37,"column":48}}],"line":37},"10":{"loc":{"start":{"line":39,"column":22},"end":{"line":39,"column":43}},"type":"binary-expr","locations":[{"start":{"line":39,"column":22},"end":{"line":39,"column":37}},{"start":{"line":39,"column":41},"end":{"line":39,"column":43}}],"line":39},"11":{"loc":{"start":{"line":44,"column":21},"end":{"line":44,"column":68}},"type":"cond-expr","locations":[{"start":{"line":44,"column":56},"end":{"line":44,"column":60}},{"start":{"line":44,"column":63},"end":{"line":44,"column":68}}],"line":44},"12":{"loc":{"start":{"line":45,"column":21},"end":{"line":45,"column":44}},"type":"cond-expr","locations":[{"start":{"line":45,"column":32},"end":{"line":45,"column":36}},{"start":{"line":45,"column":39},"end":{"line":45,"column":44}}],"line":45},"13":{"loc":{"start":{"line":59,"column":8},"end":{"line":61,"column":9}},"type":"if","locations":[{"start":{"line":59,"column":8},"end":{"line":61,"column":9}},{"start":{"line":59,"column":8},"end":{"line":61,"column":9}}],"line":59},"14":{"loc":{"start":{"line":85,"column":8},"end":{"line":87,"column":9}},"type":"if","locations":[{"start":{"line":85,"column":8},"end":{"line":87,"column":9}},{"start":{"line":85,"column":8},"end":{"line":87,"column":9}}],"line":85},"15":{"loc":{"start":{"line":85,"column":14},"end":{"line":85,"column":67}},"type":"cond-expr","locations":[{"start":{"line":85,"column":49},"end":{"line":85,"column":55}},{"start":{"line":85,"column":58},"end":{"line":85,"column":67}}],"line":85},"16":{"loc":{"start":{"line":85,"column":14},"end":{"line":85,"column":46}},"type":"binary-expr","locations":[{"start":{"line":85,"column":14},"end":{"line":85,"column":27}},{"start":{"line":85,"column":31},"end":{"line":85,"column":46}}],"line":85},"17":{"loc":{"start":{"line":88,"column":8},"end":{"line":97,"column":9}},"type":"if","locations":[{"start":{"line":88,"column":8},"end":{"line":97,"column":9}},{"start":{"line":88,"column":8},"end":{"line":97,"column":9}}],"line":88},"18":{"loc":{"start":{"line":107,"column":8},"end":{"line":109,"column":9}},"type":"if","locations":[{"start":{"line":107,"column":8},"end":{"line":109,"column":9}},{"start":{"line":107,"column":8},"end":{"line":109,"column":9}}],"line":107}},"s":{"0":1,"1":10,"2":0,"3":8,"4":10,"5":10,"6":0,"7":0,"8":0,"9":0,"10":18,"11":8,"12":1,"13":5,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":0,"32":1,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":1,"47":2,"48":2,"49":2,"50":2,"51":1,"52":1,"53":0,"54":1,"55":2,"56":2,"57":2,"58":2,"59":2,"60":0,"61":1,"62":2,"63":2,"64":2,"65":2,"66":0,"67":2,"68":1,"69":1,"70":0,"71":2,"72":0,"73":1,"74":1,"75":1,"76":1,"77":1,"78":0,"79":1,"80":1,"81":0,"82":1,"83":1,"84":1,"85":1,"86":1},"f":{"0":8,"1":10,"2":0,"3":8,"4":10,"5":0,"6":18,"7":5,"8":1,"9":1,"10":0,"11":0,"12":2,"13":2,"14":2,"15":2,"16":2,"17":2,"18":1,"19":1,"20":1},"b":{"0":[1,1,1],"1":[10,0],"2":[8,8],"3":[8,10],"4":[8,8],"5":[1,1,1],"6":[5,0],"7":[5,5],"8":[1,1],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[1,1],"14":[0,2],"15":[0,2],"16":[2,2],"17":[1,1],"18":[0,1]},"inputSourceMap":{"version":3,"file":"C:/Users/Administrator/Desktop/Full-Stack Projects/Small-Blog/API/src/handler/post.ts","sources":["C:/Users/Administrator/Desktop/Full-Stack Projects/Small-Blog/API/src/handler/post.ts"],"names":[],"mappings":"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","sourcesContent":["import { Application, NextFunction, Request, Response } from 'express';\r\nimport { unlink } from 'fs/promises';\r\n\r\nimport { Post } from '../model/post';\r\nimport upload from '../util/upload';\r\nimport optimizeImage from '../middleware/optimizeImage';\r\nimport verifyToken from '../middleware/verifyToken';\r\nimport validation from '../middleware/validation';\r\nimport APIError from '../Error/ApiError';\r\n\r\nimport {\r\n  validatePostCreate,\r\n  validatePostDelete,\r\n  validatePostUpdate,\r\n} from '../util/validators/postValidators';\r\n\r\nconst store = new Post();\r\n\r\nconst postsPerPage = 6;\r\n\r\nconst index = async (req: Request, res: Response): Promise<void> => {\r\n  try {\r\n    const author = Number(req.query.author) || null;\r\n    const posts = await store.index(author);\r\n    res.json({ message: 'retrived posts sucessfully', data: posts });\r\n  } catch (err) {\r\n    throw new Error(`couldn't get posts, ${err}`);\r\n  }\r\n};\r\n\r\nconst filter = async (req: Request, res: Response): Promise<void> => {\r\n  try {\r\n    const page = Number(req.query.page) || 1;\r\n    const author = req.query.author as string | undefined;\r\n    const query = (req.query.query as string) || '';\r\n    const skip = (page - 1) * postsPerPage;\r\n    const postsInfo = await store.filter(author, query, postsPerPage, skip);\r\n    const postsCount = postsInfo.postsCount;\r\n    const numberOfPages = Math.ceil(postsCount / postsPerPage);\r\n    const next = page * postsPerPage < postsCount ? true : false;\r\n    const prev = page > 1 ? true : false;\r\n    res.status(200).json({\r\n      message: 'retrived posts sucessfully',\r\n      posts: postsInfo.posts,\r\n      pagination: { postsCount, numberOfPages, page, next, prev },\r\n    });\r\n  } catch (err) {\r\n    throw new Error(`couldn't get posts, ${err}`);\r\n  }\r\n};\r\n\r\nconst show = async (\r\n  req: Request,\r\n  res: Response,\r\n  next: NextFunction\r\n): Promise<void> => {\r\n  try {\r\n    const post = await store.show(req.params.postId);\r\n    if (!post.post) {\r\n      return next(\r\n        new APIError(\r\n          `couldn't find post ${req.params.postId}`,\r\n          404,\r\n          'failed to find the post',\r\n          true\r\n        )\r\n      );\r\n    }\r\n    res.status(200).json({\r\n      message: 'retrived post sucessfully',\r\n      post: post.post,\r\n      comments: post.comments,\r\n    });\r\n  } catch (err) {\r\n    res.sendStatus(404);\r\n  }\r\n};\r\nconst create = async (req: Request, res: Response): Promise<void> => {\r\n  try {\r\n    const author = res.locals.username;\r\n    const post = await store.create({ ...req.body, author });\r\n    res.status(201).json({ message: 'post created sucessfully', data: post });\r\n  } catch (err) {\r\n    throw new Error(`couldn't create post , ${err}`);\r\n  }\r\n};\r\n\r\nconst update = async (\r\n  req: Request,\r\n  res: Response,\r\n  next: NextFunction\r\n): Promise<void | Response> => {\r\n  try {\r\n    const post = await store.update(\r\n      req.params.postId,\r\n      req.body,\r\n      res.locals.username\r\n    );\r\n    if (!post?.post) {\r\n      return next(\r\n        new APIError(\r\n          `couldn't find post ${req.params.postId} to update`,\r\n          404,\r\n          'failed to find the post',\r\n          true\r\n        )\r\n      );\r\n    }\r\n    if (req.body.image) {\r\n      try {\r\n        await unlink(post.image);\r\n      } catch (err) {\r\n        return res\r\n          .status(500)\r\n          .json({ warning: \"Image wasn't deleted, path error\", data: post });\r\n      }\r\n    }\r\n    res.json({ message: 'post updated sucessfully', data: post.post });\r\n  } catch (err) {\r\n    throw new Error(`couldn't updated post , ${err}`);\r\n  }\r\n};\r\nconst remove = async (\r\n  req: Request,\r\n  res: Response,\r\n  next: NextFunction\r\n): Promise<void> => {\r\n  try {\r\n    const post = await store.delete(req.params.postId, res.locals.username);\r\n    if (!post) {\r\n      return next(\r\n        new APIError(\r\n          `couldn't find post ${req.params.postId} to delete`,\r\n          404,\r\n          'failed to find the post',\r\n          true\r\n        )\r\n      );\r\n    }\r\n    await unlink(post.image);\r\n    res.json({ message: 'posts deleted sucessfully', data: post });\r\n  } catch (err) {\r\n    throw new Error(`couldn't delete post , ${err}`);\r\n  }\r\n};\r\n\r\nconst postRoutes = (app: Application) => {\r\n  app\r\n    .route('/posts')\r\n    .get(verifyToken, index)\r\n    .post(\r\n      verifyToken,\r\n      upload.single('image'),\r\n      validatePostCreate(),\r\n      validation,\r\n      optimizeImage,\r\n      create\r\n    );\r\n\r\n  app\r\n    .route('/posts/:postId')\r\n    .get(verifyToken, show)\r\n    .delete(verifyToken, validatePostDelete(), validation, remove)\r\n    .patch(\r\n      verifyToken,\r\n      upload.single('image'),\r\n      validatePostUpdate(),\r\n      validation,\r\n      optimizeImage,\r\n      update\r\n    );\r\n\r\n  app.get('/filter', verifyToken, filter);\r\n};\r\n\r\nexport default postRoutes;\r\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"eb346fb5bf4dc41f8c00aa3c3207acd320c048ab","contentHash":"b74f5f5fd5e04a9a4b45d51cc500bc62d1da3be6c16f8e8d181c15eddaef20fc"},"C:\\Users\\Administrator\\Desktop\\Full-Stack Projects\\Small-Blog\\API\\src\\model\\post.ts":{"path":"C:\\Users\\Administrator\\Desktop\\Full-Stack Projects\\Small-Blog\\API\\src\\model\\post.ts","statementMap":{"0":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"1":{"start":{"line":3,"column":28},"end":{"line":3,"column":110}},"2":{"start":{"line":3,"column":91},"end":{"line":3,"column":106}},"3":{"start":{"line":4,"column":4},"end":{"line":9,"column":7}},"4":{"start":{"line":5,"column":36},"end":{"line":5,"column":97}},"5":{"start":{"line":5,"column":42},"end":{"line":5,"column":70}},"6":{"start":{"line":5,"column":85},"end":{"line":5,"column":95}},"7":{"start":{"line":6,"column":35},"end":{"line":6,"column":100}},"8":{"start":{"line":6,"column":41},"end":{"line":6,"column":73}},"9":{"start":{"line":6,"column":88},"end":{"line":6,"column":98}},"10":{"start":{"line":7,"column":32},"end":{"line":7,"column":116}},"11":{"start":{"line":8,"column":8},"end":{"line":8,"column":78}},"12":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"13":{"start":{"line":12,"column":4},"end":{"line":12,"column":62}},"14":{"start":{"line":14,"column":0},"end":{"line":14,"column":62}},"15":{"start":{"line":15,"column":0},"end":{"line":15,"column":22}},"16":{"start":{"line":16,"column":17},"end":{"line":16,"column":63}},"17":{"start":{"line":19,"column":8},"end":{"line":30,"column":11}},"18":{"start":{"line":20,"column":12},"end":{"line":29,"column":13}},"19":{"start":{"line":21,"column":29},"end":{"line":21,"column":61}},"20":{"start":{"line":22,"column":28},"end":{"line":22,"column":91}},"21":{"start":{"line":23,"column":31},"end":{"line":23,"column":52}},"22":{"start":{"line":24,"column":16},"end":{"line":24,"column":31}},"23":{"start":{"line":25,"column":16},"end":{"line":25,"column":35}},"24":{"start":{"line":28,"column":16},"end":{"line":28,"column":59}},"25":{"start":{"line":33,"column":8},"end":{"line":46,"column":11}},"26":{"start":{"line":34,"column":12},"end":{"line":45,"column":13}},"27":{"start":{"line":35,"column":29},"end":{"line":35,"column":61}},"28":{"start":{"line":36,"column":28},"end":{"line":36,"column":61}},"29":{"start":{"line":37,"column":31},"end":{"line":37,"column":58}},"30":{"start":{"line":38,"column":29},"end":{"line":38,"column":69}},"31":{"start":{"line":39,"column":32},"end":{"line":39,"column":60}},"32":{"start":{"line":40,"column":16},"end":{"line":40,"column":31}},"33":{"start":{"line":41,"column":16},"end":{"line":41,"column":72}},"34":{"start":{"line":44,"column":16},"end":{"line":44,"column":65}},"35":{"start":{"line":49,"column":8},"end":{"line":60,"column":11}},"36":{"start":{"line":50,"column":12},"end":{"line":59,"column":13}},"37":{"start":{"line":51,"column":29},"end":{"line":51,"column":61}},"38":{"start":{"line":52,"column":28},"end":{"line":52,"column":61}},"39":{"start":{"line":53,"column":31},"end":{"line":53,"column":58}},"40":{"start":{"line":54,"column":16},"end":{"line":54,"column":31}},"41":{"start":{"line":55,"column":16},"end":{"line":55,"column":38}},"42":{"start":{"line":58,"column":16},"end":{"line":58,"column":65}},"43":{"start":{"line":63,"column":8},"end":{"line":86,"column":11}},"44":{"start":{"line":64,"column":12},"end":{"line":85,"column":13}},"45":{"start":{"line":65,"column":29},"end":{"line":65,"column":61}},"46":{"start":{"line":66,"column":28},"end":{"line":66,"column":72}},"47":{"start":{"line":67,"column":31},"end":{"line":67,"column":58}},"48":{"start":{"line":68,"column":16},"end":{"line":71,"column":17}},"49":{"start":{"line":69,"column":20},"end":{"line":69,"column":35}},"50":{"start":{"line":70,"column":20},"end":{"line":70,"column":32}},"51":{"start":{"line":72,"column":29},"end":{"line":72,"column":114}},"52":{"start":{"line":73,"column":32},"end":{"line":79,"column":18}},"53":{"start":{"line":80,"column":16},"end":{"line":80,"column":31}},"54":{"start":{"line":81,"column":16},"end":{"line":81,"column":78}},"55":{"start":{"line":84,"column":16},"end":{"line":84,"column":68}},"56":{"start":{"line":89,"column":8},"end":{"line":106,"column":11}},"57":{"start":{"line":90,"column":12},"end":{"line":105,"column":13}},"58":{"start":{"line":91,"column":29},"end":{"line":91,"column":61}},"59":{"start":{"line":92,"column":28},"end":{"line":92,"column":66}},"60":{"start":{"line":93,"column":31},"end":{"line":93,"column":58}},"61":{"start":{"line":94,"column":16},"end":{"line":97,"column":17}},"62":{"start":{"line":95,"column":20},"end":{"line":95,"column":35}},"63":{"start":{"line":96,"column":20},"end":{"line":96,"column":32}},"64":{"start":{"line":98,"column":29},"end":{"line":98,"column":72}},"65":{"start":{"line":99,"column":32},"end":{"line":99,"column":60}},"66":{"start":{"line":100,"column":16},"end":{"line":100,"column":31}},"67":{"start":{"line":101,"column":16},"end":{"line":101,"column":39}},"68":{"start":{"line":104,"column":16},"end":{"line":104,"column":68}},"69":{"start":{"line":109,"column":8},"end":{"line":127,"column":11}},"70":{"start":{"line":110,"column":12},"end":{"line":126,"column":13}},"71":{"start":{"line":111,"column":29},"end":{"line":111,"column":61}},"72":{"start":{"line":112,"column":28},"end":{"line":112,"column":133}},"73":{"start":{"line":113,"column":31},"end":{"line":120,"column":18}},"74":{"start":{"line":121,"column":16},"end":{"line":121,"column":31}},"75":{"start":{"line":122,"column":16},"end":{"line":122,"column":38}},"76":{"start":{"line":125,"column":16},"end":{"line":125,"column":55}},"77":{"start":{"line":131,"column":8},"end":{"line":150,"column":11}},"78":{"start":{"line":132,"column":12},"end":{"line":149,"column":13}},"79":{"start":{"line":133,"column":35},"end":{"line":133,"column":71}},"80":{"start":{"line":134,"column":33},"end":{"line":134,"column":67}},"81":{"start":{"line":135,"column":36},"end":{"line":135,"column":81}},"82":{"start":{"line":136,"column":36},"end":{"line":136,"column":81}},"83":{"start":{"line":137,"column":40},"end":{"line":137,"column":113}},"84":{"start":{"line":139,"column":29},"end":{"line":139,"column":61}},"85":{"start":{"line":140,"column":28},"end":{"line":140,"column":43}},"86":{"start":{"line":141,"column":31},"end":{"line":141,"column":52}},"87":{"start":{"line":142,"column":29},"end":{"line":142,"column":68}},"88":{"start":{"line":143,"column":32},"end":{"line":143,"column":69}},"89":{"start":{"line":144,"column":16},"end":{"line":144,"column":31}},"90":{"start":{"line":145,"column":16},"end":{"line":145,"column":76}},"91":{"start":{"line":148,"column":16},"end":{"line":148,"column":59}},"92":{"start":{"line":153,"column":0},"end":{"line":153,"column":20}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":44},"end":{"line":2,"column":45}},"loc":{"start":{"line":2,"column":89},"end":{"line":10,"column":1}},"line":2},"1":{"name":"adopt","decl":{"start":{"line":3,"column":13},"end":{"line":3,"column":18}},"loc":{"start":{"line":3,"column":26},"end":{"line":3,"column":112}},"line":3},"2":{"name":"(anonymous_2)","decl":{"start":{"line":3,"column":70},"end":{"line":3,"column":71}},"loc":{"start":{"line":3,"column":89},"end":{"line":3,"column":108}},"line":3},"3":{"name":"(anonymous_3)","decl":{"start":{"line":4,"column":36},"end":{"line":4,"column":37}},"loc":{"start":{"line":4,"column":63},"end":{"line":9,"column":5}},"line":4},"4":{"name":"fulfilled","decl":{"start":{"line":5,"column":17},"end":{"line":5,"column":26}},"loc":{"start":{"line":5,"column":34},"end":{"line":5,"column":99}},"line":5},"5":{"name":"rejected","decl":{"start":{"line":6,"column":17},"end":{"line":6,"column":25}},"loc":{"start":{"line":6,"column":33},"end":{"line":6,"column":102}},"line":6},"6":{"name":"step","decl":{"start":{"line":7,"column":17},"end":{"line":7,"column":21}},"loc":{"start":{"line":7,"column":30},"end":{"line":7,"column":118}},"line":7},"7":{"name":"(anonymous_7)","decl":{"start":{"line":11,"column":56},"end":{"line":11,"column":57}},"loc":{"start":{"line":11,"column":71},"end":{"line":13,"column":1}},"line":11},"8":{"name":"(anonymous_8)","decl":{"start":{"line":18,"column":4},"end":{"line":18,"column":5}},"loc":{"start":{"line":18,"column":18},"end":{"line":31,"column":5}},"line":18},"9":{"name":"(anonymous_9)","decl":{"start":{"line":19,"column":47},"end":{"line":19,"column":48}},"loc":{"start":{"line":19,"column":60},"end":{"line":30,"column":9}},"line":19},"10":{"name":"(anonymous_10)","decl":{"start":{"line":32,"column":4},"end":{"line":32,"column":5}},"loc":{"start":{"line":32,"column":13},"end":{"line":47,"column":5}},"line":32},"11":{"name":"(anonymous_11)","decl":{"start":{"line":33,"column":47},"end":{"line":33,"column":48}},"loc":{"start":{"line":33,"column":60},"end":{"line":46,"column":9}},"line":33},"12":{"name":"(anonymous_12)","decl":{"start":{"line":48,"column":4},"end":{"line":48,"column":5}},"loc":{"start":{"line":48,"column":28},"end":{"line":61,"column":5}},"line":48},"13":{"name":"(anonymous_13)","decl":{"start":{"line":49,"column":47},"end":{"line":49,"column":48}},"loc":{"start":{"line":49,"column":60},"end":{"line":60,"column":9}},"line":49},"14":{"name":"(anonymous_14)","decl":{"start":{"line":62,"column":4},"end":{"line":62,"column":5}},"loc":{"start":{"line":62,"column":31},"end":{"line":87,"column":5}},"line":62},"15":{"name":"(anonymous_15)","decl":{"start":{"line":63,"column":47},"end":{"line":63,"column":48}},"loc":{"start":{"line":63,"column":60},"end":{"line":86,"column":9}},"line":63},"16":{"name":"(anonymous_16)","decl":{"start":{"line":88,"column":4},"end":{"line":88,"column":5}},"loc":{"start":{"line":88,"column":25},"end":{"line":107,"column":5}},"line":88},"17":{"name":"(anonymous_17)","decl":{"start":{"line":89,"column":47},"end":{"line":89,"column":48}},"loc":{"start":{"line":89,"column":60},"end":{"line":106,"column":9}},"line":89},"18":{"name":"(anonymous_18)","decl":{"start":{"line":108,"column":4},"end":{"line":108,"column":5}},"loc":{"start":{"line":108,"column":17},"end":{"line":128,"column":5}},"line":108},"19":{"name":"(anonymous_19)","decl":{"start":{"line":109,"column":47},"end":{"line":109,"column":48}},"loc":{"start":{"line":109,"column":60},"end":{"line":127,"column":9}},"line":109},"20":{"name":"(anonymous_20)","decl":{"start":{"line":130,"column":4},"end":{"line":130,"column":5}},"loc":{"start":{"line":130,"column":39},"end":{"line":151,"column":5}},"line":130},"21":{"name":"(anonymous_21)","decl":{"start":{"line":131,"column":47},"end":{"line":131,"column":48}},"loc":{"start":{"line":131,"column":60},"end":{"line":150,"column":9}},"line":131}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":17},"end":{"line":2,"column":21}},{"start":{"line":2,"column":25},"end":{"line":2,"column":39}},{"start":{"line":2,"column":44},"end":{"line":10,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":35},"end":{"line":3,"column":109}},"type":"cond-expr","locations":[{"start":{"line":3,"column":56},"end":{"line":3,"column":61}},{"start":{"line":3,"column":64},"end":{"line":3,"column":109}}],"line":3},"2":{"loc":{"start":{"line":4,"column":16},"end":{"line":4,"column":34}},"type":"binary-expr","locations":[{"start":{"line":4,"column":16},"end":{"line":4,"column":17}},{"start":{"line":4,"column":22},"end":{"line":4,"column":33}}],"line":4},"3":{"loc":{"start":{"line":7,"column":32},"end":{"line":7,"column":115}},"type":"cond-expr","locations":[{"start":{"line":7,"column":46},"end":{"line":7,"column":67}},{"start":{"line":7,"column":70},"end":{"line":7,"column":115}}],"line":7},"4":{"loc":{"start":{"line":8,"column":51},"end":{"line":8,"column":67}},"type":"binary-expr","locations":[{"start":{"line":8,"column":51},"end":{"line":8,"column":61}},{"start":{"line":8,"column":65},"end":{"line":8,"column":67}}],"line":8},"5":{"loc":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"type":"binary-expr","locations":[{"start":{"line":11,"column":23},"end":{"line":11,"column":27}},{"start":{"line":11,"column":31},"end":{"line":11,"column":51}},{"start":{"line":11,"column":56},"end":{"line":13,"column":1}}],"line":11},"6":{"loc":{"start":{"line":12,"column":11},"end":{"line":12,"column":61}},"type":"cond-expr","locations":[{"start":{"line":12,"column":37},"end":{"line":12,"column":40}},{"start":{"line":12,"column":43},"end":{"line":12,"column":61}}],"line":12},"7":{"loc":{"start":{"line":12,"column":12},"end":{"line":12,"column":33}},"type":"binary-expr","locations":[{"start":{"line":12,"column":12},"end":{"line":12,"column":15}},{"start":{"line":12,"column":19},"end":{"line":12,"column":33}}],"line":12},"8":{"loc":{"start":{"line":22,"column":51},"end":{"line":22,"column":89}},"type":"cond-expr","locations":[{"start":{"line":22,"column":60},"end":{"line":22,"column":84}},{"start":{"line":22,"column":87},"end":{"line":22,"column":89}}],"line":22},"9":{"loc":{"start":{"line":68,"column":16},"end":{"line":71,"column":17}},"type":"if","locations":[{"start":{"line":68,"column":16},"end":{"line":71,"column":17}},{"start":{"line":68,"column":16},"end":{"line":71,"column":17}}],"line":68},"10":{"loc":{"start":{"line":68,"column":20},"end":{"line":68,"column":73}},"type":"binary-expr","locations":[{"start":{"line":68,"column":20},"end":{"line":68,"column":35}},{"start":{"line":68,"column":39},"end":{"line":68,"column":73}}],"line":68},"11":{"loc":{"start":{"line":76,"column":20},"end":{"line":76,"column":66}},"type":"cond-expr","locations":[{"start":{"line":76,"column":33},"end":{"line":76,"column":43}},{"start":{"line":76,"column":46},"end":{"line":76,"column":66}}],"line":76},"12":{"loc":{"start":{"line":94,"column":16},"end":{"line":97,"column":17}},"type":"if","locations":[{"start":{"line":94,"column":16},"end":{"line":97,"column":17}},{"start":{"line":94,"column":16},"end":{"line":97,"column":17}}],"line":94},"13":{"loc":{"start":{"line":94,"column":20},"end":{"line":94,"column":73}},"type":"binary-expr","locations":[{"start":{"line":94,"column":20},"end":{"line":94,"column":35}},{"start":{"line":94,"column":39},"end":{"line":94,"column":73}}],"line":94},"14":{"loc":{"start":{"line":133,"column":38},"end":{"line":133,"column":69}},"type":"cond-expr","locations":[{"start":{"line":133,"column":56},"end":{"line":133,"column":64}},{"start":{"line":133,"column":67},"end":{"line":133,"column":69}}],"line":133},"15":{"loc":{"start":{"line":133,"column":38},"end":{"line":133,"column":53}},"type":"binary-expr","locations":[{"start":{"line":133,"column":38},"end":{"line":133,"column":44}},{"start":{"line":133,"column":48},"end":{"line":133,"column":53}}],"line":133},"16":{"loc":{"start":{"line":134,"column":36},"end":{"line":134,"column":65}},"type":"cond-expr","locations":[{"start":{"line":134,"column":54},"end":{"line":134,"column":60}},{"start":{"line":134,"column":63},"end":{"line":134,"column":65}}],"line":134},"17":{"loc":{"start":{"line":134,"column":36},"end":{"line":134,"column":51}},"type":"binary-expr","locations":[{"start":{"line":134,"column":36},"end":{"line":134,"column":42}},{"start":{"line":134,"column":46},"end":{"line":134,"column":51}}],"line":134},"18":{"loc":{"start":{"line":135,"column":39},"end":{"line":135,"column":79}},"type":"cond-expr","locations":[{"start":{"line":135,"column":48},"end":{"line":135,"column":74}},{"start":{"line":135,"column":77},"end":{"line":135,"column":79}}],"line":135},"19":{"loc":{"start":{"line":136,"column":39},"end":{"line":136,"column":79}},"type":"cond-expr","locations":[{"start":{"line":136,"column":47},"end":{"line":136,"column":74}},{"start":{"line":136,"column":77},"end":{"line":136,"column":79}}],"line":136}},"s":{"0":1,"1":27,"2":0,"3":11,"4":27,"5":27,"6":0,"7":0,"8":0,"9":0,"10":38,"11":11,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":0,"25":2,"26":2,"27":2,"28":2,"29":2,"30":2,"31":2,"32":2,"33":2,"34":0,"35":3,"36":3,"37":3,"38":3,"39":3,"40":3,"41":3,"42":0,"43":2,"44":2,"45":2,"46":2,"47":2,"48":2,"49":0,"50":0,"51":2,"52":2,"53":2,"54":2,"55":0,"56":1,"57":1,"58":1,"59":1,"60":1,"61":1,"62":0,"63":0,"64":1,"65":1,"66":1,"67":1,"68":0,"69":2,"70":2,"71":2,"72":2,"73":2,"74":2,"75":2,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":1},"f":{"0":11,"1":27,"2":0,"3":11,"4":27,"5":0,"6":38,"7":1,"8":1,"9":1,"10":2,"11":2,"12":3,"13":3,"14":2,"15":2,"16":1,"17":1,"18":2,"19":2,"20":0,"21":0},"b":{"0":[1,1,1],"1":[27,0],"2":[11,11],"3":[11,27],"4":[11,11],"5":[1,1,1],"6":[1,0],"7":[1,1],"8":[0,1],"9":[0,2],"10":[2,2],"11":[1,1],"12":[0,1],"13":[1,1],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0]},"inputSourceMap":{"version":3,"file":"C:/Users/Administrator/Desktop/Full-Stack Projects/Small-Blog/API/src/model/post.ts","sources":["C:/Users/Administrator/Desktop/Full-Stack Projects/Small-Blog/API/src/model/post.ts"],"names":[],"mappings":"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","sourcesContent":["import Client from '../database/client';\r\nimport { TCommnet } from './comment';\r\n\r\nexport type TPost = {\r\n  id?: number;\r\n  title: string;\r\n  description: string;\r\n  field: string;\r\n  image: string;\r\n  author: string;\r\n};\r\n\r\nexport class Post {\r\n  async index(author: number | null): Promise<TPost[]> {\r\n    try {\r\n      const conn = await Client.connect();\r\n      const sql = `SELECT * FROM posts ${\r\n        author ? 'WHERE author=' + author : ''\r\n      }`;\r\n      const result = await conn.query(sql);\r\n      conn.release();\r\n      return result.rows;\r\n    } catch (err) {\r\n      throw new Error(`Cannot get posts ${err}`);\r\n    }\r\n  }\r\n\r\n  async show(id: string): Promise<{ post: TPost; comments: TCommnet[] }> {\r\n    try {\r\n      const conn = await Client.connect();\r\n      const sql = 'SELECT * FROM posts WHERE id=$1';\r\n      const result = await conn.query(sql, [id]);\r\n      const sql2 = 'SELECT * FROM comments WHERE postid=$1';\r\n      const result2 = await conn.query(sql2, [id]);\r\n      conn.release();\r\n      return { post: result.rows[0], comments: result2.rows };\r\n    } catch (err) {\r\n      throw new Error(`Cannot get post ${id}, ${err}`);\r\n    }\r\n  }\r\n\r\n  async showWithoutComments(id: string): Promise<TPost> {\r\n    try {\r\n      const conn = await Client.connect();\r\n      const sql = 'SELECT * FROM posts WHERE id=$1';\r\n      const result = await conn.query(sql, [id]);\r\n      conn.release();\r\n      return result.rows[0];\r\n    } catch (err) {\r\n      throw new Error(`Cannot get post ${id}, ${err}`);\r\n    }\r\n  }\r\n\r\n  async update(\r\n    id: string,\r\n    post: TPost,\r\n    username: string\r\n  ): Promise<{ post: TPost; image: string } | null> {\r\n    try {\r\n      const conn = await Client.connect();\r\n      const sql = 'SELECT author,image FROM posts WHERE id=$1';\r\n      const result = await conn.query(sql, [id]);\r\n      if (!result.rows[0] || result.rows[0].author !== username) {\r\n        conn.release();\r\n        return null;\r\n      }\r\n      const sql2 =\r\n        'UPDATE posts SET title=$1,description=$2,image=$3, field=$4 WHERE id=$5 RETURNING *';\r\n      const result2 = await conn.query(sql2, [\r\n        post.title,\r\n        post.description,\r\n        post.image ? post.image : result.rows[0].image,\r\n        post.field,\r\n        id,\r\n      ]);\r\n      conn.release();\r\n      return { post: result2.rows[0], image: result.rows[0].image };\r\n    } catch (err) {\r\n      throw new Error(`Cannot update post ${id}, ${err}`);\r\n    }\r\n  }\r\n\r\n  async delete(id: string, username: string): Promise<TPost | null> {\r\n    try {\r\n      const conn = await Client.connect();\r\n      const sql = 'SELECT author FROM posts WHERE id=$1';\r\n      const result = await conn.query(sql, [id]);\r\n      if (!result.rows[0] || result.rows[0].author !== username) {\r\n        conn.release();\r\n        return null;\r\n      }\r\n      const sql2 = 'DELETE FROM posts WHERE id=$1 RETURNING *';\r\n      const result2 = await conn.query(sql2, [id]);\r\n      conn.release();\r\n      return result2.rows[0];\r\n    } catch (err) {\r\n      throw new Error(`Cannot delete post ${id}, ${err}`);\r\n    }\r\n  }\r\n\r\n  async create(post: TPost): Promise<TPost> {\r\n    try {\r\n      const conn = await Client.connect();\r\n      const sql =\r\n        'INSERT INTO posts(title,description,field,image,author,readTime) VALUES ($1,$2,$3,$4,$5,$6) RETURNING *';\r\n      const result = await conn.query(sql, [\r\n        post.title,\r\n        post.description,\r\n        post.field,\r\n        post.image,\r\n        post.author,\r\n        Math.ceil(post.description.split(' ').length / 100),\r\n      ]);\r\n      conn.release();\r\n      return result.rows[0];\r\n    } catch (err) {\r\n      throw new Error(`Cannot create post `);\r\n    }\r\n  }\r\n\r\n  // ? for filteration, search, and pagination\r\n  async filter(\r\n    author: string | undefined,\r\n    query: string | undefined,\r\n    limit: number,\r\n    skip: number\r\n  ): Promise<{ posts: TPost[]; postsCount: number }> {\r\n    try {\r\n      const whereQuery = `${author || query ? ' WHERE' : ''}`;\r\n      const andQuery = `${author && query ? ' AND' : ''}`;\r\n      const authorQuery = `${author ? ' author=' + `'${author}'` : ''}`;\r\n      const searchQuery = `${query ? ` title ILIKE '%${query}%'` : ''}`;\r\n      const myUltimateQuery = `SELECT * FROM posts${whereQuery}${authorQuery}${andQuery}${searchQuery}`;\r\n      // ! NOTE if it work properly try to add these variables as $(variables) in the conn.query instead of putting all of it in the string\r\n      const conn = await Client.connect();\r\n      const sql = myUltimateQuery;\r\n      const result = await conn.query(sql);\r\n      const sql2 = `${myUltimateQuery} LIMIT $1 OFFSET $2`;\r\n      const result2 = await conn.query(sql2, [limit, skip]);\r\n      conn.release();\r\n      return { posts: result2.rows, postsCount: result.rowCount };\r\n    } catch (err) {\r\n      throw new Error(`Cannot get posts ${err}`);\r\n    }\r\n  }\r\n}\r\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"4141bc1f34d767f6c6fb1269bffef48f33f0d1ca","contentHash":"a06cf944a518341ff9eaad2974cd528676844fc82128be4f56a418c557ac8509"},"C:\\Users\\Administrator\\Desktop\\Full-Stack Projects\\Small-Blog\\API\\src\\util\\upload.ts":{"path":"C:\\Users\\Administrator\\Desktop\\Full-Stack Projects\\Small-Blog\\API\\src\\util\\upload.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":17},"end":{"line":6,"column":51}},"4":{"start":{"line":7,"column":19},"end":{"line":7,"column":64}},"5":{"start":{"line":11,"column":19},"end":{"line":21,"column":1}},"6":{"start":{"line":12,"column":4},"end":{"line":20,"column":5}},"7":{"start":{"line":15,"column":8},"end":{"line":15,"column":23}},"8":{"start":{"line":18,"column":8},"end":{"line":18,"column":118}},"9":{"start":{"line":39,"column":16},"end":{"line":39,"column":48}},"10":{"start":{"line":40,"column":15},"end":{"line":40,"column":73}},"11":{"start":{"line":41,"column":0},"end":{"line":41,"column":25}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":11,"column":19},"end":{"line":11,"column":20}},"loc":{"start":{"line":11,"column":39},"end":{"line":21,"column":1}},"line":11}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":12,"column":4},"end":{"line":20,"column":5}},"type":"if","locations":[{"start":{"line":12,"column":4},"end":{"line":20,"column":5}},{"start":{"line":12,"column":4},"end":{"line":20,"column":5}}],"line":12},"4":{"loc":{"start":{"line":12,"column":8},"end":{"line":14,"column":38}},"type":"binary-expr","locations":[{"start":{"line":12,"column":8},"end":{"line":12,"column":37}},{"start":{"line":13,"column":8},"end":{"line":13,"column":37}},{"start":{"line":14,"column":8},"end":{"line":14,"column":38}}],"line":12}},"s":{"0":1,"1":2,"2":1,"3":1,"4":1,"5":1,"6":4,"7":4,"8":0,"9":1,"10":1,"11":1},"f":{"0":2,"1":4},"b":{"0":[1,1,1],"1":[1,1],"2":[2,2],"3":[4,0],"4":[4,0,0]},"inputSourceMap":{"version":3,"file":"C:/Users/Administrator/Desktop/Full-Stack Projects/Small-Blog/API/src/util/upload.ts","sources":["C:/Users/Administrator/Desktop/Full-Stack Projects/Small-Blog/API/src/util/upload.ts"],"names":[],"mappings":";;;;;AAAA,oDAAoD;AAEpD,iEAAyC;AACzC,uCAAuC;AAEvC,iFAAiF;AACjF,2EAA2E;AAE3E,MAAM,UAAU,GAAG,CACjB,IAAa,EACb,IAAyB,EACzB,EAAsB,EACtB,EAAE;IACF,IACE,IAAI,CAAC,QAAQ,KAAK,WAAW;QAC7B,IAAI,CAAC,QAAQ,KAAK,WAAW;QAC7B,IAAI,CAAC,QAAQ,KAAK,YAAY,EAC9B;QACA,EAAE,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;KAChB;SAAM;QACL,EAAE,CACA,IAAI,kBAAQ,CACV,qBAAqB,EACrB,GAAG,EACH,+CAA+C,EAC/C,IAAI,CACL,CACF,CAAC;QACF,wFAAwF;KACzF;AACH,CAAC,CAAC;AAEF,2CAA2C;AAC3C,4BAA4B;AAC5B,oBAAoB;AACpB,iCAAiC;AACjC,8BAA8B;AAC9B,QAAQ;AACR,2BAA2B;AAC3B,OAAO;AACP,yBAAyB;AACzB,oBAAoB;AACpB,iCAAiC;AACjC,2BAA2B;AAC3B,QAAQ;AACR,oDAAoD;AACpD,OAAO;AACP,MAAM;AAEN,8DAA8D;AAC9D,MAAM,OAAO,GAAG,gBAAM,CAAC,aAAa,EAAE,CAAC;AAEvC,MAAM,MAAM,GAAG,IAAA,gBAAM,EAAC,EAAE,OAAO,EAAE,UAAU,EAAE,UAAU,EAAE,CAAC,CAAC;AAC3D,kBAAe,MAAM,CAAC","sourcesContent":["import multer, { FileFilterCallback } from 'multer';\r\nimport { Request } from 'express';\r\nimport APIError from '../Error/ApiError';\r\n// import { v4 as uuidv4 } from 'uuid';\r\n\r\n// type DestinationCallback = (error: Error | null, destination: string) => void;\r\n// type FileNameCallback = (error: Error | null, filename: string) => void;\r\n\r\nconst fileFilter = (\r\n  _req: Request,\r\n  file: Express.Multer.File,\r\n  cb: FileFilterCallback\r\n) => {\r\n  if (\r\n    file.mimetype === 'image/png' ||\r\n    file.mimetype === 'image/jpg' ||\r\n    file.mimetype === 'image/jpeg'\r\n  ) {\r\n    cb(null, true);\r\n  } else {\r\n    cb(\r\n      new APIError(\r\n        'Only Images allowed',\r\n        415,\r\n        'cannot let the user upload other than images.',\r\n        true\r\n      )\r\n    );\r\n    // cb(new ApiError('Only Images allowed', 400), false); // false if exist error (failed)\r\n  }\r\n};\r\n\r\n// const fileStorage = multer.diskStorage({\r\n//   destination: function (\r\n//     req: Request,\r\n//     file: Express.Multer.File,\r\n//     cb: DestinationCallback\r\n//   ) {\r\n//     cb(null, '/upload');\r\n//   },\r\n//   filename: function (\r\n//     req: Request,\r\n//     file: Express.Multer.File,\r\n//     cb: FileNameCallback\r\n//   ) {\r\n//     cb(null, uuidv4() + '-' + file.originalname);\r\n//   },\r\n// });\r\n\r\n// NOTE  need to pass buffer to sharp though use memoryStorage\r\nconst storage = multer.memoryStorage();\r\n\r\nconst upload = multer({ storage, fileFilter: fileFilter });\r\nexport default upload;\r\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"a22b2952cf9b9e6dce0265e2fd2ec0e68c184ce3","contentHash":"b00325f3445d680e335ae8ceaae9b98f1abc142375eb09a431df556f4ecf068d"},"C:\\Users\\Administrator\\Desktop\\Full-Stack Projects\\Small-Blog\\API\\src\\middleware\\optimizeImage.ts":{"path":"C:\\Users\\Administrator\\Desktop\\Full-Stack Projects\\Small-Blog\\API\\src\\middleware\\optimizeImage.ts","statementMap":{"0":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"1":{"start":{"line":3,"column":28},"end":{"line":3,"column":110}},"2":{"start":{"line":3,"column":91},"end":{"line":3,"column":106}},"3":{"start":{"line":4,"column":4},"end":{"line":9,"column":7}},"4":{"start":{"line":5,"column":36},"end":{"line":5,"column":97}},"5":{"start":{"line":5,"column":42},"end":{"line":5,"column":70}},"6":{"start":{"line":5,"column":85},"end":{"line":5,"column":95}},"7":{"start":{"line":6,"column":35},"end":{"line":6,"column":100}},"8":{"start":{"line":6,"column":41},"end":{"line":6,"column":73}},"9":{"start":{"line":6,"column":88},"end":{"line":6,"column":98}},"10":{"start":{"line":7,"column":32},"end":{"line":7,"column":116}},"11":{"start":{"line":8,"column":8},"end":{"line":8,"column":78}},"12":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"13":{"start":{"line":12,"column":4},"end":{"line":12,"column":62}},"14":{"start":{"line":14,"column":0},"end":{"line":14,"column":62}},"15":{"start":{"line":15,"column":16},"end":{"line":15,"column":49}},"16":{"start":{"line":16,"column":15},"end":{"line":16,"column":30}},"17":{"start":{"line":17,"column":22},"end":{"line":35,"column":2}},"18":{"start":{"line":17,"column":42},"end":{"line":35,"column":2}},"19":{"start":{"line":19,"column":4},"end":{"line":21,"column":5}},"20":{"start":{"line":20,"column":8},"end":{"line":20,"column":22}},"21":{"start":{"line":22,"column":19},"end":{"line":22,"column":72}},"22":{"start":{"line":23,"column":17},"end":{"line":23,"column":122}},"23":{"start":{"line":24,"column":4},"end":{"line":34,"column":5}},"24":{"start":{"line":25,"column":8},"end":{"line":25,"column":129}},"25":{"start":{"line":27,"column":8},"end":{"line":27,"column":30}},"26":{"start":{"line":28,"column":8},"end":{"line":28,"column":15}},"27":{"start":{"line":31,"column":8},"end":{"line":33,"column":11}},"28":{"start":{"line":36,"column":0},"end":{"line":36,"column":32}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":44},"end":{"line":2,"column":45}},"loc":{"start":{"line":2,"column":89},"end":{"line":10,"column":1}},"line":2},"1":{"name":"adopt","decl":{"start":{"line":3,"column":13},"end":{"line":3,"column":18}},"loc":{"start":{"line":3,"column":26},"end":{"line":3,"column":112}},"line":3},"2":{"name":"(anonymous_2)","decl":{"start":{"line":3,"column":70},"end":{"line":3,"column":71}},"loc":{"start":{"line":3,"column":89},"end":{"line":3,"column":108}},"line":3},"3":{"name":"(anonymous_3)","decl":{"start":{"line":4,"column":36},"end":{"line":4,"column":37}},"loc":{"start":{"line":4,"column":63},"end":{"line":9,"column":5}},"line":4},"4":{"name":"fulfilled","decl":{"start":{"line":5,"column":17},"end":{"line":5,"column":26}},"loc":{"start":{"line":5,"column":34},"end":{"line":5,"column":99}},"line":5},"5":{"name":"rejected","decl":{"start":{"line":6,"column":17},"end":{"line":6,"column":25}},"loc":{"start":{"line":6,"column":33},"end":{"line":6,"column":102}},"line":6},"6":{"name":"step","decl":{"start":{"line":7,"column":17},"end":{"line":7,"column":21}},"loc":{"start":{"line":7,"column":30},"end":{"line":7,"column":118}},"line":7},"7":{"name":"(anonymous_7)","decl":{"start":{"line":11,"column":56},"end":{"line":11,"column":57}},"loc":{"start":{"line":11,"column":71},"end":{"line":13,"column":1}},"line":11},"8":{"name":"(anonymous_8)","decl":{"start":{"line":17,"column":22},"end":{"line":17,"column":23}},"loc":{"start":{"line":17,"column":42},"end":{"line":35,"column":2}},"line":17},"9":{"name":"(anonymous_9)","decl":{"start":{"line":17,"column":76},"end":{"line":17,"column":77}},"loc":{"start":{"line":17,"column":89},"end":{"line":35,"column":1}},"line":17}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":17},"end":{"line":2,"column":21}},{"start":{"line":2,"column":25},"end":{"line":2,"column":39}},{"start":{"line":2,"column":44},"end":{"line":10,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":35},"end":{"line":3,"column":109}},"type":"cond-expr","locations":[{"start":{"line":3,"column":56},"end":{"line":3,"column":61}},{"start":{"line":3,"column":64},"end":{"line":3,"column":109}}],"line":3},"2":{"loc":{"start":{"line":4,"column":16},"end":{"line":4,"column":34}},"type":"binary-expr","locations":[{"start":{"line":4,"column":16},"end":{"line":4,"column":17}},{"start":{"line":4,"column":22},"end":{"line":4,"column":33}}],"line":4},"3":{"loc":{"start":{"line":7,"column":32},"end":{"line":7,"column":115}},"type":"cond-expr","locations":[{"start":{"line":7,"column":46},"end":{"line":7,"column":67}},{"start":{"line":7,"column":70},"end":{"line":7,"column":115}}],"line":7},"4":{"loc":{"start":{"line":8,"column":51},"end":{"line":8,"column":67}},"type":"binary-expr","locations":[{"start":{"line":8,"column":51},"end":{"line":8,"column":61}},{"start":{"line":8,"column":65},"end":{"line":8,"column":67}}],"line":8},"5":{"loc":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"type":"binary-expr","locations":[{"start":{"line":11,"column":23},"end":{"line":11,"column":27}},{"start":{"line":11,"column":31},"end":{"line":11,"column":51}},{"start":{"line":11,"column":56},"end":{"line":13,"column":1}}],"line":11},"6":{"loc":{"start":{"line":12,"column":11},"end":{"line":12,"column":61}},"type":"cond-expr","locations":[{"start":{"line":12,"column":37},"end":{"line":12,"column":40}},{"start":{"line":12,"column":43},"end":{"line":12,"column":61}}],"line":12},"7":{"loc":{"start":{"line":12,"column":12},"end":{"line":12,"column":33}},"type":"binary-expr","locations":[{"start":{"line":12,"column":12},"end":{"line":12,"column":15}},{"start":{"line":12,"column":19},"end":{"line":12,"column":33}}],"line":12},"8":{"loc":{"start":{"line":19,"column":4},"end":{"line":21,"column":5}},"type":"if","locations":[{"start":{"line":19,"column":4},"end":{"line":21,"column":5}},{"start":{"line":19,"column":4},"end":{"line":21,"column":5}}],"line":19},"9":{"loc":{"start":{"line":19,"column":8},"end":{"line":19,"column":43}},"type":"binary-expr","locations":[{"start":{"line":19,"column":8},"end":{"line":19,"column":17}},{"start":{"line":19,"column":21},"end":{"line":19,"column":43}}],"line":19},"10":{"loc":{"start":{"line":22,"column":19},"end":{"line":22,"column":72}},"type":"cond-expr","locations":[{"start":{"line":22,"column":48},"end":{"line":22,"column":61}},{"start":{"line":22,"column":64},"end":{"line":22,"column":72}}],"line":22},"11":{"loc":{"start":{"line":23,"column":52},"end":{"line":23,"column":120}},"type":"cond-expr","locations":[{"start":{"line":23,"column":96},"end":{"line":23,"column":102}},{"start":{"line":23,"column":105},"end":{"line":23,"column":120}}],"line":23},"12":{"loc":{"start":{"line":23,"column":52},"end":{"line":23,"column":93}},"type":"binary-expr","locations":[{"start":{"line":23,"column":52},"end":{"line":23,"column":76}},{"start":{"line":23,"column":80},"end":{"line":23,"column":93}}],"line":23},"13":{"loc":{"start":{"line":25,"column":35},"end":{"line":25,"column":97}},"type":"cond-expr","locations":[{"start":{"line":25,"column":79},"end":{"line":25,"column":85}},{"start":{"line":25,"column":88},"end":{"line":25,"column":97}}],"line":25},"14":{"loc":{"start":{"line":25,"column":35},"end":{"line":25,"column":76}},"type":"binary-expr","locations":[{"start":{"line":25,"column":35},"end":{"line":25,"column":59}},{"start":{"line":25,"column":63},"end":{"line":25,"column":76}}],"line":25}},"s":{"0":1,"1":3,"2":0,"3":4,"4":3,"5":3,"6":0,"7":0,"8":0,"9":0,"10":7,"11":4,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":4,"19":4,"20":1,"21":3,"22":3,"23":3,"24":3,"25":3,"26":3,"27":0,"28":1},"f":{"0":4,"1":3,"2":0,"3":4,"4":3,"5":0,"6":7,"7":1,"8":4,"9":4},"b":{"0":[1,1,1],"1":[3,0],"2":[4,4],"3":[4,3],"4":[4,4],"5":[1,1,1],"6":[0,1],"7":[1,1],"8":[1,3],"9":[4,1],"10":[3,0],"11":[0,3],"12":[3,3],"13":[0,3],"14":[3,3]},"inputSourceMap":{"version":3,"file":"C:/Users/Administrator/Desktop/Full-Stack Projects/Small-Blog/API/src/middleware/optimizeImage.ts","sources":["C:/Users/Administrator/Desktop/Full-Stack Projects/Small-Blog/API/src/middleware/optimizeImage.ts"],"names":[],"mappings":";;;;;;;;;;;;;;AACA,kDAA0B;AAC1B,+BAAoC;AAEpC,MAAM,aAAa,GAAG,CACpB,GAAY,EACZ,GAAa,EACb,IAAkB,EAClB,EAAE;;IACF,IAAI,CAAC,GAAG,CAAC,IAAI,IAAI,GAAG,CAAC,MAAM,KAAK,OAAO,EAAE;QACvC,OAAO,IAAI,EAAE,CAAC;KACf;IACD,MAAM,MAAM,GAAG,OAAO,CAAC,GAAG,CAAC,GAAG,KAAK,MAAM,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,QAAQ,CAAC;IACrE,MAAM,IAAI,GAAG,GAAG,MAAM,IAAI,IAAA,SAAM,GAAE,MAAM,MAAA,GAAG,CAAC,IAAI,0CAAE,YAAY,EAAE,CAAC;IACjE,IAAI;QACF,MAAM,IAAA,eAAK,EAAC,MAAA,GAAG,CAAC,IAAI,0CAAE,MAAM,CAAC,CAAC,MAAM,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QAC5D,gDAAgD;QAChD,GAAG,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QACtB,IAAI,EAAE,CAAC;KACR;IAAC,OAAO,GAAG,EAAE;QACZ,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;YACnB,KAAK,EAAE,2DAA2D;SACnE,CAAC,CAAC;KACJ;AACH,CAAC,CAAA,CAAC;AAEF,kBAAe,aAAa,CAAC","sourcesContent":["import { NextFunction, Request, Response } from 'express';\r\nimport sharp from 'sharp';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nconst optimizeImage = async (\r\n  req: Request,\r\n  res: Response,\r\n  next: NextFunction\r\n) => {\r\n  if (!req.file && req.method === 'PATCH') {\r\n    return next();\r\n  }\r\n  const folder = process.env.ENV === 'TEST' ? 'test_upload' : 'upload';\r\n  const path = `${folder}/${uuidv4()} - ${req.file?.originalname}`;\r\n  try {\r\n    await sharp(req.file?.buffer).resize(600, 400).toFile(path);\r\n    // NOTE  may optimize quality or extension later\r\n    req.body.image = path;\r\n    next();\r\n  } catch (err) {\r\n    res.status(400).json({\r\n      error: \"Couldn't optimize the image, The post must have an image.\",\r\n    });\r\n  }\r\n};\r\n\r\nexport default optimizeImage;\r\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"d975a17dcba4aa0e5bbb0669137c840bbde4bec8","contentHash":"12742dd495e4b1faca2a3c1767af155d51a696bb68581edef698a70c86004c15"},"C:\\Users\\Administrator\\Desktop\\Full-Stack Projects\\Small-Blog\\API\\src\\util\\validators\\postValidators.ts":{"path":"C:\\Users\\Administrator\\Desktop\\Full-Stack Projects\\Small-Blog\\API\\src\\util\\validators\\postValidators.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":94}},"2":{"start":{"line":4,"column":28},"end":{"line":4,"column":56}},"3":{"start":{"line":6,"column":27},"end":{"line":26,"column":1}},"4":{"start":{"line":7,"column":4},"end":{"line":25,"column":6}},"5":{"start":{"line":27,"column":0},"end":{"line":27,"column":48}},"6":{"start":{"line":28,"column":27},"end":{"line":37,"column":1}},"7":{"start":{"line":29,"column":4},"end":{"line":36,"column":6}},"8":{"start":{"line":38,"column":0},"end":{"line":38,"column":48}},"9":{"start":{"line":39,"column":27},"end":{"line":41,"column":1}},"10":{"start":{"line":40,"column":4},"end":{"line":40,"column":77}},"11":{"start":{"line":42,"column":0},"end":{"line":42,"column":48}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":6,"column":27},"end":{"line":6,"column":28}},"loc":{"start":{"line":6,"column":33},"end":{"line":26,"column":1}},"line":6},"1":{"name":"(anonymous_1)","decl":{"start":{"line":28,"column":27},"end":{"line":28,"column":28}},"loc":{"start":{"line":28,"column":33},"end":{"line":37,"column":1}},"line":28},"2":{"name":"(anonymous_2)","decl":{"start":{"line":39,"column":27},"end":{"line":39,"column":28}},"loc":{"start":{"line":39,"column":33},"end":{"line":41,"column":1}},"line":39}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1},"f":{"0":1,"1":1,"2":1},"b":{},"inputSourceMap":{"version":3,"file":"C:/Users/Administrator/Desktop/Full-Stack Projects/Small-Blog/API/src/util/validators/postValidators.ts","sources":["C:/Users/Administrator/Desktop/Full-Stack Projects/Small-Blog/API/src/util/validators/postValidators.ts"],"names":[],"mappings":";;;AAAA,yDAAgD;AAEhD,4EAA4E;AAErE,MAAM,kBAAkB,GAAG,GAAG,EAAE;IACrC,OAAO;QACL,IAAA,wBAAI,EAAC,OAAO,EAAE,eAAe,CAAC;aAC3B,QAAQ,EAAE;aACV,QAAQ,EAAE;aACV,QAAQ,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC;QAChC,IAAA,wBAAI,EAAC,aAAa,EAAE,qBAAqB,CAAC,CAAC,QAAQ,EAAE,CAAC,QAAQ,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC;QAC3E,IAAA,wBAAI,EAAC,OAAO,EAAE,eAAe,CAAC,CAAC,IAAI,CAAC;YAClC,iBAAiB;YACjB,iBAAiB;YACjB,gBAAgB;YAChB,oBAAoB;YACpB,QAAQ;YACR,iBAAiB;YACjB,kBAAkB;YAClB,gCAAgC;YAChC,OAAO;YACP,cAAc;SACf,CAAC;KACH,CAAC;AACJ,CAAC,CAAC;AApBW,QAAA,kBAAkB,sBAoB7B;AAEK,MAAM,kBAAkB,GAAG,GAAG,EAAE;IACrC,OAAO;QACL,IAAA,yBAAK,EAAC,QAAQ,CAAC,CAAC,QAAQ,EAAE,CAAC,SAAS,EAAE;QACtC,IAAA,wBAAI,EAAC,OAAO,EAAE,eAAe,CAAC;aAC3B,QAAQ,EAAE;aACV,QAAQ,EAAE;aACV,QAAQ,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC;QAChC,IAAA,wBAAI,EAAC,aAAa,EAAE,qBAAqB,CAAC,CAAC,QAAQ,EAAE,CAAC,QAAQ,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC;KAC5E,CAAC;AACJ,CAAC,CAAC;AATW,QAAA,kBAAkB,sBAS7B;AAEK,MAAM,kBAAkB,GAAG,GAAG,EAAE;IACrC,OAAO,CAAC,IAAA,yBAAK,EAAC,QAAQ,CAAC,CAAC,QAAQ,EAAE,CAAC,SAAS,EAAE,CAAC,CAAC;AAClD,CAAC,CAAC;AAFW,QAAA,kBAAkB,sBAE7B","sourcesContent":["import { body, param } from 'express-validator';\r\n\r\n// NOTE   we can use oneOf in update if we only want to at least get 1 field\r\n\r\nexport const validatePostCreate = () => {\r\n  return [\r\n    body('title', 'Invalid title')\r\n      .notEmpty()\r\n      .isString()\r\n      .isLength({ min: 3, max: 50 }),\r\n    body('description', 'Invalid description').notEmpty().isLength({ min: 50 }),\r\n    body('field', 'Invalid field').isIn([\r\n      'Web Programming',\r\n      'Embedded System',\r\n      'Cyber Security',\r\n      'Mobile Development',\r\n      'DevOps',\r\n      'Cloud Architect',\r\n      'Software Testing',\r\n      'Data Analytics & Visualization',\r\n      'UI/UX',\r\n      'System Admin',\r\n    ]),\r\n  ];\r\n};\r\n\r\nexport const validatePostUpdate = () => {\r\n  return [\r\n    param('postId').notEmpty().isNumeric(),\r\n    body('title', 'Invalid title')\r\n      .notEmpty()\r\n      .isString()\r\n      .isLength({ min: 3, max: 50 }),\r\n    body('description', 'Invalid description').notEmpty().isLength({ min: 50 }),\r\n  ];\r\n};\r\n\r\nexport const validatePostDelete = () => {\r\n  return [param('postId').notEmpty().isNumeric()];\r\n};\r\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"2fb242e2f016f53334eb4768efc2832f156c1eb0","contentHash":"093be2ee3ad00569d2f804d63d677e2001b023e0a5911f69ea17b19e4caa2cfa"},"C:\\Users\\Administrator\\Desktop\\Full-Stack Projects\\Small-Blog\\API\\src\\handler\\comment.ts":{"path":"C:\\Users\\Administrator\\Desktop\\Full-Stack Projects\\Small-Blog\\API\\src\\handler\\comment.ts","statementMap":{"0":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"1":{"start":{"line":3,"column":28},"end":{"line":3,"column":110}},"2":{"start":{"line":3,"column":91},"end":{"line":3,"column":106}},"3":{"start":{"line":4,"column":4},"end":{"line":9,"column":7}},"4":{"start":{"line":5,"column":36},"end":{"line":5,"column":97}},"5":{"start":{"line":5,"column":42},"end":{"line":5,"column":70}},"6":{"start":{"line":5,"column":85},"end":{"line":5,"column":95}},"7":{"start":{"line":6,"column":35},"end":{"line":6,"column":100}},"8":{"start":{"line":6,"column":41},"end":{"line":6,"column":73}},"9":{"start":{"line":6,"column":88},"end":{"line":6,"column":98}},"10":{"start":{"line":7,"column":32},"end":{"line":7,"column":116}},"11":{"start":{"line":8,"column":8},"end":{"line":8,"column":78}},"12":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"13":{"start":{"line":12,"column":4},"end":{"line":12,"column":62}},"14":{"start":{"line":14,"column":0},"end":{"line":14,"column":62}},"15":{"start":{"line":15,"column":22},"end":{"line":15,"column":75}},"16":{"start":{"line":16,"column":18},"end":{"line":16,"column":45}},"17":{"start":{"line":17,"column":15},"end":{"line":17,"column":39}},"18":{"start":{"line":18,"column":19},"end":{"line":18,"column":64}},"19":{"start":{"line":19,"column":28},"end":{"line":19,"column":75}},"20":{"start":{"line":20,"column":21},"end":{"line":20,"column":73}},"21":{"start":{"line":21,"column":14},"end":{"line":21,"column":37}},"22":{"start":{"line":22,"column":18},"end":{"line":22,"column":35}},"23":{"start":{"line":23,"column":15},"end":{"line":37,"column":2}},"24":{"start":{"line":23,"column":35},"end":{"line":37,"column":2}},"25":{"start":{"line":24,"column":4},"end":{"line":36,"column":5}},"26":{"start":{"line":25,"column":33},"end":{"line":25,"column":41}},"27":{"start":{"line":26,"column":21},"end":{"line":26,"column":64}},"28":{"start":{"line":27,"column":8},"end":{"line":29,"column":9}},"29":{"start":{"line":28,"column":12},"end":{"line":28,"column":195}},"30":{"start":{"line":30,"column":23},"end":{"line":30,"column":42}},"31":{"start":{"line":31,"column":24},"end":{"line":31,"column":64}},"32":{"start":{"line":32,"column":8},"end":{"line":32,"column":70}},"33":{"start":{"line":35,"column":8},"end":{"line":35,"column":28}},"34":{"start":{"line":38,"column":15},"end":{"line":52,"column":2}},"35":{"start":{"line":38,"column":35},"end":{"line":52,"column":2}},"36":{"start":{"line":39,"column":4},"end":{"line":51,"column":5}},"37":{"start":{"line":40,"column":30},"end":{"line":40,"column":40}},"38":{"start":{"line":41,"column":25},"end":{"line":41,"column":33}},"39":{"start":{"line":42,"column":24},"end":{"line":42,"column":52}},"40":{"start":{"line":43,"column":8},"end":{"line":45,"column":9}},"41":{"start":{"line":44,"column":12},"end":{"line":44,"column":153}},"42":{"start":{"line":46,"column":8},"end":{"line":46,"column":45}},"43":{"start":{"line":47,"column":8},"end":{"line":47,"column":76}},"44":{"start":{"line":50,"column":8},"end":{"line":50,"column":28}},"45":{"start":{"line":53,"column":15},"end":{"line":68,"column":2}},"46":{"start":{"line":53,"column":35},"end":{"line":68,"column":2}},"47":{"start":{"line":54,"column":4},"end":{"line":67,"column":5}},"48":{"start":{"line":55,"column":30},"end":{"line":55,"column":40}},"49":{"start":{"line":56,"column":24},"end":{"line":56,"column":52}},"50":{"start":{"line":57,"column":21},"end":{"line":57,"column":77}},"51":{"start":{"line":58,"column":21},"end":{"line":58,"column":40}},"52":{"start":{"line":59,"column":8},"end":{"line":61,"column":9}},"53":{"start":{"line":60,"column":12},"end":{"line":60,"column":172}},"54":{"start":{"line":62,"column":8},"end":{"line":62,"column":39}},"55":{"start":{"line":63,"column":8},"end":{"line":63,"column":28}},"56":{"start":{"line":66,"column":8},"end":{"line":66,"column":28}},"57":{"start":{"line":69,"column":23},"end":{"line":76,"column":1}},"58":{"start":{"line":71,"column":4},"end":{"line":71,"column":129}},"59":{"start":{"line":72,"column":4},"end":{"line":75,"column":119}},"60":{"start":{"line":77,"column":0},"end":{"line":77,"column":33}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":44},"end":{"line":2,"column":45}},"loc":{"start":{"line":2,"column":89},"end":{"line":10,"column":1}},"line":2},"1":{"name":"adopt","decl":{"start":{"line":3,"column":13},"end":{"line":3,"column":18}},"loc":{"start":{"line":3,"column":26},"end":{"line":3,"column":112}},"line":3},"2":{"name":"(anonymous_2)","decl":{"start":{"line":3,"column":70},"end":{"line":3,"column":71}},"loc":{"start":{"line":3,"column":89},"end":{"line":3,"column":108}},"line":3},"3":{"name":"(anonymous_3)","decl":{"start":{"line":4,"column":36},"end":{"line":4,"column":37}},"loc":{"start":{"line":4,"column":63},"end":{"line":9,"column":5}},"line":4},"4":{"name":"fulfilled","decl":{"start":{"line":5,"column":17},"end":{"line":5,"column":26}},"loc":{"start":{"line":5,"column":34},"end":{"line":5,"column":99}},"line":5},"5":{"name":"rejected","decl":{"start":{"line":6,"column":17},"end":{"line":6,"column":25}},"loc":{"start":{"line":6,"column":33},"end":{"line":6,"column":102}},"line":6},"6":{"name":"step","decl":{"start":{"line":7,"column":17},"end":{"line":7,"column":21}},"loc":{"start":{"line":7,"column":30},"end":{"line":7,"column":118}},"line":7},"7":{"name":"(anonymous_7)","decl":{"start":{"line":11,"column":56},"end":{"line":11,"column":57}},"loc":{"start":{"line":11,"column":71},"end":{"line":13,"column":1}},"line":11},"8":{"name":"(anonymous_8)","decl":{"start":{"line":23,"column":15},"end":{"line":23,"column":16}},"loc":{"start":{"line":23,"column":35},"end":{"line":37,"column":2}},"line":23},"9":{"name":"(anonymous_9)","decl":{"start":{"line":23,"column":69},"end":{"line":23,"column":70}},"loc":{"start":{"line":23,"column":82},"end":{"line":37,"column":1}},"line":23},"10":{"name":"(anonymous_10)","decl":{"start":{"line":38,"column":15},"end":{"line":38,"column":16}},"loc":{"start":{"line":38,"column":35},"end":{"line":52,"column":2}},"line":38},"11":{"name":"(anonymous_11)","decl":{"start":{"line":38,"column":69},"end":{"line":38,"column":70}},"loc":{"start":{"line":38,"column":82},"end":{"line":52,"column":1}},"line":38},"12":{"name":"(anonymous_12)","decl":{"start":{"line":53,"column":15},"end":{"line":53,"column":16}},"loc":{"start":{"line":53,"column":35},"end":{"line":68,"column":2}},"line":53},"13":{"name":"(anonymous_13)","decl":{"start":{"line":53,"column":69},"end":{"line":53,"column":70}},"loc":{"start":{"line":53,"column":82},"end":{"line":68,"column":1}},"line":53},"14":{"name":"(anonymous_14)","decl":{"start":{"line":69,"column":23},"end":{"line":69,"column":24}},"loc":{"start":{"line":69,"column":32},"end":{"line":76,"column":1}},"line":69}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":17},"end":{"line":2,"column":21}},{"start":{"line":2,"column":25},"end":{"line":2,"column":39}},{"start":{"line":2,"column":44},"end":{"line":10,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":35},"end":{"line":3,"column":109}},"type":"cond-expr","locations":[{"start":{"line":3,"column":56},"end":{"line":3,"column":61}},{"start":{"line":3,"column":64},"end":{"line":3,"column":109}}],"line":3},"2":{"loc":{"start":{"line":4,"column":16},"end":{"line":4,"column":34}},"type":"binary-expr","locations":[{"start":{"line":4,"column":16},"end":{"line":4,"column":17}},{"start":{"line":4,"column":22},"end":{"line":4,"column":33}}],"line":4},"3":{"loc":{"start":{"line":7,"column":32},"end":{"line":7,"column":115}},"type":"cond-expr","locations":[{"start":{"line":7,"column":46},"end":{"line":7,"column":67}},{"start":{"line":7,"column":70},"end":{"line":7,"column":115}}],"line":7},"4":{"loc":{"start":{"line":8,"column":51},"end":{"line":8,"column":67}},"type":"binary-expr","locations":[{"start":{"line":8,"column":51},"end":{"line":8,"column":61}},{"start":{"line":8,"column":65},"end":{"line":8,"column":67}}],"line":8},"5":{"loc":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"type":"binary-expr","locations":[{"start":{"line":11,"column":23},"end":{"line":11,"column":27}},{"start":{"line":11,"column":31},"end":{"line":11,"column":51}},{"start":{"line":11,"column":56},"end":{"line":13,"column":1}}],"line":11},"6":{"loc":{"start":{"line":12,"column":11},"end":{"line":12,"column":61}},"type":"cond-expr","locations":[{"start":{"line":12,"column":37},"end":{"line":12,"column":40}},{"start":{"line":12,"column":43},"end":{"line":12,"column":61}}],"line":12},"7":{"loc":{"start":{"line":12,"column":12},"end":{"line":12,"column":33}},"type":"binary-expr","locations":[{"start":{"line":12,"column":12},"end":{"line":12,"column":15}},{"start":{"line":12,"column":19},"end":{"line":12,"column":33}}],"line":12},"8":{"loc":{"start":{"line":27,"column":8},"end":{"line":29,"column":9}},"type":"if","locations":[{"start":{"line":27,"column":8},"end":{"line":29,"column":9}},{"start":{"line":27,"column":8},"end":{"line":29,"column":9}}],"line":27},"9":{"loc":{"start":{"line":43,"column":8},"end":{"line":45,"column":9}},"type":"if","locations":[{"start":{"line":43,"column":8},"end":{"line":45,"column":9}},{"start":{"line":43,"column":8},"end":{"line":45,"column":9}}],"line":43},"10":{"loc":{"start":{"line":59,"column":8},"end":{"line":61,"column":9}},"type":"if","locations":[{"start":{"line":59,"column":8},"end":{"line":61,"column":9}},{"start":{"line":59,"column":8},"end":{"line":61,"column":9}}],"line":59},"11":{"loc":{"start":{"line":59,"column":12},"end":{"line":59,"column":59}},"type":"binary-expr","locations":[{"start":{"line":59,"column":12},"end":{"line":59,"column":35}},{"start":{"line":59,"column":39},"end":{"line":59,"column":59}}],"line":59}},"s":{"0":1,"1":8,"2":0,"3":4,"4":8,"5":8,"6":0,"7":0,"8":0,"9":0,"10":12,"11":4,"12":1,"13":3,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":2,"25":2,"26":2,"27":2,"28":2,"29":1,"30":1,"31":1,"32":1,"33":0,"34":1,"35":1,"36":1,"37":1,"38":1,"39":1,"40":1,"41":0,"42":1,"43":1,"44":0,"45":1,"46":1,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":0,"54":1,"55":1,"56":0,"57":1,"58":1,"59":1,"60":1},"f":{"0":4,"1":8,"2":0,"3":4,"4":8,"5":0,"6":12,"7":3,"8":2,"9":2,"10":1,"11":1,"12":1,"13":1,"14":1},"b":{"0":[1,1,1],"1":[8,0],"2":[4,4],"3":[4,8],"4":[4,4],"5":[1,1,1],"6":[3,0],"7":[3,3],"8":[1,1],"9":[0,1],"10":[0,1],"11":[1,0]},"inputSourceMap":{"version":3,"file":"C:/Users/Administrator/Desktop/Full-Stack Projects/Small-Blog/API/src/handler/comment.ts","sources":["C:/Users/Administrator/Desktop/Full-Stack Projects/Small-Blog/API/src/handler/comment.ts"],"names":[],"mappings":"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","sourcesContent":["import { Application, Request, Response, NextFunction } from 'express';\r\nimport verifyToken from '../middleware/verifyToken';\r\nimport { Comment } from '../model/comment';\r\nimport { Post } from '../model/post';\r\nimport APIError from '../Error/ApiError';\r\nimport {\r\n  validateCommentCreate,\r\n  validateCommentDelete,\r\n  validateCommentUpdate,\r\n} from '../util/validators/commentValidators';\r\nimport validation from '../middleware/validation';\r\n\r\nconst store = new Comment();\r\nconst postStore = new Post();\r\n\r\nconst create = async (\r\n  req: Request,\r\n  res: Response,\r\n  next: NextFunction\r\n): Promise<void> => {\r\n  try {\r\n    const { body, postId } = req.body;\r\n    const post = await postStore.showWithoutComments(postId);\r\n    if (!post) {\r\n      return next(\r\n        new APIError(\r\n          `The post ${postId} doesn't exists, to leave a comment on it`,\r\n          404,\r\n          'the user is trying to add a comment for a post which cannot be found.',\r\n          true\r\n        )\r\n      );\r\n    }\r\n    const author = res.locals.username;\r\n    const comment = await store.create(postId, author, body);\r\n    res.status(201).send({ message: 'Comment created', comment });\r\n  } catch (err) {\r\n    res.sendStatus(400);\r\n  }\r\n};\r\n\r\nconst update = async (\r\n  req: Request,\r\n  res: Response,\r\n  next: NextFunction\r\n): Promise<void> => {\r\n  try {\r\n    const { commentId } = req.params;\r\n    const { body } = req.body;\r\n    const comment = await store.show(+commentId);\r\n    if (res.locals.username !== comment.author) {\r\n      return next(\r\n        new APIError(\r\n          `You are not allowed to edit this comment`,\r\n          403,\r\n          'Only the comment creator can edit the comment.',\r\n          true\r\n        )\r\n      );\r\n    }\r\n    await store.update(+commentId, body);\r\n    res.status(200).send({ message: 'Comment is successfully edited' });\r\n  } catch (err) {\r\n    res.sendStatus(400);\r\n  }\r\n};\r\n\r\nconst remove = async (\r\n  req: Request,\r\n  res: Response,\r\n  next: NextFunction\r\n): Promise<void> => {\r\n  try {\r\n    const { commentId } = req.params;\r\n    const comment = await store.show(+commentId);\r\n    const post = await postStore.showWithoutComments(comment.postid + '');\r\n    const user = res.locals.username;\r\n    if (user !== comment.author && user !== post.author) {\r\n      return next(\r\n        new APIError(\r\n          `You are not allowed to delete this comment`,\r\n          403,\r\n          'Only the comment creator or post author can delete the comment.',\r\n          true\r\n        )\r\n      );\r\n    }\r\n    await store.delete(+commentId);\r\n    res.sendStatus(204);\r\n  } catch (err) {\r\n    res.sendStatus(400);\r\n  }\r\n};\r\n\r\nconst commentsRoutes = (app: Application) => {\r\n  // NOTE  Ideally it would be better to make routes --> /posts/:postId/comments\r\n  app.post(\r\n    '/comments',\r\n    verifyToken,\r\n    validateCommentCreate(),\r\n    validation,\r\n    create\r\n  );\r\n\r\n  app\r\n    .route('/comments/:commentId')\r\n    .patch(verifyToken, validateCommentUpdate(), validation, update)\r\n    .delete(verifyToken, validateCommentDelete(), validation, remove);\r\n};\r\n\r\nexport default commentsRoutes;\r\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"f81e42f75ad0ba9da6b106601fd1c35b0d513fc2","contentHash":"fd91736d1c46ff037d88dbb4fdfbc4661d0f31d1bfd34d730f2d3728f568504a"},"C:\\Users\\Administrator\\Desktop\\Full-Stack Projects\\Small-Blog\\API\\src\\model\\comment.ts":{"path":"C:\\Users\\Administrator\\Desktop\\Full-Stack Projects\\Small-Blog\\API\\src\\model\\comment.ts","statementMap":{"0":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"1":{"start":{"line":3,"column":28},"end":{"line":3,"column":110}},"2":{"start":{"line":3,"column":91},"end":{"line":3,"column":106}},"3":{"start":{"line":4,"column":4},"end":{"line":9,"column":7}},"4":{"start":{"line":5,"column":36},"end":{"line":5,"column":97}},"5":{"start":{"line":5,"column":42},"end":{"line":5,"column":70}},"6":{"start":{"line":5,"column":85},"end":{"line":5,"column":95}},"7":{"start":{"line":6,"column":35},"end":{"line":6,"column":100}},"8":{"start":{"line":6,"column":41},"end":{"line":6,"column":73}},"9":{"start":{"line":6,"column":88},"end":{"line":6,"column":98}},"10":{"start":{"line":7,"column":32},"end":{"line":7,"column":116}},"11":{"start":{"line":8,"column":8},"end":{"line":8,"column":78}},"12":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"13":{"start":{"line":12,"column":4},"end":{"line":12,"column":62}},"14":{"start":{"line":14,"column":0},"end":{"line":14,"column":62}},"15":{"start":{"line":15,"column":0},"end":{"line":15,"column":25}},"16":{"start":{"line":16,"column":17},"end":{"line":16,"column":63}},"17":{"start":{"line":19,"column":8},"end":{"line":30,"column":11}},"18":{"start":{"line":20,"column":12},"end":{"line":29,"column":13}},"19":{"start":{"line":21,"column":29},"end":{"line":21,"column":61}},"20":{"start":{"line":22,"column":28},"end":{"line":22,"column":64}},"21":{"start":{"line":23,"column":31},"end":{"line":23,"column":58}},"22":{"start":{"line":24,"column":16},"end":{"line":24,"column":31}},"23":{"start":{"line":25,"column":16},"end":{"line":25,"column":38}},"24":{"start":{"line":28,"column":16},"end":{"line":28,"column":62}},"25":{"start":{"line":33,"column":8},"end":{"line":49,"column":11}},"26":{"start":{"line":34,"column":12},"end":{"line":48,"column":13}},"27":{"start":{"line":35,"column":29},"end":{"line":35,"column":61}},"28":{"start":{"line":36,"column":28},"end":{"line":36,"column":113}},"29":{"start":{"line":37,"column":31},"end":{"line":42,"column":18}},"30":{"start":{"line":43,"column":16},"end":{"line":43,"column":31}},"31":{"start":{"line":44,"column":16},"end":{"line":44,"column":38}},"32":{"start":{"line":47,"column":16},"end":{"line":47,"column":86}},"33":{"start":{"line":52,"column":8},"end":{"line":62,"column":11}},"34":{"start":{"line":53,"column":12},"end":{"line":61,"column":13}},"35":{"start":{"line":54,"column":29},"end":{"line":54,"column":61}},"36":{"start":{"line":55,"column":28},"end":{"line":55,"column":69}},"37":{"start":{"line":56,"column":16},"end":{"line":56,"column":50}},"38":{"start":{"line":57,"column":16},"end":{"line":57,"column":31}},"39":{"start":{"line":60,"column":16},"end":{"line":60,"column":65}},"40":{"start":{"line":65,"column":8},"end":{"line":75,"column":11}},"41":{"start":{"line":66,"column":12},"end":{"line":74,"column":13}},"42":{"start":{"line":67,"column":29},"end":{"line":67,"column":61}},"43":{"start":{"line":68,"column":28},"end":{"line":68,"column":62}},"44":{"start":{"line":69,"column":16},"end":{"line":69,"column":44}},"45":{"start":{"line":70,"column":16},"end":{"line":70,"column":31}},"46":{"start":{"line":73,"column":16},"end":{"line":73,"column":65}},"47":{"start":{"line":78,"column":0},"end":{"line":78,"column":26}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":44},"end":{"line":2,"column":45}},"loc":{"start":{"line":2,"column":89},"end":{"line":10,"column":1}},"line":2},"1":{"name":"adopt","decl":{"start":{"line":3,"column":13},"end":{"line":3,"column":18}},"loc":{"start":{"line":3,"column":26},"end":{"line":3,"column":112}},"line":3},"2":{"name":"(anonymous_2)","decl":{"start":{"line":3,"column":70},"end":{"line":3,"column":71}},"loc":{"start":{"line":3,"column":89},"end":{"line":3,"column":108}},"line":3},"3":{"name":"(anonymous_3)","decl":{"start":{"line":4,"column":36},"end":{"line":4,"column":37}},"loc":{"start":{"line":4,"column":63},"end":{"line":9,"column":5}},"line":4},"4":{"name":"fulfilled","decl":{"start":{"line":5,"column":17},"end":{"line":5,"column":26}},"loc":{"start":{"line":5,"column":34},"end":{"line":5,"column":99}},"line":5},"5":{"name":"rejected","decl":{"start":{"line":6,"column":17},"end":{"line":6,"column":25}},"loc":{"start":{"line":6,"column":33},"end":{"line":6,"column":102}},"line":6},"6":{"name":"step","decl":{"start":{"line":7,"column":17},"end":{"line":7,"column":21}},"loc":{"start":{"line":7,"column":30},"end":{"line":7,"column":118}},"line":7},"7":{"name":"(anonymous_7)","decl":{"start":{"line":11,"column":56},"end":{"line":11,"column":57}},"loc":{"start":{"line":11,"column":71},"end":{"line":13,"column":1}},"line":11},"8":{"name":"(anonymous_8)","decl":{"start":{"line":18,"column":4},"end":{"line":18,"column":5}},"loc":{"start":{"line":18,"column":13},"end":{"line":31,"column":5}},"line":18},"9":{"name":"(anonymous_9)","decl":{"start":{"line":19,"column":47},"end":{"line":19,"column":48}},"loc":{"start":{"line":19,"column":60},"end":{"line":30,"column":9}},"line":19},"10":{"name":"(anonymous_10)","decl":{"start":{"line":32,"column":4},"end":{"line":32,"column":5}},"loc":{"start":{"line":32,"column":33},"end":{"line":50,"column":5}},"line":32},"11":{"name":"(anonymous_11)","decl":{"start":{"line":33,"column":47},"end":{"line":33,"column":48}},"loc":{"start":{"line":33,"column":60},"end":{"line":49,"column":9}},"line":33},"12":{"name":"(anonymous_12)","decl":{"start":{"line":51,"column":4},"end":{"line":51,"column":5}},"loc":{"start":{"line":51,"column":21},"end":{"line":63,"column":5}},"line":51},"13":{"name":"(anonymous_13)","decl":{"start":{"line":52,"column":47},"end":{"line":52,"column":48}},"loc":{"start":{"line":52,"column":60},"end":{"line":62,"column":9}},"line":52},"14":{"name":"(anonymous_14)","decl":{"start":{"line":64,"column":4},"end":{"line":64,"column":5}},"loc":{"start":{"line":64,"column":15},"end":{"line":76,"column":5}},"line":64},"15":{"name":"(anonymous_15)","decl":{"start":{"line":65,"column":47},"end":{"line":65,"column":48}},"loc":{"start":{"line":65,"column":60},"end":{"line":75,"column":9}},"line":65}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":17},"end":{"line":2,"column":21}},{"start":{"line":2,"column":25},"end":{"line":2,"column":39}},{"start":{"line":2,"column":44},"end":{"line":10,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":35},"end":{"line":3,"column":109}},"type":"cond-expr","locations":[{"start":{"line":3,"column":56},"end":{"line":3,"column":61}},{"start":{"line":3,"column":64},"end":{"line":3,"column":109}}],"line":3},"2":{"loc":{"start":{"line":4,"column":16},"end":{"line":4,"column":34}},"type":"binary-expr","locations":[{"start":{"line":4,"column":16},"end":{"line":4,"column":17}},{"start":{"line":4,"column":22},"end":{"line":4,"column":33}}],"line":4},"3":{"loc":{"start":{"line":7,"column":32},"end":{"line":7,"column":115}},"type":"cond-expr","locations":[{"start":{"line":7,"column":46},"end":{"line":7,"column":67}},{"start":{"line":7,"column":70},"end":{"line":7,"column":115}}],"line":7},"4":{"loc":{"start":{"line":8,"column":51},"end":{"line":8,"column":67}},"type":"binary-expr","locations":[{"start":{"line":8,"column":51},"end":{"line":8,"column":61}},{"start":{"line":8,"column":65},"end":{"line":8,"column":67}}],"line":8},"5":{"loc":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"type":"binary-expr","locations":[{"start":{"line":11,"column":23},"end":{"line":11,"column":27}},{"start":{"line":11,"column":31},"end":{"line":11,"column":51}},{"start":{"line":11,"column":56},"end":{"line":13,"column":1}}],"line":11},"6":{"loc":{"start":{"line":12,"column":11},"end":{"line":12,"column":61}},"type":"cond-expr","locations":[{"start":{"line":12,"column":37},"end":{"line":12,"column":40}},{"start":{"line":12,"column":43},"end":{"line":12,"column":61}}],"line":12},"7":{"loc":{"start":{"line":12,"column":12},"end":{"line":12,"column":33}},"type":"binary-expr","locations":[{"start":{"line":12,"column":12},"end":{"line":12,"column":15}},{"start":{"line":12,"column":19},"end":{"line":12,"column":33}}],"line":12}},"s":{"0":1,"1":10,"2":0,"3":5,"4":10,"5":10,"6":0,"7":0,"8":0,"9":0,"10":15,"11":5,"12":1,"13":1,"14":1,"15":1,"16":1,"17":2,"18":2,"19":2,"20":2,"21":2,"22":2,"23":2,"24":0,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":0,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":0,"40":1,"41":1,"42":1,"43":1,"44":1,"45":1,"46":0,"47":1},"f":{"0":5,"1":10,"2":0,"3":5,"4":10,"5":0,"6":15,"7":1,"8":2,"9":2,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1},"b":{"0":[1,1,1],"1":[10,0],"2":[5,5],"3":[5,10],"4":[5,5],"5":[1,1,1],"6":[1,0],"7":[1,1]},"inputSourceMap":{"version":3,"file":"C:/Users/Administrator/Desktop/Full-Stack Projects/Small-Blog/API/src/model/comment.ts","sources":["C:/Users/Administrator/Desktop/Full-Stack Projects/Small-Blog/API/src/model/comment.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;AAAA,gEAAwC;AAUxC,MAAa,OAAO;IACZ,IAAI,CAAC,EAAU;;YACnB,IAAI;gBACF,MAAM,IAAI,GAAG,MAAM,gBAAM,CAAC,OAAO,EAAE,CAAC;gBACpC,MAAM,GAAG,GAAG,oCAAoC,CAAC;gBACjD,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;gBAC3C,IAAI,CAAC,OAAO,EAAE,CAAC;gBACf,OAAO,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;aACvB;YAAC,OAAO,GAAG,EAAE;gBACZ,MAAM,IAAI,KAAK,CAAC,wBAAwB,EAAE,EAAE,CAAC,CAAC;aAC/C;QACH,CAAC;KAAA;IAEK,MAAM,CACV,MAAc,EACd,MAAc,EACd,IAAY;;YAEZ,IAAI;gBACF,MAAM,IAAI,GAAG,MAAM,gBAAM,CAAC,OAAO,EAAE,CAAC;gBACpC,MAAM,GAAG,GACP,qFAAqF,CAAC;gBACxF,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,KAAK,CAAC,GAAG,EAAE;oBACnC,MAAM;oBACN,MAAM;oBACN,IAAI;oBACJ,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE;iBAChB,CAAC,CAAC;gBACH,IAAI,CAAC,OAAO,EAAE,CAAC;gBACf,OAAO,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;aACvB;YAAC,OAAO,GAAG,EAAE;gBACZ,MAAM,IAAI,KAAK,CAAC,4CAA4C,MAAM,EAAE,CAAC,CAAC;aACvE;QACH,CAAC;KAAA;IAEK,MAAM,CAAC,EAAU,EAAE,IAAY;;YACnC,IAAI;gBACF,MAAM,IAAI,GAAG,MAAM,gBAAM,CAAC,OAAO,EAAE,CAAC;gBACpC,MAAM,GAAG,GAAG,yCAAyC,CAAC;gBACtD,MAAM,IAAI,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC;gBAClC,IAAI,CAAC,OAAO,EAAE,CAAC;aAChB;YAAC,OAAO,GAAG,EAAE;gBACZ,MAAM,IAAI,KAAK,CAAC,2BAA2B,EAAE,EAAE,CAAC,CAAC;aAClD;QACH,CAAC;KAAA;IAEK,MAAM,CAAC,EAAU;;YACrB,IAAI;gBACF,MAAM,IAAI,GAAG,MAAM,gBAAM,CAAC,OAAO,EAAE,CAAC;gBACpC,MAAM,GAAG,GAAG,kCAAkC,CAAC;gBAC/C,MAAM,IAAI,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;gBAC5B,IAAI,CAAC,OAAO,EAAE,CAAC;aAChB;YAAC,OAAO,GAAG,EAAE;gBACZ,MAAM,IAAI,KAAK,CAAC,2BAA2B,EAAE,EAAE,CAAC,CAAC;aAClD;QACH,CAAC;KAAA;CACF;AAxDD,0BAwDC","sourcesContent":["import Client from '../database/client';\r\n\r\nexport type TCommnet = {\r\n  id?: number;\r\n  author: string;\r\n  postid: number;\r\n  body: string;\r\n  createdat: string;\r\n};\r\n\r\nexport class Comment {\r\n  async show(id: number): Promise<TCommnet> {\r\n    try {\r\n      const conn = await Client.connect();\r\n      const sql = 'SELECT * FROM comments WHERE id=$1';\r\n      const result = await conn.query(sql, [id]);\r\n      conn.release();\r\n      return result.rows[0];\r\n    } catch (err) {\r\n      throw new Error(`Couldn't get comment ${id}`);\r\n    }\r\n  }\r\n\r\n  async create(\r\n    postId: number,\r\n    author: string,\r\n    body: string\r\n  ): Promise<TCommnet> {\r\n    try {\r\n      const conn = await Client.connect();\r\n      const sql =\r\n        'INSERT INTO comments(postid,author,body,createdat) VALUES ($1,$2,$3,$4) RETURNING *';\r\n      const result = await conn.query(sql, [\r\n        postId,\r\n        author,\r\n        body,\r\n        Date.now() + '',\r\n      ]);\r\n      conn.release();\r\n      return result.rows[0];\r\n    } catch (err) {\r\n      throw new Error(`Error while creating a comments for post ${postId}`);\r\n    }\r\n  }\r\n\r\n  async update(id: number, body: string): Promise<void> {\r\n    try {\r\n      const conn = await Client.connect();\r\n      const sql = 'UPDATE comments SET body=$1 WHERE id=$2';\r\n      await conn.query(sql, [body, id]);\r\n      conn.release();\r\n    } catch (err) {\r\n      throw new Error(`Couldn't update commnet ${id}`);\r\n    }\r\n  }\r\n\r\n  async delete(id: number): Promise<void> {\r\n    try {\r\n      const conn = await Client.connect();\r\n      const sql = 'DELETE FROM comments WHERE id=$1';\r\n      await conn.query(sql, [id]);\r\n      conn.release();\r\n    } catch (err) {\r\n      throw new Error(`Couldn't delete commnet ${id}`);\r\n    }\r\n  }\r\n}\r\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"e897be7cdafb60ecfe651b5862512a1391f1af0f","contentHash":"95b4af5751a507679664bce938d5153a52517d7b71c5c5b98b70423f93394c93"},"C:\\Users\\Administrator\\Desktop\\Full-Stack Projects\\Small-Blog\\API\\src\\util\\validators\\commentValidators.ts":{"path":"C:\\Users\\Administrator\\Desktop\\Full-Stack Projects\\Small-Blog\\API\\src\\util\\validators\\commentValidators.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":103}},"2":{"start":{"line":4,"column":28},"end":{"line":4,"column":56}},"3":{"start":{"line":5,"column":30},"end":{"line":12,"column":1}},"4":{"start":{"line":6,"column":4},"end":{"line":11,"column":6}},"5":{"start":{"line":13,"column":0},"end":{"line":13,"column":54}},"6":{"start":{"line":14,"column":30},"end":{"line":21,"column":1}},"7":{"start":{"line":15,"column":4},"end":{"line":20,"column":6}},"8":{"start":{"line":22,"column":0},"end":{"line":22,"column":54}},"9":{"start":{"line":23,"column":30},"end":{"line":25,"column":1}},"10":{"start":{"line":24,"column":4},"end":{"line":24,"column":80}},"11":{"start":{"line":26,"column":0},"end":{"line":26,"column":54}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":5,"column":30},"end":{"line":5,"column":31}},"loc":{"start":{"line":5,"column":36},"end":{"line":12,"column":1}},"line":5},"1":{"name":"(anonymous_1)","decl":{"start":{"line":14,"column":30},"end":{"line":14,"column":31}},"loc":{"start":{"line":14,"column":36},"end":{"line":21,"column":1}},"line":14},"2":{"name":"(anonymous_2)","decl":{"start":{"line":23,"column":30},"end":{"line":23,"column":31}},"loc":{"start":{"line":23,"column":36},"end":{"line":25,"column":1}},"line":23}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1},"f":{"0":1,"1":1,"2":1},"b":{},"inputSourceMap":{"version":3,"file":"C:/Users/Administrator/Desktop/Full-Stack Projects/Small-Blog/API/src/util/validators/commentValidators.ts","sources":["C:/Users/Administrator/Desktop/Full-Stack Projects/Small-Blog/API/src/util/validators/commentValidators.ts"],"names":[],"mappings":";;;AAAA,yDAAgD;AAEzC,MAAM,qBAAqB,GAAG,GAAG,EAAE;IACxC,OAAO;QACL,IAAA,wBAAI,EAAC,MAAM,EAAE,sBAAsB,CAAC;aACjC,QAAQ,EAAE;aACV,QAAQ,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;QACjC,IAAA,wBAAI,EAAC,QAAQ,EAAE,sBAAsB,CAAC,CAAC,QAAQ,EAAE,CAAC,SAAS,EAAE;KAC9D,CAAC;AACJ,CAAC,CAAC;AAPW,QAAA,qBAAqB,yBAOhC;AAEK,MAAM,qBAAqB,GAAG,GAAG,EAAE;IACxC,OAAO;QACL,IAAA,yBAAK,EAAC,WAAW,CAAC,CAAC,QAAQ,EAAE,CAAC,SAAS,EAAE;QACzC,IAAA,wBAAI,EAAC,MAAM,EAAE,sBAAsB,CAAC;aACjC,QAAQ,EAAE;aACV,QAAQ,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;KAClC,CAAC;AACJ,CAAC,CAAC;AAPW,QAAA,qBAAqB,yBAOhC;AAEK,MAAM,qBAAqB,GAAG,GAAG,EAAE;IACxC,OAAO,CAAC,IAAA,yBAAK,EAAC,WAAW,CAAC,CAAC,QAAQ,EAAE,CAAC,SAAS,EAAE,CAAC,CAAC;AACrD,CAAC,CAAC;AAFW,QAAA,qBAAqB,yBAEhC","sourcesContent":["import { body, param } from 'express-validator';\r\n\r\nexport const validateCommentCreate = () => {\r\n  return [\r\n    body('body', 'Invalid comment body')\r\n      .notEmpty()\r\n      .isLength({ min: 1, max: 400 }),\r\n    body('postId', 'Must provide post id').notEmpty().isNumeric(),\r\n  ];\r\n};\r\n\r\nexport const validateCommentUpdate = () => {\r\n  return [\r\n    param('commentId').notEmpty().isNumeric(),\r\n    body('body', 'Invalid comment body')\r\n      .notEmpty()\r\n      .isLength({ min: 1, max: 400 }),\r\n  ];\r\n};\r\n\r\nexport const validateCommentDelete = () => {\r\n  return [param('commentId').notEmpty().isNumeric()];\r\n};\r\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"63d05570ec61cb36d5916bdaa05b4c9063eb3f47","contentHash":"cc1c887e5471e38c13f695c80912cc690891ee43fa4c8a8e1fccfd9a0418d460"},"C:\\Users\\Administrator\\Desktop\\Full-Stack Projects\\Small-Blog\\API\\src\\handler\\refreshToken.ts":{"path":"C:\\Users\\Administrator\\Desktop\\Full-Stack Projects\\Small-Blog\\API\\src\\handler\\refreshToken.ts","statementMap":{"0":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"1":{"start":{"line":3,"column":28},"end":{"line":3,"column":110}},"2":{"start":{"line":3,"column":91},"end":{"line":3,"column":106}},"3":{"start":{"line":4,"column":4},"end":{"line":9,"column":7}},"4":{"start":{"line":5,"column":36},"end":{"line":5,"column":97}},"5":{"start":{"line":5,"column":42},"end":{"line":5,"column":70}},"6":{"start":{"line":5,"column":85},"end":{"line":5,"column":95}},"7":{"start":{"line":6,"column":35},"end":{"line":6,"column":100}},"8":{"start":{"line":6,"column":41},"end":{"line":6,"column":73}},"9":{"start":{"line":6,"column":88},"end":{"line":6,"column":98}},"10":{"start":{"line":7,"column":32},"end":{"line":7,"column":116}},"11":{"start":{"line":8,"column":8},"end":{"line":8,"column":78}},"12":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"13":{"start":{"line":12,"column":4},"end":{"line":12,"column":62}},"14":{"start":{"line":14,"column":0},"end":{"line":14,"column":62}},"15":{"start":{"line":15,"column":23},"end":{"line":15,"column":46}},"16":{"start":{"line":16,"column":19},"end":{"line":16,"column":64}},"17":{"start":{"line":17,"column":15},"end":{"line":17,"column":41}},"18":{"start":{"line":18,"column":20},"end":{"line":18,"column":65}},"19":{"start":{"line":19,"column":83},"end":{"line":19,"column":94}},"20":{"start":{"line":20,"column":14},"end":{"line":20,"column":31}},"21":{"start":{"line":21,"column":21},"end":{"line":73,"column":2}},"22":{"start":{"line":21,"column":41},"end":{"line":73,"column":2}},"23":{"start":{"line":23,"column":4},"end":{"line":72,"column":5}},"24":{"start":{"line":24,"column":8},"end":{"line":26,"column":9}},"25":{"start":{"line":25,"column":12},"end":{"line":25,"column":160}},"26":{"start":{"line":27,"column":27},"end":{"line":27,"column":55}},"27":{"start":{"line":28,"column":8},"end":{"line":31,"column":11}},"28":{"start":{"line":32,"column":21},"end":{"line":32,"column":56}},"29":{"start":{"line":34,"column":8},"end":{"line":42,"column":9}},"30":{"start":{"line":35,"column":12},"end":{"line":40,"column":16}},"31":{"start":{"line":35,"column":89},"end":{"line":40,"column":14}},"32":{"start":{"line":36,"column":16},"end":{"line":37,"column":47}},"33":{"start":{"line":37,"column":20},"end":{"line":37,"column":47}},"34":{"start":{"line":39,"column":16},"end":{"line":39,"column":114}},"35":{"start":{"line":41,"column":12},"end":{"line":41,"column":114}},"36":{"start":{"line":43,"column":33},"end":{"line":43,"column":131}},"37":{"start":{"line":43,"column":113},"end":{"line":43,"column":130}},"38":{"start":{"line":44,"column":8},"end":{"line":68,"column":12}},"39":{"start":{"line":44,"column":85},"end":{"line":68,"column":10}},"40":{"start":{"line":47,"column":12},"end":{"line":49,"column":13}},"41":{"start":{"line":48,"column":16},"end":{"line":48,"column":69}},"42":{"start":{"line":50,"column":12},"end":{"line":51,"column":43}},"43":{"start":{"line":51,"column":16},"end":{"line":51,"column":43}},"44":{"start":{"line":53,"column":32},"end":{"line":53,"column":161}},"45":{"start":{"line":54,"column":36},"end":{"line":54,"column":174}},"46":{"start":{"line":55,"column":12},"end":{"line":58,"column":15}},"47":{"start":{"line":59,"column":12},"end":{"line":62,"column":15}},"48":{"start":{"line":63,"column":12},"end":{"line":67,"column":15}},"49":{"start":{"line":71,"column":8},"end":{"line":71,"column":82}},"50":{"start":{"line":74,"column":15},"end":{"line":97,"column":2}},"51":{"start":{"line":74,"column":35},"end":{"line":97,"column":2}},"52":{"start":{"line":76,"column":4},"end":{"line":96,"column":5}},"53":{"start":{"line":77,"column":8},"end":{"line":79,"column":9}},"54":{"start":{"line":78,"column":12},"end":{"line":78,"column":159}},"55":{"start":{"line":80,"column":27},"end":{"line":80,"column":55}},"56":{"start":{"line":81,"column":8},"end":{"line":84,"column":11}},"57":{"start":{"line":85,"column":21},"end":{"line":85,"column":56}},"58":{"start":{"line":86,"column":8},"end":{"line":88,"column":9}},"59":{"start":{"line":87,"column":12},"end":{"line":87,"column":114}},"60":{"start":{"line":89,"column":33},"end":{"line":89,"column":131}},"61":{"start":{"line":89,"column":113},"end":{"line":89,"column":130}},"62":{"start":{"line":90,"column":8},"end":{"line":90,"column":66}},"63":{"start":{"line":92,"column":8},"end":{"line":92,"column":28}},"64":{"start":{"line":95,"column":8},"end":{"line":95,"column":82}},"65":{"start":{"line":98,"column":26},"end":{"line":101,"column":1}},"66":{"start":{"line":99,"column":4},"end":{"line":99,"column":44}},"67":{"start":{"line":100,"column":4},"end":{"line":100,"column":31}},"68":{"start":{"line":102,"column":0},"end":{"line":102,"column":36}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":44},"end":{"line":2,"column":45}},"loc":{"start":{"line":2,"column":89},"end":{"line":10,"column":1}},"line":2},"1":{"name":"adopt","decl":{"start":{"line":3,"column":13},"end":{"line":3,"column":18}},"loc":{"start":{"line":3,"column":26},"end":{"line":3,"column":112}},"line":3},"2":{"name":"(anonymous_2)","decl":{"start":{"line":3,"column":70},"end":{"line":3,"column":71}},"loc":{"start":{"line":3,"column":89},"end":{"line":3,"column":108}},"line":3},"3":{"name":"(anonymous_3)","decl":{"start":{"line":4,"column":36},"end":{"line":4,"column":37}},"loc":{"start":{"line":4,"column":63},"end":{"line":9,"column":5}},"line":4},"4":{"name":"fulfilled","decl":{"start":{"line":5,"column":17},"end":{"line":5,"column":26}},"loc":{"start":{"line":5,"column":34},"end":{"line":5,"column":99}},"line":5},"5":{"name":"rejected","decl":{"start":{"line":6,"column":17},"end":{"line":6,"column":25}},"loc":{"start":{"line":6,"column":33},"end":{"line":6,"column":102}},"line":6},"6":{"name":"step","decl":{"start":{"line":7,"column":17},"end":{"line":7,"column":21}},"loc":{"start":{"line":7,"column":30},"end":{"line":7,"column":118}},"line":7},"7":{"name":"(anonymous_7)","decl":{"start":{"line":11,"column":56},"end":{"line":11,"column":57}},"loc":{"start":{"line":11,"column":71},"end":{"line":13,"column":1}},"line":11},"8":{"name":"(anonymous_8)","decl":{"start":{"line":21,"column":21},"end":{"line":21,"column":22}},"loc":{"start":{"line":21,"column":41},"end":{"line":73,"column":2}},"line":21},"9":{"name":"(anonymous_9)","decl":{"start":{"line":21,"column":75},"end":{"line":21,"column":76}},"loc":{"start":{"line":21,"column":88},"end":{"line":73,"column":1}},"line":21},"10":{"name":"(anonymous_10)","decl":{"start":{"line":35,"column":71},"end":{"line":35,"column":72}},"loc":{"start":{"line":35,"column":89},"end":{"line":40,"column":14}},"line":35},"11":{"name":"(anonymous_11)","decl":{"start":{"line":35,"column":123},"end":{"line":35,"column":124}},"loc":{"start":{"line":35,"column":136},"end":{"line":40,"column":13}},"line":35},"12":{"name":"(anonymous_12)","decl":{"start":{"line":43,"column":105},"end":{"line":43,"column":106}},"loc":{"start":{"line":43,"column":113},"end":{"line":43,"column":130}},"line":43},"13":{"name":"(anonymous_13)","decl":{"start":{"line":44,"column":67},"end":{"line":44,"column":68}},"loc":{"start":{"line":44,"column":85},"end":{"line":68,"column":10}},"line":44},"14":{"name":"(anonymous_14)","decl":{"start":{"line":44,"column":119},"end":{"line":44,"column":120}},"loc":{"start":{"line":44,"column":132},"end":{"line":68,"column":9}},"line":44},"15":{"name":"(anonymous_15)","decl":{"start":{"line":74,"column":15},"end":{"line":74,"column":16}},"loc":{"start":{"line":74,"column":35},"end":{"line":97,"column":2}},"line":74},"16":{"name":"(anonymous_16)","decl":{"start":{"line":74,"column":69},"end":{"line":74,"column":70}},"loc":{"start":{"line":74,"column":82},"end":{"line":97,"column":1}},"line":74},"17":{"name":"(anonymous_17)","decl":{"start":{"line":89,"column":105},"end":{"line":89,"column":106}},"loc":{"start":{"line":89,"column":113},"end":{"line":89,"column":130}},"line":89},"18":{"name":"(anonymous_18)","decl":{"start":{"line":98,"column":26},"end":{"line":98,"column":27}},"loc":{"start":{"line":98,"column":35},"end":{"line":101,"column":1}},"line":98}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":17},"end":{"line":2,"column":21}},{"start":{"line":2,"column":25},"end":{"line":2,"column":39}},{"start":{"line":2,"column":44},"end":{"line":10,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":35},"end":{"line":3,"column":109}},"type":"cond-expr","locations":[{"start":{"line":3,"column":56},"end":{"line":3,"column":61}},{"start":{"line":3,"column":64},"end":{"line":3,"column":109}}],"line":3},"2":{"loc":{"start":{"line":4,"column":16},"end":{"line":4,"column":34}},"type":"binary-expr","locations":[{"start":{"line":4,"column":16},"end":{"line":4,"column":17}},{"start":{"line":4,"column":22},"end":{"line":4,"column":33}}],"line":4},"3":{"loc":{"start":{"line":7,"column":32},"end":{"line":7,"column":115}},"type":"cond-expr","locations":[{"start":{"line":7,"column":46},"end":{"line":7,"column":67}},{"start":{"line":7,"column":70},"end":{"line":7,"column":115}}],"line":7},"4":{"loc":{"start":{"line":8,"column":51},"end":{"line":8,"column":67}},"type":"binary-expr","locations":[{"start":{"line":8,"column":51},"end":{"line":8,"column":61}},{"start":{"line":8,"column":65},"end":{"line":8,"column":67}}],"line":8},"5":{"loc":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"type":"binary-expr","locations":[{"start":{"line":11,"column":23},"end":{"line":11,"column":27}},{"start":{"line":11,"column":31},"end":{"line":11,"column":51}},{"start":{"line":11,"column":56},"end":{"line":13,"column":1}}],"line":11},"6":{"loc":{"start":{"line":12,"column":11},"end":{"line":12,"column":61}},"type":"cond-expr","locations":[{"start":{"line":12,"column":37},"end":{"line":12,"column":40}},{"start":{"line":12,"column":43},"end":{"line":12,"column":61}}],"line":12},"7":{"loc":{"start":{"line":12,"column":12},"end":{"line":12,"column":33}},"type":"binary-expr","locations":[{"start":{"line":12,"column":12},"end":{"line":12,"column":15}},{"start":{"line":12,"column":19},"end":{"line":12,"column":33}}],"line":12},"8":{"loc":{"start":{"line":24,"column":8},"end":{"line":26,"column":9}},"type":"if","locations":[{"start":{"line":24,"column":8},"end":{"line":26,"column":9}},{"start":{"line":24,"column":8},"end":{"line":26,"column":9}}],"line":24},"9":{"loc":{"start":{"line":34,"column":8},"end":{"line":42,"column":9}},"type":"if","locations":[{"start":{"line":34,"column":8},"end":{"line":42,"column":9}},{"start":{"line":34,"column":8},"end":{"line":42,"column":9}}],"line":34},"10":{"loc":{"start":{"line":36,"column":16},"end":{"line":37,"column":47}},"type":"if","locations":[{"start":{"line":36,"column":16},"end":{"line":37,"column":47}},{"start":{"line":36,"column":16},"end":{"line":37,"column":47}}],"line":36},"11":{"loc":{"start":{"line":39,"column":47},"end":{"line":39,"column":112}},"type":"cond-expr","locations":[{"start":{"line":39,"column":88},"end":{"line":39,"column":94}},{"start":{"line":39,"column":97},"end":{"line":39,"column":112}}],"line":39},"12":{"loc":{"start":{"line":39,"column":47},"end":{"line":39,"column":85}},"type":"binary-expr","locations":[{"start":{"line":39,"column":47},"end":{"line":39,"column":63}},{"start":{"line":39,"column":67},"end":{"line":39,"column":85}}],"line":39},"13":{"loc":{"start":{"line":43,"column":33},"end":{"line":43,"column":131}},"type":"cond-expr","locations":[{"start":{"line":43,"column":86},"end":{"line":43,"column":92}},{"start":{"line":43,"column":95},"end":{"line":43,"column":131}}],"line":43},"14":{"loc":{"start":{"line":43,"column":33},"end":{"line":43,"column":83}},"type":"binary-expr","locations":[{"start":{"line":43,"column":33},"end":{"line":43,"column":66}},{"start":{"line":43,"column":70},"end":{"line":43,"column":83}}],"line":43},"15":{"loc":{"start":{"line":47,"column":12},"end":{"line":49,"column":13}},"type":"if","locations":[{"start":{"line":47,"column":12},"end":{"line":49,"column":13}},{"start":{"line":47,"column":12},"end":{"line":49,"column":13}}],"line":47},"16":{"loc":{"start":{"line":50,"column":12},"end":{"line":51,"column":43}},"type":"if","locations":[{"start":{"line":50,"column":12},"end":{"line":51,"column":43}},{"start":{"line":50,"column":12},"end":{"line":51,"column":43}}],"line":50},"17":{"loc":{"start":{"line":50,"column":16},"end":{"line":50,"column":155}},"type":"binary-expr","locations":[{"start":{"line":50,"column":16},"end":{"line":50,"column":19}},{"start":{"line":50,"column":23},"end":{"line":50,"column":155}}],"line":50},"18":{"loc":{"start":{"line":50,"column":24},"end":{"line":50,"column":139}},"type":"cond-expr","locations":[{"start":{"line":50,"column":122},"end":{"line":50,"column":128}},{"start":{"line":50,"column":131},"end":{"line":50,"column":139}}],"line":50},"19":{"loc":{"start":{"line":50,"column":24},"end":{"line":50,"column":119}},"type":"binary-expr","locations":[{"start":{"line":50,"column":24},"end":{"line":50,"column":102}},{"start":{"line":50,"column":106},"end":{"line":50,"column":119}}],"line":50},"20":{"loc":{"start":{"line":50,"column":30},"end":{"line":50,"column":92}},"type":"cond-expr","locations":[{"start":{"line":50,"column":71},"end":{"line":50,"column":77}},{"start":{"line":50,"column":80},"end":{"line":50,"column":92}}],"line":50},"21":{"loc":{"start":{"line":50,"column":30},"end":{"line":50,"column":68}},"type":"binary-expr","locations":[{"start":{"line":50,"column":30},"end":{"line":50,"column":46}},{"start":{"line":50,"column":50},"end":{"line":50,"column":68}}],"line":50},"22":{"loc":{"start":{"line":53,"column":57},"end":{"line":53,"column":119}},"type":"cond-expr","locations":[{"start":{"line":53,"column":98},"end":{"line":53,"column":104}},{"start":{"line":53,"column":107},"end":{"line":53,"column":119}}],"line":53},"23":{"loc":{"start":{"line":53,"column":57},"end":{"line":53,"column":95}},"type":"binary-expr","locations":[{"start":{"line":53,"column":57},"end":{"line":53,"column":73}},{"start":{"line":53,"column":77},"end":{"line":53,"column":95}}],"line":53},"24":{"loc":{"start":{"line":54,"column":61},"end":{"line":54,"column":123}},"type":"cond-expr","locations":[{"start":{"line":54,"column":102},"end":{"line":54,"column":108}},{"start":{"line":54,"column":111},"end":{"line":54,"column":123}}],"line":54},"25":{"loc":{"start":{"line":54,"column":61},"end":{"line":54,"column":99}},"type":"binary-expr","locations":[{"start":{"line":54,"column":61},"end":{"line":54,"column":77}},{"start":{"line":54,"column":81},"end":{"line":54,"column":99}}],"line":54},"26":{"loc":{"start":{"line":55,"column":35},"end":{"line":55,"column":103}},"type":"cond-expr","locations":[{"start":{"line":55,"column":76},"end":{"line":55,"column":82}},{"start":{"line":55,"column":85},"end":{"line":55,"column":103}}],"line":55},"27":{"loc":{"start":{"line":55,"column":35},"end":{"line":55,"column":73}},"type":"binary-expr","locations":[{"start":{"line":55,"column":35},"end":{"line":55,"column":51}},{"start":{"line":55,"column":55},"end":{"line":55,"column":73}}],"line":55},"28":{"loc":{"start":{"line":77,"column":8},"end":{"line":79,"column":9}},"type":"if","locations":[{"start":{"line":77,"column":8},"end":{"line":79,"column":9}},{"start":{"line":77,"column":8},"end":{"line":79,"column":9}}],"line":77},"29":{"loc":{"start":{"line":86,"column":8},"end":{"line":88,"column":9}},"type":"if","locations":[{"start":{"line":86,"column":8},"end":{"line":88,"column":9}},{"start":{"line":86,"column":8},"end":{"line":88,"column":9}}],"line":86},"30":{"loc":{"start":{"line":89,"column":33},"end":{"line":89,"column":131}},"type":"cond-expr","locations":[{"start":{"line":89,"column":86},"end":{"line":89,"column":92}},{"start":{"line":89,"column":95},"end":{"line":89,"column":131}}],"line":89},"31":{"loc":{"start":{"line":89,"column":33},"end":{"line":89,"column":83}},"type":"binary-expr","locations":[{"start":{"line":89,"column":33},"end":{"line":89,"column":66}},{"start":{"line":89,"column":70},"end":{"line":89,"column":83}}],"line":89}},"s":{"0":1,"1":0,"2":0,"3":2,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":2,"11":2,"12":1,"13":2,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":1,"51":1,"52":1,"53":1,"54":1,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":1,"66":1,"67":1,"68":1},"f":{"0":2,"1":0,"2":0,"3":2,"4":0,"5":0,"6":2,"7":2,"8":1,"9":1,"10":0,"11":0,"12":0,"13":0,"14":0,"15":1,"16":1,"17":0,"18":1},"b":{"0":[1,1,1],"1":[0,0],"2":[2,2],"3":[2,0],"4":[2,2],"5":[1,1,1],"6":[2,0],"7":[2,2],"8":[1,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[1,0],"29":[0,0],"30":[0,0],"31":[0,0]},"inputSourceMap":{"version":3,"file":"C:/Users/Administrator/Desktop/Full-Stack Projects/Small-Blog/API/src/handler/refreshToken.ts","sources":["C:/Users/Administrator/Desktop/Full-Stack Projects/Small-Blog/API/src/handler/refreshToken.ts"],"names":[],"mappings":"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","sourcesContent":["import { VerifyErrors, verify } from 'jsonwebtoken';\r\nimport APIError from '../Error/ApiError';\r\nimport { User } from './../model/user';\r\nimport { Application, NextFunction, Request, Response } from 'express';\r\nimport signToken from '../util/signToken';\r\n\r\nconst {\r\n  JWT_REFRESH_SECRET,\r\n  JWT_REFRESH_EXPIRY,\r\n  JWT_ACCESS_EXPIRY,\r\n  JWT_SECRET,\r\n} = process.env;\r\n\r\nconst store = new User();\r\n\r\nconst refreshToken = async (\r\n  req: Request,\r\n  res: Response,\r\n  next: NextFunction\r\n): Promise<void> => {\r\n  try {\r\n    if (!req.cookies['refresh-token']) {\r\n      return next(\r\n        new APIError(\r\n          `You are not authorized to get such info, please login first`,\r\n          401,\r\n          'not authorized to get such a route',\r\n          true\r\n        )\r\n      );\r\n    }\r\n    const jwtRefresh = req.cookies['refresh-token'];\r\n    res.clearCookie('refresh-token', {\r\n      httpOnly: true,\r\n      maxAge: 24 * 60 * 60 * 1000,\r\n    });\r\n    const user = await store.showByToken(jwtRefresh);\r\n    // ! remember to remove the refresh token from the database (make it one time use only)\r\n\r\n    if (!user) {\r\n      verify(\r\n        jwtRefresh,\r\n        JWT_REFRESH_SECRET as string,\r\n        async (err: VerifyErrors | null, payload: any) => {\r\n          if (err) return res.sendStatus(403);\r\n          // ? with the refresh token rotation here we know that invalid token (resuse attempt), so we delete all user tokens\r\n          await store.deleteRefreshToken(payload?.user.id);\r\n        }\r\n      );\r\n      return next(\r\n        new APIError(\r\n          `cannot be accessed`,\r\n          403,\r\n          'failed to fetch the user info',\r\n          true\r\n        )\r\n      );\r\n    }\r\n    const newRefreshTokens = user.refreshtoken?.filter(\r\n      (rt) => rt !== jwtRefresh\r\n    ) as Array<string>;\r\n\r\n    verify(\r\n      jwtRefresh,\r\n      JWT_REFRESH_SECRET as string,\r\n      async (err: VerifyErrors | null, payload: any) => {\r\n        // ? HERE all good but expired token\r\n        if (err) {\r\n          await store.storeToken(user.email, newRefreshTokens);\r\n        }\r\n        if (err || payload?.user?.email !== user.email)\r\n          return res.sendStatus(403);\r\n\r\n        //  ? now we have a valid token\r\n        const accessToken = signToken(\r\n          payload?.user,\r\n          JWT_SECRET + '',\r\n          JWT_ACCESS_EXPIRY + ''\r\n        );\r\n        const newRefreshToken = signToken(\r\n          payload?.user,\r\n          JWT_REFRESH_SECRET + '',\r\n          JWT_REFRESH_EXPIRY + ''\r\n        );\r\n\r\n        await store.storeToken(payload?.user.email, [\r\n          ...newRefreshTokens,\r\n          newRefreshToken,\r\n        ]);\r\n\r\n        res.cookie('refresh-token', newRefreshToken, {\r\n          httpOnly: true,\r\n          maxAge: 24 * 60 * 60 * 1000,\r\n        });\r\n        res.json({\r\n          message: 'user token refreshed',\r\n          name: user.name,\r\n          accessToken,\r\n        });\r\n      }\r\n    );\r\n  } catch (err) {\r\n    throw new Error(`couldn't authenticate user, ${req.body.email} , ${err}`);\r\n  }\r\n};\r\n\r\nconst logout = async (\r\n  req: Request,\r\n  res: Response,\r\n  next: NextFunction\r\n): Promise<void> => {\r\n  try {\r\n    if (!req.cookies['refresh-token']) {\r\n      return next(\r\n        new APIError(\r\n          `You are not allowed do such an action, no token available.`,\r\n          403,\r\n          'not authorized to get such a route',\r\n          true\r\n        )\r\n      );\r\n    }\r\n    const jwtRefresh = req.cookies['refresh-token'];\r\n    res.clearCookie('refresh-token', {\r\n      httpOnly: true,\r\n      maxAge: 24 * 60 * 60 * 1000,\r\n    });\r\n\r\n    const user = await store.showByToken(jwtRefresh);\r\n    if (!user) {\r\n      return next(\r\n        new APIError(\r\n          `cannot be accessed`,\r\n          204,\r\n          'failed to fetch the user info',\r\n          true\r\n        )\r\n      );\r\n    }\r\n\r\n    const newRefreshTokens = user.refreshtoken?.filter(\r\n      (rt) => rt !== jwtRefresh\r\n    ) as Array<string>;\r\n\r\n    await store.storeToken(user.email, [...newRefreshTokens]);\r\n    // IMPORTANT  don't forget in production to set secure flag to true in production\r\n    res.sendStatus(204);\r\n  } catch (err) {\r\n    throw new Error(`couldn't authenticate user, ${req.body.email} , ${err}`);\r\n  }\r\n};\r\n\r\nconst refreshTokenRoute = (app: Application): void => {\r\n  app.get('/token/refresh', refreshToken);\r\n  app.get('/logout', logout);\r\n};\r\n\r\nexport default refreshTokenRoute;\r\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"ad9f0d317a8772514b913862d9da3aac85c3c49a","contentHash":"93fb45b17b6eb4005592ff4c7d27ce8c61359183da7b11d2bd0d2b9775414b5d"},"C:\\Users\\Administrator\\Desktop\\Full-Stack Projects\\Small-Blog\\API\\src\\handler\\oauth2.ts":{"path":"C:\\Users\\Administrator\\Desktop\\Full-Stack Projects\\Small-Blog\\API\\src\\handler\\oauth2.ts","statementMap":{"0":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"1":{"start":{"line":3,"column":28},"end":{"line":3,"column":110}},"2":{"start":{"line":3,"column":91},"end":{"line":3,"column":106}},"3":{"start":{"line":4,"column":4},"end":{"line":9,"column":7}},"4":{"start":{"line":5,"column":36},"end":{"line":5,"column":97}},"5":{"start":{"line":5,"column":42},"end":{"line":5,"column":70}},"6":{"start":{"line":5,"column":85},"end":{"line":5,"column":95}},"7":{"start":{"line":6,"column":35},"end":{"line":6,"column":100}},"8":{"start":{"line":6,"column":41},"end":{"line":6,"column":73}},"9":{"start":{"line":6,"column":88},"end":{"line":6,"column":98}},"10":{"start":{"line":7,"column":32},"end":{"line":7,"column":116}},"11":{"start":{"line":8,"column":8},"end":{"line":8,"column":78}},"12":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"13":{"start":{"line":12,"column":4},"end":{"line":12,"column":62}},"14":{"start":{"line":14,"column":0},"end":{"line":14,"column":62}},"15":{"start":{"line":15,"column":17},"end":{"line":15,"column":51}},"16":{"start":{"line":16,"column":30},"end":{"line":16,"column":60}},"17":{"start":{"line":17,"column":23},"end":{"line":17,"column":46}},"18":{"start":{"line":18,"column":15},"end":{"line":18,"column":39}},"19":{"start":{"line":19,"column":20},"end":{"line":19,"column":65}},"20":{"start":{"line":20,"column":0},"end":{"line":20,"column":26}},"21":{"start":{"line":21,"column":125},"end":{"line":21,"column":136}},"22":{"start":{"line":22,"column":14},"end":{"line":22,"column":31}},"23":{"start":{"line":23,"column":21},"end":{"line":23,"column":116}},"24":{"start":{"line":24,"column":19},"end":{"line":51,"column":2}},"25":{"start":{"line":24,"column":33},"end":{"line":51,"column":2}},"26":{"start":{"line":25,"column":4},"end":{"line":50,"column":5}},"27":{"start":{"line":26,"column":25},"end":{"line":26,"column":33}},"28":{"start":{"line":27,"column":27},"end":{"line":27,"column":60}},"29":{"start":{"line":28,"column":24},"end":{"line":28,"column":72}},"30":{"start":{"line":29,"column":19},"end":{"line":29,"column":54}},"31":{"start":{"line":30,"column":8},"end":{"line":33,"column":9}},"32":{"start":{"line":31,"column":33},"end":{"line":31,"column":72}},"33":{"start":{"line":32,"column":12},"end":{"line":32,"column":129}},"34":{"start":{"line":35,"column":36},"end":{"line":35,"column":40}},"35":{"start":{"line":36,"column":22},"end":{"line":36,"column":108}},"36":{"start":{"line":37,"column":29},"end":{"line":37,"column":124}},"37":{"start":{"line":38,"column":8},"end":{"line":40,"column":9}},"38":{"start":{"line":39,"column":12},"end":{"line":39,"column":35}},"39":{"start":{"line":41,"column":8},"end":{"line":41,"column":76}},"40":{"start":{"line":42,"column":8},"end":{"line":45,"column":11}},"41":{"start":{"line":46,"column":8},"end":{"line":46,"column":70}},"42":{"start":{"line":49,"column":8},"end":{"line":49,"column":28}},"43":{"start":{"line":69,"column":21},"end":{"line":72,"column":1}},"44":{"start":{"line":70,"column":4},"end":{"line":70,"column":49}},"45":{"start":{"line":73,"column":0},"end":{"line":73,"column":31}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":44},"end":{"line":2,"column":45}},"loc":{"start":{"line":2,"column":89},"end":{"line":10,"column":1}},"line":2},"1":{"name":"adopt","decl":{"start":{"line":3,"column":13},"end":{"line":3,"column":18}},"loc":{"start":{"line":3,"column":26},"end":{"line":3,"column":112}},"line":3},"2":{"name":"(anonymous_2)","decl":{"start":{"line":3,"column":70},"end":{"line":3,"column":71}},"loc":{"start":{"line":3,"column":89},"end":{"line":3,"column":108}},"line":3},"3":{"name":"(anonymous_3)","decl":{"start":{"line":4,"column":36},"end":{"line":4,"column":37}},"loc":{"start":{"line":4,"column":63},"end":{"line":9,"column":5}},"line":4},"4":{"name":"fulfilled","decl":{"start":{"line":5,"column":17},"end":{"line":5,"column":26}},"loc":{"start":{"line":5,"column":34},"end":{"line":5,"column":99}},"line":5},"5":{"name":"rejected","decl":{"start":{"line":6,"column":17},"end":{"line":6,"column":25}},"loc":{"start":{"line":6,"column":33},"end":{"line":6,"column":102}},"line":6},"6":{"name":"step","decl":{"start":{"line":7,"column":17},"end":{"line":7,"column":21}},"loc":{"start":{"line":7,"column":30},"end":{"line":7,"column":118}},"line":7},"7":{"name":"(anonymous_7)","decl":{"start":{"line":11,"column":56},"end":{"line":11,"column":57}},"loc":{"start":{"line":11,"column":71},"end":{"line":13,"column":1}},"line":11},"8":{"name":"(anonymous_8)","decl":{"start":{"line":24,"column":19},"end":{"line":24,"column":20}},"loc":{"start":{"line":24,"column":33},"end":{"line":51,"column":2}},"line":24},"9":{"name":"(anonymous_9)","decl":{"start":{"line":24,"column":67},"end":{"line":24,"column":68}},"loc":{"start":{"line":24,"column":80},"end":{"line":51,"column":1}},"line":24},"10":{"name":"(anonymous_10)","decl":{"start":{"line":69,"column":21},"end":{"line":69,"column":22}},"loc":{"start":{"line":69,"column":30},"end":{"line":72,"column":1}},"line":69}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":17},"end":{"line":2,"column":21}},{"start":{"line":2,"column":25},"end":{"line":2,"column":39}},{"start":{"line":2,"column":44},"end":{"line":10,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":35},"end":{"line":3,"column":109}},"type":"cond-expr","locations":[{"start":{"line":3,"column":56},"end":{"line":3,"column":61}},{"start":{"line":3,"column":64},"end":{"line":3,"column":109}}],"line":3},"2":{"loc":{"start":{"line":4,"column":16},"end":{"line":4,"column":34}},"type":"binary-expr","locations":[{"start":{"line":4,"column":16},"end":{"line":4,"column":17}},{"start":{"line":4,"column":22},"end":{"line":4,"column":33}}],"line":4},"3":{"loc":{"start":{"line":7,"column":32},"end":{"line":7,"column":115}},"type":"cond-expr","locations":[{"start":{"line":7,"column":46},"end":{"line":7,"column":67}},{"start":{"line":7,"column":70},"end":{"line":7,"column":115}}],"line":7},"4":{"loc":{"start":{"line":8,"column":51},"end":{"line":8,"column":67}},"type":"binary-expr","locations":[{"start":{"line":8,"column":51},"end":{"line":8,"column":61}},{"start":{"line":8,"column":65},"end":{"line":8,"column":67}}],"line":8},"5":{"loc":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"type":"binary-expr","locations":[{"start":{"line":11,"column":23},"end":{"line":11,"column":27}},{"start":{"line":11,"column":31},"end":{"line":11,"column":51}},{"start":{"line":11,"column":56},"end":{"line":13,"column":1}}],"line":11},"6":{"loc":{"start":{"line":12,"column":11},"end":{"line":12,"column":61}},"type":"cond-expr","locations":[{"start":{"line":12,"column":37},"end":{"line":12,"column":40}},{"start":{"line":12,"column":43},"end":{"line":12,"column":61}}],"line":12},"7":{"loc":{"start":{"line":12,"column":12},"end":{"line":12,"column":33}},"type":"binary-expr","locations":[{"start":{"line":12,"column":12},"end":{"line":12,"column":15}},{"start":{"line":12,"column":19},"end":{"line":12,"column":33}}],"line":12},"8":{"loc":{"start":{"line":30,"column":8},"end":{"line":33,"column":9}},"type":"if","locations":[{"start":{"line":30,"column":8},"end":{"line":33,"column":9}},{"start":{"line":30,"column":8},"end":{"line":33,"column":9}}],"line":30},"9":{"loc":{"start":{"line":38,"column":8},"end":{"line":40,"column":9}},"type":"if","locations":[{"start":{"line":38,"column":8},"end":{"line":40,"column":9}},{"start":{"line":38,"column":8},"end":{"line":40,"column":9}}],"line":38}},"s":{"0":1,"1":1,"2":0,"3":1,"4":0,"5":0,"6":0,"7":1,"8":1,"9":0,"10":2,"11":1,"12":1,"13":2,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"28":1,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":1,"43":1,"44":1,"45":1},"f":{"0":1,"1":1,"2":0,"3":1,"4":0,"5":1,"6":2,"7":2,"8":1,"9":1,"10":1},"b":{"0":[1,1,1],"1":[1,0],"2":[1,1],"3":[1,1],"4":[1,1],"5":[1,1,1],"6":[1,1],"7":[2,2],"8":[0,0],"9":[0,0]},"inputSourceMap":{"version":3,"file":"C:/Users/Administrator/Desktop/Full-Stack Projects/Small-Blog/API/src/handler/oauth2.ts","sources":["C:/Users/Administrator/Desktop/Full-Stack Projects/Small-Blog/API/src/handler/oauth2.ts"],"names":[],"mappings":"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","sourcesContent":["import { Application, Request, Response } from 'express';\r\nimport dotenv from 'dotenv';\r\nimport { OAuth2Client } from 'google-auth-library';\r\nimport { decode } from 'jsonwebtoken';\r\nimport { User } from '../model/user';\r\nimport signToken from '../util/signToken';\r\n\r\ndotenv.config();\r\n\r\nconst {\r\n  GOOGLE_AUTH_CLIENTID,\r\n  GOOGLE_AUTH_SECRET,\r\n  JWT_SECRET,\r\n  JWT_ACCESS_EXPIRY,\r\n  JWT_REFRESH_SECRET,\r\n  JWT_REFRESH_EXPIRY,\r\n} = process.env;\r\n\r\nconst store = new User();\r\n\r\nconst oAuth2Client = new OAuth2Client(\r\n  GOOGLE_AUTH_CLIENTID,\r\n  GOOGLE_AUTH_SECRET,\r\n  'postmessage'\r\n);\r\n\r\nconst googleAuth = async (\r\n  req: Request,\r\n  res: Response\r\n): Promise<void | Response> => {\r\n  try {\r\n    const { code } = req.body;\r\n    const { tokens } = await oAuth2Client.getToken(code);\r\n    const payload = decode(tokens.id_token + '') as {\r\n      email: string;\r\n      given_name: string;\r\n      family_name: string;\r\n    };\r\n    let user = await store.validate(payload.email);\r\n    if (!user) {\r\n      const randomNumber = Math.floor(1000 + Math.random() * 9000);\r\n      user = await store.googleAuthRegister(\r\n        payload.email,\r\n        `${payload.given_name} ${payload.family_name}#${randomNumber}`\r\n      );\r\n    }\r\n    // NOTE  we may check if user has a cookie, so we replace it\r\n    const { id, name, email } = user;\r\n    const token = signToken(\r\n      { id, name, email },\r\n      JWT_SECRET + '',\r\n      JWT_ACCESS_EXPIRY + ''\r\n    );\r\n    const refreshToken = signToken(\r\n      { id, name, email },\r\n      JWT_REFRESH_SECRET + '',\r\n      JWT_REFRESH_EXPIRY + ''\r\n    );\r\n    if (!user.refreshtoken) {\r\n      user.refreshtoken = [];\r\n    }\r\n    await store.storeToken(email, [...user.refreshtoken, refreshToken]);\r\n    res.cookie('refresh-token', refreshToken, {\r\n      httpOnly: true,\r\n      maxAge: 24 * 60 * 60 * 1000,\r\n    });\r\n\r\n    res.status(200).json({ name: user.name, accessToken: token });\r\n  } catch (err) {\r\n    res.sendStatus(500);\r\n  }\r\n};\r\n\r\n// IMPORTANT  if we want to use oAuth2 for authorization this would be useful\r\n// const googleAuthRefresh = async (\r\n//   req: Request,\r\n//   res: Response\r\n// ): Promise<void> => {\r\n//   try {\r\n//     const user = new UserRefreshClient(\r\n//       GOOGLE_AUTH_CLIENTID,\r\n//       GOOGLE_AUTH_SECRET,\r\n//       req.body.refreshToken\r\n//     );\r\n//     const { credentials } = await user.refreshAccessToken(); // optain new tokens\r\n//     res.json(credentials);\r\n//   } catch (err) {\r\n//     console.log(err);\r\n//   }\r\n// };\r\n\r\nconst oauth2Routes = (app: Application) => {\r\n  app.post('/users/oauth2/google', googleAuth);\r\n  // app.post('/users/oauth2/google/refresh', googleAuthRefresh);\r\n};\r\n\r\nexport default oauth2Routes;\r\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"5ab61569a7790c091d6f730b0226eb36e3e97ac3","contentHash":"41cc93c6fa043bc3d8afdb37ff461a3b5f9c7d29b00cbcfc178d406f9146960d"},"C:\\Users\\Administrator\\Desktop\\Full-Stack Projects\\Small-Blog\\API\\src\\test\\handler\\2-post.spec.ts":{"path":"C:\\Users\\Administrator\\Desktop\\Full-Stack Projects\\Small-Blog\\API\\src\\test\\handler\\2-post.spec.ts","statementMap":{"0":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"1":{"start":{"line":3,"column":28},"end":{"line":3,"column":110}},"2":{"start":{"line":3,"column":91},"end":{"line":3,"column":106}},"3":{"start":{"line":4,"column":4},"end":{"line":9,"column":7}},"4":{"start":{"line":5,"column":36},"end":{"line":5,"column":97}},"5":{"start":{"line":5,"column":42},"end":{"line":5,"column":70}},"6":{"start":{"line":5,"column":85},"end":{"line":5,"column":95}},"7":{"start":{"line":6,"column":35},"end":{"line":6,"column":100}},"8":{"start":{"line":6,"column":41},"end":{"line":6,"column":73}},"9":{"start":{"line":6,"column":88},"end":{"line":6,"column":98}},"10":{"start":{"line":7,"column":32},"end":{"line":7,"column":116}},"11":{"start":{"line":8,"column":8},"end":{"line":8,"column":78}},"12":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"13":{"start":{"line":12,"column":4},"end":{"line":12,"column":62}},"14":{"start":{"line":14,"column":0},"end":{"line":14,"column":62}},"15":{"start":{"line":15,"column":15},"end":{"line":15,"column":30}},"16":{"start":{"line":16,"column":20},"end":{"line":16,"column":57}},"17":{"start":{"line":17,"column":17},"end":{"line":17,"column":57}},"18":{"start":{"line":18,"column":18},"end":{"line":18,"column":68}},"19":{"start":{"line":19,"column":19},"end":{"line":19,"column":64}},"20":{"start":{"line":20,"column":0},"end":{"line":184,"column":3}},"21":{"start":{"line":22,"column":4},"end":{"line":32,"column":8}},"22":{"start":{"line":22,"column":17},"end":{"line":32,"column":6}},"23":{"start":{"line":23,"column":21},"end":{"line":26,"column":9}},"24":{"start":{"line":27,"column":25},"end":{"line":30,"column":46}},"25":{"start":{"line":31,"column":8},"end":{"line":31,"column":42}},"26":{"start":{"line":33,"column":4},"end":{"line":49,"column":7}},"27":{"start":{"line":34,"column":8},"end":{"line":41,"column":12}},"28":{"start":{"line":34,"column":61},"end":{"line":41,"column":10}},"29":{"start":{"line":35,"column":29},"end":{"line":38,"column":47}},"30":{"start":{"line":39,"column":12},"end":{"line":39,"column":56}},"31":{"start":{"line":40,"column":12},"end":{"line":40,"column":87}},"32":{"start":{"line":42,"column":8},"end":{"line":48,"column":12}},"33":{"start":{"line":42,"column":60},"end":{"line":48,"column":10}},"34":{"start":{"line":43,"column":29},"end":{"line":45,"column":47}},"35":{"start":{"line":46,"column":12},"end":{"line":46,"column":56}},"36":{"start":{"line":47,"column":12},"end":{"line":47,"column":80}},"37":{"start":{"line":50,"column":4},"end":{"line":94,"column":7}},"38":{"start":{"line":51,"column":8},"end":{"line":65,"column":12}},"39":{"start":{"line":51,"column":66},"end":{"line":65,"column":10}},"40":{"start":{"line":52,"column":29},"end":{"line":62,"column":47}},"41":{"start":{"line":63,"column":12},"end":{"line":63,"column":56}},"42":{"start":{"line":64,"column":12},"end":{"line":64,"column":85}},"43":{"start":{"line":66,"column":8},"end":{"line":80,"column":12}},"44":{"start":{"line":66,"column":66},"end":{"line":80,"column":10}},"45":{"start":{"line":67,"column":29},"end":{"line":77,"column":47}},"46":{"start":{"line":78,"column":12},"end":{"line":78,"column":56}},"47":{"start":{"line":79,"column":12},"end":{"line":79,"column":83}},"48":{"start":{"line":81,"column":8},"end":{"line":93,"column":12}},"49":{"start":{"line":81,"column":61},"end":{"line":93,"column":10}},"50":{"start":{"line":82,"column":29},"end":{"line":90,"column":47}},"51":{"start":{"line":91,"column":12},"end":{"line":91,"column":56}},"52":{"start":{"line":92,"column":12},"end":{"line":92,"column":80}},"53":{"start":{"line":95,"column":4},"end":{"line":119,"column":7}},"54":{"start":{"line":96,"column":8},"end":{"line":103,"column":12}},"55":{"start":{"line":96,"column":48},"end":{"line":103,"column":10}},"56":{"start":{"line":97,"column":29},"end":{"line":100,"column":47}},"57":{"start":{"line":101,"column":12},"end":{"line":101,"column":56}},"58":{"start":{"line":102,"column":12},"end":{"line":102,"column":75}},"59":{"start":{"line":104,"column":8},"end":{"line":111,"column":12}},"60":{"start":{"line":104,"column":63},"end":{"line":111,"column":10}},"61":{"start":{"line":105,"column":29},"end":{"line":108,"column":47}},"62":{"start":{"line":109,"column":12},"end":{"line":109,"column":56}},"63":{"start":{"line":110,"column":12},"end":{"line":110,"column":80}},"64":{"start":{"line":112,"column":8},"end":{"line":118,"column":12}},"65":{"start":{"line":112,"column":60},"end":{"line":118,"column":10}},"66":{"start":{"line":113,"column":29},"end":{"line":115,"column":47}},"67":{"start":{"line":116,"column":12},"end":{"line":116,"column":56}},"68":{"start":{"line":117,"column":12},"end":{"line":117,"column":80}},"69":{"start":{"line":120,"column":4},"end":{"line":166,"column":7}},"70":{"start":{"line":121,"column":8},"end":{"line":136,"column":12}},"71":{"start":{"line":121,"column":65},"end":{"line":136,"column":10}},"72":{"start":{"line":122,"column":29},"end":{"line":131,"column":47}},"73":{"start":{"line":132,"column":12},"end":{"line":132,"column":56}},"74":{"start":{"line":133,"column":12},"end":{"line":133,"column":85}},"75":{"start":{"line":134,"column":12},"end":{"line":134,"column":76}},"76":{"start":{"line":135,"column":12},"end":{"line":135,"column":124}},"77":{"start":{"line":137,"column":8},"end":{"line":152,"column":12}},"78":{"start":{"line":137,"column":49},"end":{"line":152,"column":10}},"79":{"start":{"line":138,"column":29},"end":{"line":148,"column":47}},"80":{"start":{"line":149,"column":12},"end":{"line":149,"column":56}},"81":{"start":{"line":150,"column":12},"end":{"line":150,"column":73}},"82":{"start":{"line":151,"column":12},"end":{"line":151,"column":124}},"83":{"start":{"line":153,"column":8},"end":{"line":165,"column":12}},"84":{"start":{"line":153,"column":75},"end":{"line":165,"column":10}},"85":{"start":{"line":154,"column":29},"end":{"line":162,"column":47}},"86":{"start":{"line":163,"column":12},"end":{"line":163,"column":56}},"87":{"start":{"line":164,"column":12},"end":{"line":164,"column":80}},"88":{"start":{"line":167,"column":4},"end":{"line":183,"column":7}},"89":{"start":{"line":168,"column":8},"end":{"line":174,"column":12}},"90":{"start":{"line":168,"column":70},"end":{"line":174,"column":10}},"91":{"start":{"line":169,"column":29},"end":{"line":171,"column":47}},"92":{"start":{"line":172,"column":12},"end":{"line":172,"column":56}},"93":{"start":{"line":173,"column":12},"end":{"line":173,"column":80}},"94":{"start":{"line":175,"column":8},"end":{"line":182,"column":12}},"95":{"start":{"line":175,"column":49},"end":{"line":182,"column":10}},"96":{"start":{"line":176,"column":29},"end":{"line":179,"column":47}},"97":{"start":{"line":180,"column":12},"end":{"line":180,"column":56}},"98":{"start":{"line":181,"column":12},"end":{"line":181,"column":86}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":44},"end":{"line":2,"column":45}},"loc":{"start":{"line":2,"column":89},"end":{"line":10,"column":1}},"line":2},"1":{"name":"adopt","decl":{"start":{"line":3,"column":13},"end":{"line":3,"column":18}},"loc":{"start":{"line":3,"column":26},"end":{"line":3,"column":112}},"line":3},"2":{"name":"(anonymous_2)","decl":{"start":{"line":3,"column":70},"end":{"line":3,"column":71}},"loc":{"start":{"line":3,"column":89},"end":{"line":3,"column":108}},"line":3},"3":{"name":"(anonymous_3)","decl":{"start":{"line":4,"column":36},"end":{"line":4,"column":37}},"loc":{"start":{"line":4,"column":63},"end":{"line":9,"column":5}},"line":4},"4":{"name":"fulfilled","decl":{"start":{"line":5,"column":17},"end":{"line":5,"column":26}},"loc":{"start":{"line":5,"column":34},"end":{"line":5,"column":99}},"line":5},"5":{"name":"rejected","decl":{"start":{"line":6,"column":17},"end":{"line":6,"column":25}},"loc":{"start":{"line":6,"column":33},"end":{"line":6,"column":102}},"line":6},"6":{"name":"step","decl":{"start":{"line":7,"column":17},"end":{"line":7,"column":21}},"loc":{"start":{"line":7,"column":30},"end":{"line":7,"column":118}},"line":7},"7":{"name":"(anonymous_7)","decl":{"start":{"line":11,"column":56},"end":{"line":11,"column":57}},"loc":{"start":{"line":11,"column":71},"end":{"line":13,"column":1}},"line":11},"8":{"name":"(anonymous_8)","decl":{"start":{"line":20,"column":25},"end":{"line":20,"column":26}},"loc":{"start":{"line":20,"column":31},"end":{"line":184,"column":1}},"line":20},"9":{"name":"(anonymous_9)","decl":{"start":{"line":22,"column":11},"end":{"line":22,"column":12}},"loc":{"start":{"line":22,"column":17},"end":{"line":32,"column":6}},"line":22},"10":{"name":"(anonymous_10)","decl":{"start":{"line":22,"column":51},"end":{"line":22,"column":52}},"loc":{"start":{"line":22,"column":64},"end":{"line":32,"column":5}},"line":22},"11":{"name":"(anonymous_11)","decl":{"start":{"line":33,"column":27},"end":{"line":33,"column":28}},"loc":{"start":{"line":33,"column":33},"end":{"line":49,"column":5}},"line":33},"12":{"name":"(anonymous_12)","decl":{"start":{"line":34,"column":55},"end":{"line":34,"column":56}},"loc":{"start":{"line":34,"column":61},"end":{"line":41,"column":10}},"line":34},"13":{"name":"(anonymous_13)","decl":{"start":{"line":34,"column":95},"end":{"line":34,"column":96}},"loc":{"start":{"line":34,"column":108},"end":{"line":41,"column":9}},"line":34},"14":{"name":"(anonymous_14)","decl":{"start":{"line":42,"column":54},"end":{"line":42,"column":55}},"loc":{"start":{"line":42,"column":60},"end":{"line":48,"column":10}},"line":42},"15":{"name":"(anonymous_15)","decl":{"start":{"line":42,"column":94},"end":{"line":42,"column":95}},"loc":{"start":{"line":42,"column":107},"end":{"line":48,"column":9}},"line":42},"16":{"name":"(anonymous_16)","decl":{"start":{"line":50,"column":28},"end":{"line":50,"column":29}},"loc":{"start":{"line":50,"column":34},"end":{"line":94,"column":5}},"line":50},"17":{"name":"(anonymous_17)","decl":{"start":{"line":51,"column":60},"end":{"line":51,"column":61}},"loc":{"start":{"line":51,"column":66},"end":{"line":65,"column":10}},"line":51},"18":{"name":"(anonymous_18)","decl":{"start":{"line":51,"column":100},"end":{"line":51,"column":101}},"loc":{"start":{"line":51,"column":113},"end":{"line":65,"column":9}},"line":51},"19":{"name":"(anonymous_19)","decl":{"start":{"line":66,"column":60},"end":{"line":66,"column":61}},"loc":{"start":{"line":66,"column":66},"end":{"line":80,"column":10}},"line":66},"20":{"name":"(anonymous_20)","decl":{"start":{"line":66,"column":100},"end":{"line":66,"column":101}},"loc":{"start":{"line":66,"column":113},"end":{"line":80,"column":9}},"line":66},"21":{"name":"(anonymous_21)","decl":{"start":{"line":81,"column":55},"end":{"line":81,"column":56}},"loc":{"start":{"line":81,"column":61},"end":{"line":93,"column":10}},"line":81},"22":{"name":"(anonymous_22)","decl":{"start":{"line":81,"column":95},"end":{"line":81,"column":96}},"loc":{"start":{"line":81,"column":108},"end":{"line":93,"column":9}},"line":81},"23":{"name":"(anonymous_23)","decl":{"start":{"line":95,"column":35},"end":{"line":95,"column":36}},"loc":{"start":{"line":95,"column":41},"end":{"line":119,"column":5}},"line":95},"24":{"name":"(anonymous_24)","decl":{"start":{"line":96,"column":42},"end":{"line":96,"column":43}},"loc":{"start":{"line":96,"column":48},"end":{"line":103,"column":10}},"line":96},"25":{"name":"(anonymous_25)","decl":{"start":{"line":96,"column":82},"end":{"line":96,"column":83}},"loc":{"start":{"line":96,"column":95},"end":{"line":103,"column":9}},"line":96},"26":{"name":"(anonymous_26)","decl":{"start":{"line":104,"column":57},"end":{"line":104,"column":58}},"loc":{"start":{"line":104,"column":63},"end":{"line":111,"column":10}},"line":104},"27":{"name":"(anonymous_27)","decl":{"start":{"line":104,"column":97},"end":{"line":104,"column":98}},"loc":{"start":{"line":104,"column":110},"end":{"line":111,"column":9}},"line":104},"28":{"name":"(anonymous_28)","decl":{"start":{"line":112,"column":54},"end":{"line":112,"column":55}},"loc":{"start":{"line":112,"column":60},"end":{"line":118,"column":10}},"line":112},"29":{"name":"(anonymous_29)","decl":{"start":{"line":112,"column":94},"end":{"line":112,"column":95}},"loc":{"start":{"line":112,"column":107},"end":{"line":118,"column":9}},"line":112},"30":{"name":"(anonymous_30)","decl":{"start":{"line":120,"column":37},"end":{"line":120,"column":38}},"loc":{"start":{"line":120,"column":43},"end":{"line":166,"column":5}},"line":120},"31":{"name":"(anonymous_31)","decl":{"start":{"line":121,"column":59},"end":{"line":121,"column":60}},"loc":{"start":{"line":121,"column":65},"end":{"line":136,"column":10}},"line":121},"32":{"name":"(anonymous_32)","decl":{"start":{"line":121,"column":99},"end":{"line":121,"column":100}},"loc":{"start":{"line":121,"column":112},"end":{"line":136,"column":9}},"line":121},"33":{"name":"(anonymous_33)","decl":{"start":{"line":137,"column":43},"end":{"line":137,"column":44}},"loc":{"start":{"line":137,"column":49},"end":{"line":152,"column":10}},"line":137},"34":{"name":"(anonymous_34)","decl":{"start":{"line":137,"column":83},"end":{"line":137,"column":84}},"loc":{"start":{"line":137,"column":96},"end":{"line":152,"column":9}},"line":137},"35":{"name":"(anonymous_35)","decl":{"start":{"line":153,"column":69},"end":{"line":153,"column":70}},"loc":{"start":{"line":153,"column":75},"end":{"line":165,"column":10}},"line":153},"36":{"name":"(anonymous_36)","decl":{"start":{"line":153,"column":109},"end":{"line":153,"column":110}},"loc":{"start":{"line":153,"column":122},"end":{"line":165,"column":9}},"line":153},"37":{"name":"(anonymous_37)","decl":{"start":{"line":167,"column":38},"end":{"line":167,"column":39}},"loc":{"start":{"line":167,"column":44},"end":{"line":183,"column":5}},"line":167},"38":{"name":"(anonymous_38)","decl":{"start":{"line":168,"column":64},"end":{"line":168,"column":65}},"loc":{"start":{"line":168,"column":70},"end":{"line":174,"column":10}},"line":168},"39":{"name":"(anonymous_39)","decl":{"start":{"line":168,"column":104},"end":{"line":168,"column":105}},"loc":{"start":{"line":168,"column":117},"end":{"line":174,"column":9}},"line":168},"40":{"name":"(anonymous_40)","decl":{"start":{"line":175,"column":43},"end":{"line":175,"column":44}},"loc":{"start":{"line":175,"column":49},"end":{"line":182,"column":10}},"line":175},"41":{"name":"(anonymous_41)","decl":{"start":{"line":175,"column":83},"end":{"line":175,"column":84}},"loc":{"start":{"line":175,"column":96},"end":{"line":182,"column":9}},"line":175}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":17},"end":{"line":2,"column":21}},{"start":{"line":2,"column":25},"end":{"line":2,"column":39}},{"start":{"line":2,"column":44},"end":{"line":10,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":35},"end":{"line":3,"column":109}},"type":"cond-expr","locations":[{"start":{"line":3,"column":56},"end":{"line":3,"column":61}},{"start":{"line":3,"column":64},"end":{"line":3,"column":109}}],"line":3},"2":{"loc":{"start":{"line":4,"column":16},"end":{"line":4,"column":34}},"type":"binary-expr","locations":[{"start":{"line":4,"column":16},"end":{"line":4,"column":17}},{"start":{"line":4,"column":22},"end":{"line":4,"column":33}}],"line":4},"3":{"loc":{"start":{"line":7,"column":32},"end":{"line":7,"column":115}},"type":"cond-expr","locations":[{"start":{"line":7,"column":46},"end":{"line":7,"column":67}},{"start":{"line":7,"column":70},"end":{"line":7,"column":115}}],"line":7},"4":{"loc":{"start":{"line":8,"column":51},"end":{"line":8,"column":67}},"type":"binary-expr","locations":[{"start":{"line":8,"column":51},"end":{"line":8,"column":61}},{"start":{"line":8,"column":65},"end":{"line":8,"column":67}}],"line":8},"5":{"loc":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"type":"binary-expr","locations":[{"start":{"line":11,"column":23},"end":{"line":11,"column":27}},{"start":{"line":11,"column":31},"end":{"line":11,"column":51}},{"start":{"line":11,"column":56},"end":{"line":13,"column":1}}],"line":11},"6":{"loc":{"start":{"line":12,"column":11},"end":{"line":12,"column":61}},"type":"cond-expr","locations":[{"start":{"line":12,"column":37},"end":{"line":12,"column":40}},{"start":{"line":12,"column":43},"end":{"line":12,"column":61}}],"line":12},"7":{"loc":{"start":{"line":12,"column":12},"end":{"line":12,"column":33}},"type":"binary-expr","locations":[{"start":{"line":12,"column":12},"end":{"line":12,"column":15}},{"start":{"line":12,"column":19},"end":{"line":12,"column":33}}],"line":12}},"s":{"0":1,"1":14,"2":14,"3":14,"4":14,"5":14,"6":0,"7":0,"8":0,"9":0,"10":28,"11":14,"12":1,"13":2,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":1,"40":1,"41":1,"42":1,"43":1,"44":1,"45":1,"46":1,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":1,"58":1,"59":1,"60":1,"61":1,"62":1,"63":1,"64":1,"65":1,"66":1,"67":1,"68":1,"69":1,"70":1,"71":1,"72":1,"73":1,"74":1,"75":1,"76":1,"77":1,"78":1,"79":1,"80":1,"81":1,"82":1,"83":1,"84":1,"85":1,"86":1,"87":1,"88":1,"89":1,"90":1,"91":1,"92":1,"93":1,"94":1,"95":1,"96":1,"97":1,"98":1},"f":{"0":14,"1":14,"2":14,"3":14,"4":14,"5":0,"6":28,"7":2,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":1,"40":1,"41":1},"b":{"0":[1,1,1],"1":[0,14],"2":[14,14],"3":[14,14],"4":[14,14],"5":[1,1,1],"6":[1,1],"7":[2,2]},"inputSourceMap":{"version":3,"file":"C:/Users/Administrator/Desktop/Full-Stack Projects/Small-Blog/API/src/test/handler/2-post.spec.ts","sources":["C:/Users/Administrator/Desktop/Full-Stack Projects/Small-Blog/API/src/test/handler/2-post.spec.ts"],"names":[],"mappings":"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","sourcesContent":["import { expect } from 'chai';\r\nimport request from 'supertest';\r\nimport app from '../../server';\r\n\r\nconst testImage = `${__dirname}/../../../test_assets/test-image.png`;\r\nconst testImage2 = `${__dirname}/../../../test_assets/tests.png`;\r\n\r\ndescribe('Post handler', () => {\r\n  let token: string;\r\n  before(async () => {\r\n    const user = {\r\n      email: 'test@test.com',\r\n      password: '123456',\r\n    };\r\n    const response = await request(app)\r\n      .post('/users/login')\r\n      .send(user)\r\n      .set('Accept', 'application/json');\r\n    token = response.body.accessToken;\r\n  });\r\n\r\n  describe('GET /posts', () => {\r\n    it('should return list of posts, require jwt', async () => {\r\n      const response = await request(app)\r\n        .get('/posts')\r\n        .set('Authorization', 'Bearer ' + token)\r\n        .expect('Content-Type', /json/);\r\n      expect(response.status).eq(200);\r\n      expect(response.body.message).eq('retrived posts sucessfully');\r\n    });\r\n\r\n    it('should forbid access to posts if no jwt', async () => {\r\n      const response = await request(app)\r\n        .get('/posts')\r\n        .expect('Content-Type', /json/);\r\n      expect(response.status).eq(403);\r\n      expect(response.body.error).eq('No token was provided');\r\n    });\r\n  });\r\n\r\n  describe('POST /posts', () => {\r\n    it('Should create post, with valid fields and jwt', async () => {\r\n      const response = await request(app)\r\n        .post('/posts')\r\n        .set({\r\n          'Content-Type': 'application/json',\r\n        })\r\n        .field('title', 'Hello World')\r\n        .field(\r\n          'description',\r\n          'Hello World Again Hello World Again Hello World Again'\r\n        )\r\n        .field('field', 'Data Analytics & Visualization')\r\n        .attach('image', testImage)\r\n        .set('Authorization', 'Bearer ' + token)\r\n        .expect('Content-Type', /json/);\r\n      expect(response.status).eq(201);\r\n      expect(response.body.message).eq('post created sucessfully');\r\n    });\r\n\r\n    it('Should fail to create, when body is not valid', async () => {\r\n      const response = await request(app)\r\n        .post('/posts')\r\n        .set({\r\n          'Content-Type': 'application/json',\r\n        })\r\n        .field('title', 'Hello World')\r\n        .field('description', 'Hello World Again Hello')\r\n        .field('field', 'Data Analytics & Visualization')\r\n        .attach('image', testImage)\r\n        .set('Authorization', 'Bearer ' + token)\r\n        .expect('Content-Type', /json/);\r\n      expect(response.status).eq(422);\r\n      expect(response.body.errors.msg).eq('Invalid description');\r\n    });\r\n\r\n    it('Should fail to create, if not authorized', async () => {\r\n      const response = await request(app)\r\n        .post('/posts')\r\n        .set({\r\n          'Content-Type': 'application/json',\r\n        })\r\n        .field('title', 'Hello World')\r\n        .field(\r\n          'description',\r\n          'Hello World Again Hello World Again Hello World Again'\r\n        )\r\n        .field('field', 'Data Analytics & Visualization')\r\n        .expect('Content-Type', /json/);\r\n      expect(response.status).eq(403);\r\n      expect(response.body.error).eq('No token was provided');\r\n    });\r\n  });\r\n\r\n  describe('GET /posts/:postId', () => {\r\n    it('Should fetch post with id 1', async () => {\r\n      const response = await request(app)\r\n        .get('/posts/1')\r\n        .set('Authorization', 'Bearer ' + token)\r\n        .expect('Content-Type', /json/);\r\n      expect(response.status).eq(200);\r\n      expect(response.body.post.title).eq('Hello World');\r\n    });\r\n\r\n    it('Should give 404, if there is no post found', async () => {\r\n      const response = await request(app)\r\n        .get('/posts/50')\r\n        .set('Authorization', 'Bearer ' + token)\r\n        .expect('Content-Type', /json/);\r\n      expect(response.status).eq(404);\r\n      expect(response.body.error).eq(\"couldn't find post 50\");\r\n    });\r\n\r\n    it('Should forbid access to posts if no jwt', async () => {\r\n      const response = await request(app)\r\n        .get('/posts/1')\r\n        .expect('Content-Type', /json/);\r\n      expect(response.status).eq(403);\r\n      expect(response.body.error).eq('No token was provided');\r\n    });\r\n  });\r\n\r\n  describe('PATCH /posts/:postId', () => {\r\n    it('Should update post with id 1 (without image)', async () => {\r\n      const response = await request(app)\r\n        .patch('/posts/1')\r\n        .set({\r\n          'Content-Type': 'application/json',\r\n        })\r\n        .field('title', 'Hello World5')\r\n        .field(\r\n          'description',\r\n          'Hello World Again Hello World Again Hello World Again5'\r\n        )\r\n        .field('field', 'Data Analytics & Visualization')\r\n        .set('Authorization', 'Bearer ' + token)\r\n        .expect('Content-Type', /json/);\r\n      expect(response.status).eq(200);\r\n      expect(response.body.message).eq('post updated sucessfully');\r\n      expect(response.body.data.title).eq('Hello World5');\r\n      expect(response.body.data.description).eq(\r\n        'Hello World Again Hello World Again Hello World Again5'\r\n      );\r\n    });\r\n\r\n    it('Should update post with id 1', async () => {\r\n      const response = await request(app)\r\n        .patch('/posts/1')\r\n        .set({\r\n          'Content-Type': 'application/json',\r\n        })\r\n        .field('title', 'Boom Boom')\r\n        .field(\r\n          'description',\r\n          'Hello World Again Hello World Again Hello Of Boom Boom'\r\n        )\r\n        .field('field', 'Data Analytics & Visualization')\r\n        .attach('image', testImage2)\r\n        .set('Authorization', 'Bearer ' + token)\r\n        .expect('Content-Type', /json/);\r\n      expect(response.status).eq(200);\r\n      expect(response.body.data.title).eq('Boom Boom');\r\n      expect(response.body.data.description).eq(\r\n        'Hello World Again Hello World Again Hello Of Boom Boom'\r\n      );\r\n    });\r\n\r\n    it('Should not update post with id 1, when there is no jwt', async () => {\r\n      const response = await request(app)\r\n        .patch('/posts/1')\r\n        .set({\r\n          'Content-Type': 'application/json',\r\n        })\r\n        .field('title', 'Hello World5')\r\n        .field(\r\n          'description',\r\n          'Hello World Again Hello World Again Hello World Again5'\r\n        )\r\n        .field('field', 'Data Analytics & Visualization')\r\n        .expect('Content-Type', /json/);\r\n      expect(response.status).eq(403);\r\n      expect(response.body.error).eq('No token was provided');\r\n    });\r\n  });\r\n\r\n  describe('DELETE /posts/:postId', () => {\r\n    it('Should forbid deleting post with id 1 without jwt', async () => {\r\n      const response = await request(app)\r\n        .delete('/posts/1')\r\n        .expect('Content-Type', /json/);\r\n      expect(response.status).eq(403);\r\n      expect(response.body.error).eq('No token was provided');\r\n    });\r\n\r\n    it('Should delete post with id 1', async () => {\r\n      const response = await request(app)\r\n        .delete('/posts/1')\r\n        .set('Authorization', 'Bearer ' + token)\r\n        .expect('Content-Type', /json/);\r\n      expect(response.status).eq(200);\r\n      expect(response.body.message).eq('posts deleted sucessfully');\r\n    });\r\n  });\r\n});\r\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"3cbb00012d81aa697112d460160178ac9cb9c78f","contentHash":"93adde5dda20b1e565a15ce0e29bb9379af747969d6126c1d411ba62598a0e44"},"C:\\Users\\Administrator\\Desktop\\Full-Stack Projects\\Small-Blog\\API\\src\\test\\handler\\3-comment.spec.ts":{"path":"C:\\Users\\Administrator\\Desktop\\Full-Stack Projects\\Small-Blog\\API\\src\\test\\handler\\3-comment.spec.ts","statementMap":{"0":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"1":{"start":{"line":3,"column":28},"end":{"line":3,"column":110}},"2":{"start":{"line":3,"column":91},"end":{"line":3,"column":106}},"3":{"start":{"line":4,"column":4},"end":{"line":9,"column":7}},"4":{"start":{"line":5,"column":36},"end":{"line":5,"column":97}},"5":{"start":{"line":5,"column":42},"end":{"line":5,"column":70}},"6":{"start":{"line":5,"column":85},"end":{"line":5,"column":95}},"7":{"start":{"line":6,"column":35},"end":{"line":6,"column":100}},"8":{"start":{"line":6,"column":41},"end":{"line":6,"column":73}},"9":{"start":{"line":6,"column":88},"end":{"line":6,"column":98}},"10":{"start":{"line":7,"column":32},"end":{"line":7,"column":116}},"11":{"start":{"line":8,"column":8},"end":{"line":8,"column":78}},"12":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"13":{"start":{"line":12,"column":4},"end":{"line":12,"column":62}},"14":{"start":{"line":14,"column":0},"end":{"line":14,"column":62}},"15":{"start":{"line":15,"column":15},"end":{"line":15,"column":30}},"16":{"start":{"line":16,"column":20},"end":{"line":16,"column":57}},"17":{"start":{"line":17,"column":17},"end":{"line":17,"column":57}},"18":{"start":{"line":18,"column":18},"end":{"line":18,"column":63}},"19":{"start":{"line":19,"column":0},"end":{"line":132,"column":3}},"20":{"start":{"line":21,"column":4},"end":{"line":31,"column":8}},"21":{"start":{"line":21,"column":17},"end":{"line":31,"column":6}},"22":{"start":{"line":22,"column":21},"end":{"line":25,"column":9}},"23":{"start":{"line":26,"column":25},"end":{"line":29,"column":46}},"24":{"start":{"line":30,"column":8},"end":{"line":30,"column":42}},"25":{"start":{"line":32,"column":4},"end":{"line":88,"column":7}},"26":{"start":{"line":33,"column":8},"end":{"line":47,"column":12}},"27":{"start":{"line":33,"column":21},"end":{"line":47,"column":10}},"28":{"start":{"line":34,"column":29},"end":{"line":44,"column":47}},"29":{"start":{"line":45,"column":12},"end":{"line":45,"column":56}},"30":{"start":{"line":46,"column":12},"end":{"line":46,"column":85}},"31":{"start":{"line":48,"column":8},"end":{"line":58,"column":12}},"32":{"start":{"line":48,"column":67},"end":{"line":58,"column":10}},"33":{"start":{"line":49,"column":28},"end":{"line":49,"column":55}},"34":{"start":{"line":50,"column":29},"end":{"line":54,"column":47}},"35":{"start":{"line":55,"column":12},"end":{"line":55,"column":56}},"36":{"start":{"line":56,"column":12},"end":{"line":56,"column":76}},"37":{"start":{"line":57,"column":12},"end":{"line":57,"column":70}},"38":{"start":{"line":59,"column":8},"end":{"line":68,"column":12}},"39":{"start":{"line":59,"column":102},"end":{"line":68,"column":10}},"40":{"start":{"line":60,"column":28},"end":{"line":60,"column":56}},"41":{"start":{"line":61,"column":29},"end":{"line":65,"column":47}},"42":{"start":{"line":66,"column":12},"end":{"line":66,"column":56}},"43":{"start":{"line":67,"column":12},"end":{"line":67,"column":111}},"44":{"start":{"line":69,"column":8},"end":{"line":78,"column":12}},"45":{"start":{"line":69,"column":81},"end":{"line":78,"column":10}},"46":{"start":{"line":70,"column":28},"end":{"line":70,"column":51}},"47":{"start":{"line":71,"column":29},"end":{"line":75,"column":47}},"48":{"start":{"line":76,"column":12},"end":{"line":76,"column":56}},"49":{"start":{"line":77,"column":12},"end":{"line":77,"column":84}},"50":{"start":{"line":79,"column":8},"end":{"line":87,"column":12}},"51":{"start":{"line":79,"column":63},"end":{"line":87,"column":10}},"52":{"start":{"line":80,"column":28},"end":{"line":80,"column":55}},"53":{"start":{"line":81,"column":29},"end":{"line":84,"column":47}},"54":{"start":{"line":85,"column":12},"end":{"line":85,"column":56}},"55":{"start":{"line":86,"column":12},"end":{"line":86,"column":80}},"56":{"start":{"line":89,"column":4},"end":{"line":116,"column":7}},"57":{"start":{"line":90,"column":8},"end":{"line":98,"column":12}},"58":{"start":{"line":90,"column":54},"end":{"line":98,"column":10}},"59":{"start":{"line":91,"column":29},"end":{"line":95,"column":47}},"60":{"start":{"line":96,"column":12},"end":{"line":96,"column":56}},"61":{"start":{"line":97,"column":12},"end":{"line":97,"column":91}},"62":{"start":{"line":99,"column":8},"end":{"line":107,"column":12}},"63":{"start":{"line":99,"column":81},"end":{"line":107,"column":10}},"64":{"start":{"line":100,"column":29},"end":{"line":104,"column":47}},"65":{"start":{"line":105,"column":12},"end":{"line":105,"column":56}},"66":{"start":{"line":106,"column":12},"end":{"line":106,"column":84}},"67":{"start":{"line":108,"column":8},"end":{"line":115,"column":12}},"68":{"start":{"line":108,"column":63},"end":{"line":115,"column":10}},"69":{"start":{"line":109,"column":29},"end":{"line":112,"column":47}},"70":{"start":{"line":113,"column":12},"end":{"line":113,"column":56}},"71":{"start":{"line":114,"column":12},"end":{"line":114,"column":80}},"72":{"start":{"line":117,"column":4},"end":{"line":131,"column":7}},"73":{"start":{"line":118,"column":8},"end":{"line":124,"column":12}},"74":{"start":{"line":118,"column":63},"end":{"line":124,"column":10}},"75":{"start":{"line":119,"column":29},"end":{"line":121,"column":47}},"76":{"start":{"line":122,"column":12},"end":{"line":122,"column":56}},"77":{"start":{"line":123,"column":12},"end":{"line":123,"column":80}},"78":{"start":{"line":125,"column":8},"end":{"line":130,"column":12}},"79":{"start":{"line":125,"column":54},"end":{"line":130,"column":10}},"80":{"start":{"line":126,"column":29},"end":{"line":128,"column":56}},"81":{"start":{"line":129,"column":12},"end":{"line":129,"column":56}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":44},"end":{"line":2,"column":45}},"loc":{"start":{"line":2,"column":89},"end":{"line":10,"column":1}},"line":2},"1":{"name":"adopt","decl":{"start":{"line":3,"column":13},"end":{"line":3,"column":18}},"loc":{"start":{"line":3,"column":26},"end":{"line":3,"column":112}},"line":3},"2":{"name":"(anonymous_2)","decl":{"start":{"line":3,"column":70},"end":{"line":3,"column":71}},"loc":{"start":{"line":3,"column":89},"end":{"line":3,"column":108}},"line":3},"3":{"name":"(anonymous_3)","decl":{"start":{"line":4,"column":36},"end":{"line":4,"column":37}},"loc":{"start":{"line":4,"column":63},"end":{"line":9,"column":5}},"line":4},"4":{"name":"fulfilled","decl":{"start":{"line":5,"column":17},"end":{"line":5,"column":26}},"loc":{"start":{"line":5,"column":34},"end":{"line":5,"column":99}},"line":5},"5":{"name":"rejected","decl":{"start":{"line":6,"column":17},"end":{"line":6,"column":25}},"loc":{"start":{"line":6,"column":33},"end":{"line":6,"column":102}},"line":6},"6":{"name":"step","decl":{"start":{"line":7,"column":17},"end":{"line":7,"column":21}},"loc":{"start":{"line":7,"column":30},"end":{"line":7,"column":118}},"line":7},"7":{"name":"(anonymous_7)","decl":{"start":{"line":11,"column":56},"end":{"line":11,"column":57}},"loc":{"start":{"line":11,"column":71},"end":{"line":13,"column":1}},"line":11},"8":{"name":"(anonymous_8)","decl":{"start":{"line":19,"column":28},"end":{"line":19,"column":29}},"loc":{"start":{"line":19,"column":34},"end":{"line":132,"column":1}},"line":19},"9":{"name":"(anonymous_9)","decl":{"start":{"line":21,"column":11},"end":{"line":21,"column":12}},"loc":{"start":{"line":21,"column":17},"end":{"line":31,"column":6}},"line":21},"10":{"name":"(anonymous_10)","decl":{"start":{"line":21,"column":51},"end":{"line":21,"column":52}},"loc":{"start":{"line":21,"column":64},"end":{"line":31,"column":5}},"line":21},"11":{"name":"(anonymous_11)","decl":{"start":{"line":32,"column":31},"end":{"line":32,"column":32}},"loc":{"start":{"line":32,"column":37},"end":{"line":88,"column":5}},"line":32},"12":{"name":"(anonymous_12)","decl":{"start":{"line":33,"column":15},"end":{"line":33,"column":16}},"loc":{"start":{"line":33,"column":21},"end":{"line":47,"column":10}},"line":33},"13":{"name":"(anonymous_13)","decl":{"start":{"line":33,"column":55},"end":{"line":33,"column":56}},"loc":{"start":{"line":33,"column":68},"end":{"line":47,"column":9}},"line":33},"14":{"name":"(anonymous_14)","decl":{"start":{"line":48,"column":61},"end":{"line":48,"column":62}},"loc":{"start":{"line":48,"column":67},"end":{"line":58,"column":10}},"line":48},"15":{"name":"(anonymous_15)","decl":{"start":{"line":48,"column":101},"end":{"line":48,"column":102}},"loc":{"start":{"line":48,"column":114},"end":{"line":58,"column":9}},"line":48},"16":{"name":"(anonymous_16)","decl":{"start":{"line":59,"column":96},"end":{"line":59,"column":97}},"loc":{"start":{"line":59,"column":102},"end":{"line":68,"column":10}},"line":59},"17":{"name":"(anonymous_17)","decl":{"start":{"line":59,"column":136},"end":{"line":59,"column":137}},"loc":{"start":{"line":59,"column":149},"end":{"line":68,"column":9}},"line":59},"18":{"name":"(anonymous_18)","decl":{"start":{"line":69,"column":75},"end":{"line":69,"column":76}},"loc":{"start":{"line":69,"column":81},"end":{"line":78,"column":10}},"line":69},"19":{"name":"(anonymous_19)","decl":{"start":{"line":69,"column":115},"end":{"line":69,"column":116}},"loc":{"start":{"line":69,"column":128},"end":{"line":78,"column":9}},"line":69},"20":{"name":"(anonymous_20)","decl":{"start":{"line":79,"column":57},"end":{"line":79,"column":58}},"loc":{"start":{"line":79,"column":63},"end":{"line":87,"column":10}},"line":79},"21":{"name":"(anonymous_21)","decl":{"start":{"line":79,"column":97},"end":{"line":79,"column":98}},"loc":{"start":{"line":79,"column":110},"end":{"line":87,"column":9}},"line":79},"22":{"name":"(anonymous_22)","decl":{"start":{"line":89,"column":43},"end":{"line":89,"column":44}},"loc":{"start":{"line":89,"column":49},"end":{"line":116,"column":5}},"line":89},"23":{"name":"(anonymous_23)","decl":{"start":{"line":90,"column":48},"end":{"line":90,"column":49}},"loc":{"start":{"line":90,"column":54},"end":{"line":98,"column":10}},"line":90},"24":{"name":"(anonymous_24)","decl":{"start":{"line":90,"column":88},"end":{"line":90,"column":89}},"loc":{"start":{"line":90,"column":101},"end":{"line":98,"column":9}},"line":90},"25":{"name":"(anonymous_25)","decl":{"start":{"line":99,"column":75},"end":{"line":99,"column":76}},"loc":{"start":{"line":99,"column":81},"end":{"line":107,"column":10}},"line":99},"26":{"name":"(anonymous_26)","decl":{"start":{"line":99,"column":115},"end":{"line":99,"column":116}},"loc":{"start":{"line":99,"column":128},"end":{"line":107,"column":9}},"line":99},"27":{"name":"(anonymous_27)","decl":{"start":{"line":108,"column":57},"end":{"line":108,"column":58}},"loc":{"start":{"line":108,"column":63},"end":{"line":115,"column":10}},"line":108},"28":{"name":"(anonymous_28)","decl":{"start":{"line":108,"column":97},"end":{"line":108,"column":98}},"loc":{"start":{"line":108,"column":110},"end":{"line":115,"column":9}},"line":108},"29":{"name":"(anonymous_29)","decl":{"start":{"line":117,"column":44},"end":{"line":117,"column":45}},"loc":{"start":{"line":117,"column":50},"end":{"line":131,"column":5}},"line":117},"30":{"name":"(anonymous_30)","decl":{"start":{"line":118,"column":57},"end":{"line":118,"column":58}},"loc":{"start":{"line":118,"column":63},"end":{"line":124,"column":10}},"line":118},"31":{"name":"(anonymous_31)","decl":{"start":{"line":118,"column":97},"end":{"line":118,"column":98}},"loc":{"start":{"line":118,"column":110},"end":{"line":124,"column":9}},"line":118},"32":{"name":"(anonymous_32)","decl":{"start":{"line":125,"column":48},"end":{"line":125,"column":49}},"loc":{"start":{"line":125,"column":54},"end":{"line":130,"column":10}},"line":125},"33":{"name":"(anonymous_33)","decl":{"start":{"line":125,"column":88},"end":{"line":125,"column":89}},"loc":{"start":{"line":125,"column":101},"end":{"line":130,"column":9}},"line":125}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":17},"end":{"line":2,"column":21}},{"start":{"line":2,"column":25},"end":{"line":2,"column":39}},{"start":{"line":2,"column":44},"end":{"line":10,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":35},"end":{"line":3,"column":109}},"type":"cond-expr","locations":[{"start":{"line":3,"column":56},"end":{"line":3,"column":61}},{"start":{"line":3,"column":64},"end":{"line":3,"column":109}}],"line":3},"2":{"loc":{"start":{"line":4,"column":16},"end":{"line":4,"column":34}},"type":"binary-expr","locations":[{"start":{"line":4,"column":16},"end":{"line":4,"column":17}},{"start":{"line":4,"column":22},"end":{"line":4,"column":33}}],"line":4},"3":{"loc":{"start":{"line":7,"column":32},"end":{"line":7,"column":115}},"type":"cond-expr","locations":[{"start":{"line":7,"column":46},"end":{"line":7,"column":67}},{"start":{"line":7,"column":70},"end":{"line":7,"column":115}}],"line":7},"4":{"loc":{"start":{"line":8,"column":51},"end":{"line":8,"column":67}},"type":"binary-expr","locations":[{"start":{"line":8,"column":51},"end":{"line":8,"column":61}},{"start":{"line":8,"column":65},"end":{"line":8,"column":67}}],"line":8},"5":{"loc":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"type":"binary-expr","locations":[{"start":{"line":11,"column":23},"end":{"line":11,"column":27}},{"start":{"line":11,"column":31},"end":{"line":11,"column":51}},{"start":{"line":11,"column":56},"end":{"line":13,"column":1}}],"line":11},"6":{"loc":{"start":{"line":12,"column":11},"end":{"line":12,"column":61}},"type":"cond-expr","locations":[{"start":{"line":12,"column":37},"end":{"line":12,"column":40}},{"start":{"line":12,"column":43},"end":{"line":12,"column":61}}],"line":12},"7":{"loc":{"start":{"line":12,"column":12},"end":{"line":12,"column":33}},"type":"binary-expr","locations":[{"start":{"line":12,"column":12},"end":{"line":12,"column":15}},{"start":{"line":12,"column":19},"end":{"line":12,"column":33}}],"line":12}},"s":{"0":1,"1":11,"2":11,"3":11,"4":11,"5":11,"6":0,"7":0,"8":0,"9":0,"10":22,"11":11,"12":1,"13":2,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":1,"40":1,"41":1,"42":1,"43":1,"44":1,"45":1,"46":1,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":1,"58":1,"59":1,"60":1,"61":1,"62":1,"63":1,"64":1,"65":1,"66":1,"67":1,"68":1,"69":1,"70":1,"71":1,"72":1,"73":1,"74":1,"75":1,"76":1,"77":1,"78":1,"79":1,"80":1,"81":1},"f":{"0":11,"1":11,"2":11,"3":11,"4":11,"5":0,"6":22,"7":2,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1},"b":{"0":[1,1,1],"1":[0,11],"2":[11,11],"3":[11,11],"4":[11,11],"5":[1,1,1],"6":[1,1],"7":[2,2]},"inputSourceMap":{"version":3,"file":"C:/Users/Administrator/Desktop/Full-Stack Projects/Small-Blog/API/src/test/handler/3-comment.spec.ts","sources":["C:/Users/Administrator/Desktop/Full-Stack Projects/Small-Blog/API/src/test/handler/3-comment.spec.ts"],"names":[],"mappings":"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","sourcesContent":["import { expect } from 'chai';\r\nimport request from 'supertest';\r\nimport app from '../../server';\r\n\r\nconst testImage = `${__dirname}/../../../test_assets/tests.png`;\r\n\r\ndescribe('Comment handler', () => {\r\n  let token: string;\r\n  before(async () => {\r\n    const user = {\r\n      email: 'test@test.com',\r\n      password: '123456',\r\n    };\r\n    const response = await request(app)\r\n      .post('/users/login')\r\n      .send(user)\r\n      .set('Accept', 'application/json');\r\n    token = response.body.accessToken;\r\n  });\r\n\r\n  describe('POST /comments', () => {\r\n    before(async () => {\r\n      const response = await request(app)\r\n        .post('/posts')\r\n        .set({\r\n          'Content-Type': 'application/json',\r\n        })\r\n        .field('title', 'Hello World')\r\n        .field(\r\n          'description',\r\n          'Hello World Again Hello World Again Hello World Again'\r\n        )\r\n        .field('field', 'Data Analytics & Visualization')\r\n        .attach('image', testImage)\r\n        .set('Authorization', 'Bearer ' + token)\r\n        .expect('Content-Type', /json/);\r\n      expect(response.status).eq(201);\r\n      expect(response.body.message).eq('post created sucessfully');\r\n    });\r\n\r\n    it('Should create a comment for the post with id 2', async () => {\r\n      const comment = { body: 'boom', postId: 2 };\r\n      const response = await request(app)\r\n        .post('/comments')\r\n        .send(comment)\r\n        .set('Authorization', 'Bearer ' + token)\r\n        .expect('Content-Type', /json/);\r\n      expect(response.status).eq(201);\r\n      expect(response.body.message).eq('Comment created');\r\n      expect(response.body.comment.body).eq('boom');\r\n    });\r\n\r\n    it(\"Should give an error when trying to create comment for a post that doesn't exists\", async () => {\r\n      const comment = { body: 'boom', postId: 20 };\r\n      const response = await request(app)\r\n        .post('/comments')\r\n        .send(comment)\r\n        .set('Authorization', 'Bearer ' + token)\r\n        .expect('Content-Type', /json/);\r\n      expect(response.status).eq(404);\r\n      expect(response.body.error).eq(\r\n        \"The post 20 doesn't exists, to leave a comment on it\"\r\n      );\r\n    });\r\n\r\n    it('Should give an error when creating comment with invalid body', async () => {\r\n      const comment = { body: '', postId: 2 };\r\n      const response = await request(app)\r\n        .post('/comments')\r\n        .send(comment)\r\n        .set('Authorization', 'Bearer ' + token)\r\n        .expect('Content-Type', /json/);\r\n      expect(response.status).eq(422);\r\n      expect(response.body.errors.msg).eq('Invalid comment body');\r\n    });\r\n\r\n    it('Should forbid creating comment without jwt', async () => {\r\n      const comment = { body: 'boom', postId: 2 };\r\n      const response = await request(app)\r\n        .post('/comments')\r\n        .send(comment)\r\n        .expect('Content-Type', /json/);\r\n      expect(response.status).eq(403);\r\n      expect(response.body.error).eq('No token was provided');\r\n    });\r\n  });\r\n\r\n  describe('PATCH /comments/:commentId', () => {\r\n    it('Should update comment width id 1 ', async () => {\r\n      const response = await request(app)\r\n        .patch('/comments/1')\r\n        .send({ body: 'baam' })\r\n        .set('Authorization', 'Bearer ' + token)\r\n        .expect('Content-Type', /json/);\r\n      expect(response.status).eq(200);\r\n      expect(response.body.message).eq('Comment is successfully edited');\r\n    });\r\n\r\n    it('Should give an error when updating comment with invalid body', async () => {\r\n      const response = await request(app)\r\n        .patch('/comments/1')\r\n        .send({ body: '' })\r\n        .set('Authorization', 'Bearer ' + token)\r\n        .expect('Content-Type', /json/);\r\n      expect(response.status).eq(422);\r\n      expect(response.body.errors.msg).eq('Invalid comment body');\r\n    });\r\n\r\n    it('Should forbid creating comment without jwt', async () => {\r\n      const response = await request(app)\r\n        .patch('/comments/1')\r\n        .send({ body: 'boom no jwt' })\r\n        .expect('Content-Type', /json/);\r\n      expect(response.status).eq(403);\r\n      expect(response.body.error).eq('No token was provided');\r\n    });\r\n  });\r\n\r\n  describe('DELETE /comments/:commentId', () => {\r\n    it('Should forbid deleting comment without jwt', async () => {\r\n      const response = await request(app)\r\n        .delete('/comments/1')\r\n        .expect('Content-Type', /json/);\r\n      expect(response.status).eq(403);\r\n      expect(response.body.error).eq('No token was provided');\r\n    });\r\n\r\n    it('Should delete comment width id 1 ', async () => {\r\n      const response = await request(app)\r\n        .delete('/comments/1')\r\n        .set('Authorization', 'Bearer ' + token);\r\n      expect(response.status).eq(204);\r\n    });\r\n  });\r\n});\r\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"3610e2e489acb7b73b777dd8c0c71905a299b0e8","contentHash":"9411f9e31b997d148af835a7199407e32e26e4379d31b4df5e72d5484b8ab6dc"},"C:\\Users\\Administrator\\Desktop\\Full-Stack Projects\\Small-Blog\\API\\src\\test\\handler\\4-refreshToken.spec.ts":{"path":"C:\\Users\\Administrator\\Desktop\\Full-Stack Projects\\Small-Blog\\API\\src\\test\\handler\\4-refreshToken.spec.ts","statementMap":{"0":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"1":{"start":{"line":3,"column":28},"end":{"line":3,"column":110}},"2":{"start":{"line":3,"column":91},"end":{"line":3,"column":106}},"3":{"start":{"line":4,"column":4},"end":{"line":9,"column":7}},"4":{"start":{"line":5,"column":36},"end":{"line":5,"column":97}},"5":{"start":{"line":5,"column":42},"end":{"line":5,"column":70}},"6":{"start":{"line":5,"column":85},"end":{"line":5,"column":95}},"7":{"start":{"line":6,"column":35},"end":{"line":6,"column":100}},"8":{"start":{"line":6,"column":41},"end":{"line":6,"column":73}},"9":{"start":{"line":6,"column":88},"end":{"line":6,"column":98}},"10":{"start":{"line":7,"column":32},"end":{"line":7,"column":116}},"11":{"start":{"line":8,"column":8},"end":{"line":8,"column":78}},"12":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"13":{"start":{"line":12,"column":4},"end":{"line":12,"column":62}},"14":{"start":{"line":14,"column":0},"end":{"line":14,"column":62}},"15":{"start":{"line":15,"column":15},"end":{"line":15,"column":30}},"16":{"start":{"line":16,"column":20},"end":{"line":16,"column":57}},"17":{"start":{"line":17,"column":17},"end":{"line":17,"column":57}},"18":{"start":{"line":18,"column":0},"end":{"line":37,"column":3}},"19":{"start":{"line":19,"column":4},"end":{"line":27,"column":7}},"20":{"start":{"line":20,"column":8},"end":{"line":26,"column":12}},"21":{"start":{"line":20,"column":70},"end":{"line":26,"column":10}},"22":{"start":{"line":21,"column":29},"end":{"line":23,"column":47}},"23":{"start":{"line":24,"column":12},"end":{"line":24,"column":56}},"24":{"start":{"line":25,"column":12},"end":{"line":25,"column":118}},"25":{"start":{"line":28,"column":4},"end":{"line":36,"column":7}},"26":{"start":{"line":29,"column":8},"end":{"line":35,"column":12}},"27":{"start":{"line":29,"column":77},"end":{"line":35,"column":10}},"28":{"start":{"line":30,"column":29},"end":{"line":32,"column":47}},"29":{"start":{"line":33,"column":12},"end":{"line":33,"column":56}},"30":{"start":{"line":34,"column":12},"end":{"line":34,"column":117}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":44},"end":{"line":2,"column":45}},"loc":{"start":{"line":2,"column":89},"end":{"line":10,"column":1}},"line":2},"1":{"name":"adopt","decl":{"start":{"line":3,"column":13},"end":{"line":3,"column":18}},"loc":{"start":{"line":3,"column":26},"end":{"line":3,"column":112}},"line":3},"2":{"name":"(anonymous_2)","decl":{"start":{"line":3,"column":70},"end":{"line":3,"column":71}},"loc":{"start":{"line":3,"column":89},"end":{"line":3,"column":108}},"line":3},"3":{"name":"(anonymous_3)","decl":{"start":{"line":4,"column":36},"end":{"line":4,"column":37}},"loc":{"start":{"line":4,"column":63},"end":{"line":9,"column":5}},"line":4},"4":{"name":"fulfilled","decl":{"start":{"line":5,"column":17},"end":{"line":5,"column":26}},"loc":{"start":{"line":5,"column":34},"end":{"line":5,"column":99}},"line":5},"5":{"name":"rejected","decl":{"start":{"line":6,"column":17},"end":{"line":6,"column":25}},"loc":{"start":{"line":6,"column":33},"end":{"line":6,"column":102}},"line":6},"6":{"name":"step","decl":{"start":{"line":7,"column":17},"end":{"line":7,"column":21}},"loc":{"start":{"line":7,"column":30},"end":{"line":7,"column":118}},"line":7},"7":{"name":"(anonymous_7)","decl":{"start":{"line":11,"column":56},"end":{"line":11,"column":57}},"loc":{"start":{"line":11,"column":71},"end":{"line":13,"column":1}},"line":11},"8":{"name":"(anonymous_8)","decl":{"start":{"line":18,"column":33},"end":{"line":18,"column":34}},"loc":{"start":{"line":18,"column":39},"end":{"line":37,"column":1}},"line":18},"9":{"name":"(anonymous_9)","decl":{"start":{"line":19,"column":35},"end":{"line":19,"column":36}},"loc":{"start":{"line":19,"column":41},"end":{"line":27,"column":5}},"line":19},"10":{"name":"(anonymous_10)","decl":{"start":{"line":20,"column":64},"end":{"line":20,"column":65}},"loc":{"start":{"line":20,"column":70},"end":{"line":26,"column":10}},"line":20},"11":{"name":"(anonymous_11)","decl":{"start":{"line":20,"column":104},"end":{"line":20,"column":105}},"loc":{"start":{"line":20,"column":117},"end":{"line":26,"column":9}},"line":20},"12":{"name":"(anonymous_12)","decl":{"start":{"line":28,"column":28},"end":{"line":28,"column":29}},"loc":{"start":{"line":28,"column":34},"end":{"line":36,"column":5}},"line":28},"13":{"name":"(anonymous_13)","decl":{"start":{"line":29,"column":71},"end":{"line":29,"column":72}},"loc":{"start":{"line":29,"column":77},"end":{"line":35,"column":10}},"line":29},"14":{"name":"(anonymous_14)","decl":{"start":{"line":29,"column":111},"end":{"line":29,"column":112}},"loc":{"start":{"line":29,"column":124},"end":{"line":35,"column":9}},"line":29}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":17},"end":{"line":2,"column":21}},{"start":{"line":2,"column":25},"end":{"line":2,"column":39}},{"start":{"line":2,"column":44},"end":{"line":10,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":35},"end":{"line":3,"column":109}},"type":"cond-expr","locations":[{"start":{"line":3,"column":56},"end":{"line":3,"column":61}},{"start":{"line":3,"column":64},"end":{"line":3,"column":109}}],"line":3},"2":{"loc":{"start":{"line":4,"column":16},"end":{"line":4,"column":34}},"type":"binary-expr","locations":[{"start":{"line":4,"column":16},"end":{"line":4,"column":17}},{"start":{"line":4,"column":22},"end":{"line":4,"column":33}}],"line":4},"3":{"loc":{"start":{"line":7,"column":32},"end":{"line":7,"column":115}},"type":"cond-expr","locations":[{"start":{"line":7,"column":46},"end":{"line":7,"column":67}},{"start":{"line":7,"column":70},"end":{"line":7,"column":115}}],"line":7},"4":{"loc":{"start":{"line":8,"column":51},"end":{"line":8,"column":67}},"type":"binary-expr","locations":[{"start":{"line":8,"column":51},"end":{"line":8,"column":61}},{"start":{"line":8,"column":65},"end":{"line":8,"column":67}}],"line":8},"5":{"loc":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"type":"binary-expr","locations":[{"start":{"line":11,"column":23},"end":{"line":11,"column":27}},{"start":{"line":11,"column":31},"end":{"line":11,"column":51}},{"start":{"line":11,"column":56},"end":{"line":13,"column":1}}],"line":11},"6":{"loc":{"start":{"line":12,"column":11},"end":{"line":12,"column":61}},"type":"cond-expr","locations":[{"start":{"line":12,"column":37},"end":{"line":12,"column":40}},{"start":{"line":12,"column":43},"end":{"line":12,"column":61}}],"line":12},"7":{"loc":{"start":{"line":12,"column":12},"end":{"line":12,"column":33}},"type":"binary-expr","locations":[{"start":{"line":12,"column":12},"end":{"line":12,"column":15}},{"start":{"line":12,"column":19},"end":{"line":12,"column":33}}],"line":12}},"s":{"0":1,"1":2,"2":2,"3":2,"4":2,"5":2,"6":0,"7":0,"8":0,"9":0,"10":4,"11":2,"12":1,"13":2,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1},"f":{"0":2,"1":2,"2":2,"3":2,"4":2,"5":0,"6":4,"7":2,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1},"b":{"0":[1,1,1],"1":[0,2],"2":[2,2],"3":[2,2],"4":[2,2],"5":[1,1,1],"6":[1,1],"7":[2,2]},"inputSourceMap":{"version":3,"file":"C:/Users/Administrator/Desktop/Full-Stack Projects/Small-Blog/API/src/test/handler/4-refreshToken.spec.ts","sources":["C:/Users/Administrator/Desktop/Full-Stack Projects/Small-Blog/API/src/test/handler/4-refreshToken.spec.ts"],"names":[],"mappings":";;;;;;;;;;;;;;AAAA,+BAA8B;AAC9B,0DAAgC;AAChC,0DAA+B;AAE/B,QAAQ,CAAC,sBAAsB,EAAE,GAAG,EAAE;IACpC,QAAQ,CAAC,oBAAoB,EAAE,GAAG,EAAE;QAClC,EAAE,CAAC,mDAAmD,EAAE,GAAS,EAAE;YACjE,MAAM,QAAQ,GAAG,MAAM,IAAA,mBAAO,EAAC,gBAAG,CAAC;iBAChC,GAAG,CAAC,gBAAgB,CAAC;iBACrB,MAAM,CAAC,cAAc,EAAE,MAAM,CAAC,CAAC;YAClC,IAAA,aAAM,EAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;YAChC,IAAA,aAAM,EAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,CAC5B,6DAA6D,CAC9D,CAAC;QACJ,CAAC,CAAA,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,aAAa,EAAE,GAAG,EAAE;QAC3B,EAAE,CAAC,0DAA0D,EAAE,GAAS,EAAE;YACxE,MAAM,QAAQ,GAAG,MAAM,IAAA,mBAAO,EAAC,gBAAG,CAAC;iBAChC,GAAG,CAAC,SAAS,CAAC;iBACd,MAAM,CAAC,cAAc,EAAE,MAAM,CAAC,CAAC;YAClC,IAAA,aAAM,EAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;YAChC,IAAA,aAAM,EAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,CAC5B,4DAA4D,CAC7D,CAAC;QACJ,CAAC,CAAA,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["import { expect } from 'chai';\r\nimport request from 'supertest';\r\nimport app from '../../server';\r\n\r\ndescribe('RefreshToken handler', () => {\r\n  describe('GET /token/refresh', () => {\r\n    it('Should give an error if no refreshToken in cookie', async () => {\r\n      const response = await request(app)\r\n        .get('/token/refresh')\r\n        .expect('Content-Type', /json/);\r\n      expect(response.status).eq(401);\r\n      expect(response.body.error).eq(\r\n        'You are not authorized to get such info, please login first'\r\n      );\r\n    });\r\n  });\r\n\r\n  describe('GET /logout', () => {\r\n    it('Should give an error no refreshToken in cookie to remove', async () => {\r\n      const response = await request(app)\r\n        .get('/logout')\r\n        .expect('Content-Type', /json/);\r\n      expect(response.status).eq(403);\r\n      expect(response.body.error).eq(\r\n        'You are not allowed do such an action, no token available.'\r\n      );\r\n    });\r\n  });\r\n});\r\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"e4fc17306c1648615af48f1ba811b8e606bd6c18","contentHash":"c378be656cb8b91b0a76f17fa50e8da430ff2c13ad6b2321f2a388295907d9c8"},"C:\\Users\\Administrator\\Desktop\\Full-Stack Projects\\Small-Blog\\API\\src\\test\\handler\\5-oauth2.spec.ts":{"path":"C:\\Users\\Administrator\\Desktop\\Full-Stack Projects\\Small-Blog\\API\\src\\test\\handler\\5-oauth2.spec.ts","statementMap":{"0":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"1":{"start":{"line":3,"column":28},"end":{"line":3,"column":110}},"2":{"start":{"line":3,"column":91},"end":{"line":3,"column":106}},"3":{"start":{"line":4,"column":4},"end":{"line":9,"column":7}},"4":{"start":{"line":5,"column":36},"end":{"line":5,"column":97}},"5":{"start":{"line":5,"column":42},"end":{"line":5,"column":70}},"6":{"start":{"line":5,"column":85},"end":{"line":5,"column":95}},"7":{"start":{"line":6,"column":35},"end":{"line":6,"column":100}},"8":{"start":{"line":6,"column":41},"end":{"line":6,"column":73}},"9":{"start":{"line":6,"column":88},"end":{"line":6,"column":98}},"10":{"start":{"line":7,"column":32},"end":{"line":7,"column":116}},"11":{"start":{"line":8,"column":8},"end":{"line":8,"column":78}},"12":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"13":{"start":{"line":12,"column":4},"end":{"line":12,"column":62}},"14":{"start":{"line":14,"column":0},"end":{"line":14,"column":62}},"15":{"start":{"line":15,"column":15},"end":{"line":15,"column":30}},"16":{"start":{"line":16,"column":20},"end":{"line":16,"column":57}},"17":{"start":{"line":17,"column":17},"end":{"line":17,"column":57}},"18":{"start":{"line":18,"column":0},"end":{"line":25,"column":3}},"19":{"start":{"line":19,"column":4},"end":{"line":24,"column":8}},"20":{"start":{"line":19,"column":67},"end":{"line":24,"column":6}},"21":{"start":{"line":20,"column":25},"end":{"line":22,"column":43}},"22":{"start":{"line":23,"column":8},"end":{"line":23,"column":52}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":44},"end":{"line":2,"column":45}},"loc":{"start":{"line":2,"column":89},"end":{"line":10,"column":1}},"line":2},"1":{"name":"adopt","decl":{"start":{"line":3,"column":13},"end":{"line":3,"column":18}},"loc":{"start":{"line":3,"column":26},"end":{"line":3,"column":112}},"line":3},"2":{"name":"(anonymous_2)","decl":{"start":{"line":3,"column":70},"end":{"line":3,"column":71}},"loc":{"start":{"line":3,"column":89},"end":{"line":3,"column":108}},"line":3},"3":{"name":"(anonymous_3)","decl":{"start":{"line":4,"column":36},"end":{"line":4,"column":37}},"loc":{"start":{"line":4,"column":63},"end":{"line":9,"column":5}},"line":4},"4":{"name":"fulfilled","decl":{"start":{"line":5,"column":17},"end":{"line":5,"column":26}},"loc":{"start":{"line":5,"column":34},"end":{"line":5,"column":99}},"line":5},"5":{"name":"rejected","decl":{"start":{"line":6,"column":17},"end":{"line":6,"column":25}},"loc":{"start":{"line":6,"column":33},"end":{"line":6,"column":102}},"line":6},"6":{"name":"step","decl":{"start":{"line":7,"column":17},"end":{"line":7,"column":21}},"loc":{"start":{"line":7,"column":30},"end":{"line":7,"column":118}},"line":7},"7":{"name":"(anonymous_7)","decl":{"start":{"line":11,"column":56},"end":{"line":11,"column":57}},"loc":{"start":{"line":11,"column":71},"end":{"line":13,"column":1}},"line":11},"8":{"name":"(anonymous_8)","decl":{"start":{"line":18,"column":55},"end":{"line":18,"column":56}},"loc":{"start":{"line":18,"column":61},"end":{"line":25,"column":1}},"line":18},"9":{"name":"(anonymous_9)","decl":{"start":{"line":19,"column":61},"end":{"line":19,"column":62}},"loc":{"start":{"line":19,"column":67},"end":{"line":24,"column":6}},"line":19},"10":{"name":"(anonymous_10)","decl":{"start":{"line":19,"column":101},"end":{"line":19,"column":102}},"loc":{"start":{"line":19,"column":114},"end":{"line":24,"column":5}},"line":19}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":17},"end":{"line":2,"column":21}},{"start":{"line":2,"column":25},"end":{"line":2,"column":39}},{"start":{"line":2,"column":44},"end":{"line":10,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":35},"end":{"line":3,"column":109}},"type":"cond-expr","locations":[{"start":{"line":3,"column":56},"end":{"line":3,"column":61}},{"start":{"line":3,"column":64},"end":{"line":3,"column":109}}],"line":3},"2":{"loc":{"start":{"line":4,"column":16},"end":{"line":4,"column":34}},"type":"binary-expr","locations":[{"start":{"line":4,"column":16},"end":{"line":4,"column":17}},{"start":{"line":4,"column":22},"end":{"line":4,"column":33}}],"line":4},"3":{"loc":{"start":{"line":7,"column":32},"end":{"line":7,"column":115}},"type":"cond-expr","locations":[{"start":{"line":7,"column":46},"end":{"line":7,"column":67}},{"start":{"line":7,"column":70},"end":{"line":7,"column":115}}],"line":7},"4":{"loc":{"start":{"line":8,"column":51},"end":{"line":8,"column":67}},"type":"binary-expr","locations":[{"start":{"line":8,"column":51},"end":{"line":8,"column":61}},{"start":{"line":8,"column":65},"end":{"line":8,"column":67}}],"line":8},"5":{"loc":{"start":{"line":11,"column":22},"end":{"line":13,"column":1}},"type":"binary-expr","locations":[{"start":{"line":11,"column":23},"end":{"line":11,"column":27}},{"start":{"line":11,"column":31},"end":{"line":11,"column":51}},{"start":{"line":11,"column":56},"end":{"line":13,"column":1}}],"line":11},"6":{"loc":{"start":{"line":12,"column":11},"end":{"line":12,"column":61}},"type":"cond-expr","locations":[{"start":{"line":12,"column":37},"end":{"line":12,"column":40}},{"start":{"line":12,"column":43},"end":{"line":12,"column":61}}],"line":12},"7":{"loc":{"start":{"line":12,"column":12},"end":{"line":12,"column":33}},"type":"binary-expr","locations":[{"start":{"line":12,"column":12},"end":{"line":12,"column":15}},{"start":{"line":12,"column":19},"end":{"line":12,"column":33}}],"line":12}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":0,"9":0,"10":2,"11":1,"12":1,"13":2,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1},"f":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":0,"6":2,"7":2,"8":1,"9":1,"10":1},"b":{"0":[1,1,1],"1":[0,1],"2":[1,1],"3":[1,1],"4":[1,1],"5":[1,1,1],"6":[1,1],"7":[2,2]},"inputSourceMap":{"version":3,"file":"C:/Users/Administrator/Desktop/Full-Stack Projects/Small-Blog/API/src/test/handler/5-oauth2.spec.ts","sources":["C:/Users/Administrator/Desktop/Full-Stack Projects/Small-Blog/API/src/test/handler/5-oauth2.spec.ts"],"names":[],"mappings":";;;;;;;;;;;;;;AAAA,+BAA8B;AAC9B,0DAAgC;AAChC,0DAA+B;AAE/B,QAAQ,CAAC,4CAA4C,EAAE,GAAG,EAAE;IAC1D,EAAE,CAAC,oDAAoD,EAAE,GAAS,EAAE;QAClE,MAAM,QAAQ,GAAG,MAAM,IAAA,mBAAO,EAAC,gBAAG,CAAC;aAChC,IAAI,CAAC,sBAAsB,CAAC;aAC5B,MAAM,CAAC,cAAc,EAAE,MAAM,CAAC,CAAC;QAClC,IAAA,aAAM,EAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;IAClC,CAAC,CAAA,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["import { expect } from 'chai';\r\nimport request from 'supertest';\r\nimport app from '../../server';\r\n\r\ndescribe('Oauth2 handler => GET /users/oauth2/google', () => {\r\n  it('Should throw an error if no code is passed in body', async () => {\r\n    const response = await request(app)\r\n      .post('/users/oauth2/google')\r\n      .expect('Content-Type', /text/);\r\n    expect(response.status).eq(500);\r\n  });\r\n});\r\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"b49a3da10fd2eea226e59d52e0216a969fcd600f","contentHash":"52b94a5f223cd01facb0200b5bd390e0d232d94d80e9114662a27bf6753e87b5"},"C:\\Users\\Administrator\\Desktop\\Full-Stack Projects\\Small-Blog\\API\\src\\test\\model\\user.spec.ts":{"path":"C:\\Users\\Administrator\\Desktop\\Full-Stack Projects\\Small-Blog\\API\\src\\test\\model\\user.spec.ts","statementMap":{"0":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"1":{"start":{"line":3,"column":28},"end":{"line":3,"column":110}},"2":{"start":{"line":3,"column":91},"end":{"line":3,"column":106}},"3":{"start":{"line":4,"column":4},"end":{"line":9,"column":7}},"4":{"start":{"line":5,"column":36},"end":{"line":5,"column":97}},"5":{"start":{"line":5,"column":42},"end":{"line":5,"column":70}},"6":{"start":{"line":5,"column":85},"end":{"line":5,"column":95}},"7":{"start":{"line":6,"column":35},"end":{"line":6,"column":100}},"8":{"start":{"line":6,"column":41},"end":{"line":6,"column":73}},"9":{"start":{"line":6,"column":88},"end":{"line":6,"column":98}},"10":{"start":{"line":7,"column":32},"end":{"line":7,"column":116}},"11":{"start":{"line":8,"column":8},"end":{"line":8,"column":78}},"12":{"start":{"line":11,"column":0},"end":{"line":11,"column":62}},"13":{"start":{"line":12,"column":15},"end":{"line":12,"column":44}},"14":{"start":{"line":13,"column":15},"end":{"line":13,"column":30}},"15":{"start":{"line":14,"column":14},"end":{"line":14,"column":31}},"16":{"start":{"line":15,"column":0},"end":{"line":47,"column":3}},"17":{"start":{"line":16,"column":4},"end":{"line":20,"column":8}},"18":{"start":{"line":16,"column":46},"end":{"line":20,"column":6}},"19":{"start":{"line":17,"column":22},"end":{"line":17,"column":41}},"20":{"start":{"line":18,"column":8},"end":{"line":18,"column":54}},"21":{"start":{"line":19,"column":8},"end":{"line":19,"column":87}},"22":{"start":{"line":21,"column":4},"end":{"line":24,"column":8}},"23":{"start":{"line":21,"column":45},"end":{"line":24,"column":6}},"24":{"start":{"line":22,"column":21},"end":{"line":22,"column":47}},"25":{"start":{"line":23,"column":8},"end":{"line":23,"column":65}},"26":{"start":{"line":25,"column":4},"end":{"line":29,"column":8}},"27":{"start":{"line":25,"column":46},"end":{"line":29,"column":6}},"28":{"start":{"line":26,"column":21},"end":{"line":26,"column":45}},"29":{"start":{"line":27,"column":8},"end":{"line":27,"column":110}},"30":{"start":{"line":28,"column":8},"end":{"line":28,"column":54}},"31":{"start":{"line":30,"column":4},"end":{"line":42,"column":8}},"32":{"start":{"line":30,"column":74},"end":{"line":42,"column":6}},"33":{"start":{"line":31,"column":21},"end":{"line":35,"column":9}},"34":{"start":{"line":36,"column":28},"end":{"line":36,"column":52}},"35":{"start":{"line":37,"column":8},"end":{"line":41,"column":11}},"36":{"start":{"line":43,"column":4},"end":{"line":46,"column":8}},"37":{"start":{"line":43,"column":45},"end":{"line":46,"column":6}},"38":{"start":{"line":44,"column":21},"end":{"line":44,"column":44}},"39":{"start":{"line":45,"column":8},"end":{"line":45,"column":45}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":44},"end":{"line":2,"column":45}},"loc":{"start":{"line":2,"column":89},"end":{"line":10,"column":1}},"line":2},"1":{"name":"adopt","decl":{"start":{"line":3,"column":13},"end":{"line":3,"column":18}},"loc":{"start":{"line":3,"column":26},"end":{"line":3,"column":112}},"line":3},"2":{"name":"(anonymous_2)","decl":{"start":{"line":3,"column":70},"end":{"line":3,"column":71}},"loc":{"start":{"line":3,"column":89},"end":{"line":3,"column":108}},"line":3},"3":{"name":"(anonymous_3)","decl":{"start":{"line":4,"column":36},"end":{"line":4,"column":37}},"loc":{"start":{"line":4,"column":63},"end":{"line":9,"column":5}},"line":4},"4":{"name":"fulfilled","decl":{"start":{"line":5,"column":17},"end":{"line":5,"column":26}},"loc":{"start":{"line":5,"column":34},"end":{"line":5,"column":99}},"line":5},"5":{"name":"rejected","decl":{"start":{"line":6,"column":17},"end":{"line":6,"column":25}},"loc":{"start":{"line":6,"column":33},"end":{"line":6,"column":102}},"line":6},"6":{"name":"step","decl":{"start":{"line":7,"column":17},"end":{"line":7,"column":21}},"loc":{"start":{"line":7,"column":30},"end":{"line":7,"column":118}},"line":7},"7":{"name":"(anonymous_7)","decl":{"start":{"line":15,"column":23},"end":{"line":15,"column":24}},"loc":{"start":{"line":15,"column":29},"end":{"line":47,"column":1}},"line":15},"8":{"name":"(anonymous_8)","decl":{"start":{"line":16,"column":40},"end":{"line":16,"column":41}},"loc":{"start":{"line":16,"column":46},"end":{"line":20,"column":6}},"line":16},"9":{"name":"(anonymous_9)","decl":{"start":{"line":16,"column":80},"end":{"line":16,"column":81}},"loc":{"start":{"line":16,"column":93},"end":{"line":20,"column":5}},"line":16},"10":{"name":"(anonymous_10)","decl":{"start":{"line":21,"column":39},"end":{"line":21,"column":40}},"loc":{"start":{"line":21,"column":45},"end":{"line":24,"column":6}},"line":21},"11":{"name":"(anonymous_11)","decl":{"start":{"line":21,"column":79},"end":{"line":21,"column":80}},"loc":{"start":{"line":21,"column":92},"end":{"line":24,"column":5}},"line":21},"12":{"name":"(anonymous_12)","decl":{"start":{"line":25,"column":40},"end":{"line":25,"column":41}},"loc":{"start":{"line":25,"column":46},"end":{"line":29,"column":6}},"line":25},"13":{"name":"(anonymous_13)","decl":{"start":{"line":25,"column":80},"end":{"line":25,"column":81}},"loc":{"start":{"line":25,"column":93},"end":{"line":29,"column":5}},"line":25},"14":{"name":"(anonymous_14)","decl":{"start":{"line":30,"column":68},"end":{"line":30,"column":69}},"loc":{"start":{"line":30,"column":74},"end":{"line":42,"column":6}},"line":30},"15":{"name":"(anonymous_15)","decl":{"start":{"line":30,"column":108},"end":{"line":30,"column":109}},"loc":{"start":{"line":30,"column":121},"end":{"line":42,"column":5}},"line":30},"16":{"name":"(anonymous_16)","decl":{"start":{"line":43,"column":39},"end":{"line":43,"column":40}},"loc":{"start":{"line":43,"column":45},"end":{"line":46,"column":6}},"line":43},"17":{"name":"(anonymous_17)","decl":{"start":{"line":43,"column":79},"end":{"line":43,"column":80}},"loc":{"start":{"line":43,"column":92},"end":{"line":46,"column":5}},"line":43}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":17},"end":{"line":2,"column":21}},{"start":{"line":2,"column":25},"end":{"line":2,"column":39}},{"start":{"line":2,"column":44},"end":{"line":10,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":35},"end":{"line":3,"column":109}},"type":"cond-expr","locations":[{"start":{"line":3,"column":56},"end":{"line":3,"column":61}},{"start":{"line":3,"column":64},"end":{"line":3,"column":109}}],"line":3},"2":{"loc":{"start":{"line":4,"column":16},"end":{"line":4,"column":34}},"type":"binary-expr","locations":[{"start":{"line":4,"column":16},"end":{"line":4,"column":17}},{"start":{"line":4,"column":22},"end":{"line":4,"column":33}}],"line":4},"3":{"loc":{"start":{"line":7,"column":32},"end":{"line":7,"column":115}},"type":"cond-expr","locations":[{"start":{"line":7,"column":46},"end":{"line":7,"column":67}},{"start":{"line":7,"column":70},"end":{"line":7,"column":115}}],"line":7},"4":{"loc":{"start":{"line":8,"column":51},"end":{"line":8,"column":67}},"type":"binary-expr","locations":[{"start":{"line":8,"column":51},"end":{"line":8,"column":61}},{"start":{"line":8,"column":65},"end":{"line":8,"column":67}}],"line":8}},"s":{"0":1,"1":5,"2":0,"3":5,"4":5,"5":5,"6":0,"7":0,"8":0,"9":0,"10":10,"11":5,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":1},"f":{"0":5,"1":5,"2":0,"3":5,"4":5,"5":0,"6":10,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1},"b":{"0":[1,1,1],"1":[5,0],"2":[5,5],"3":[5,5],"4":[5,5]},"inputSourceMap":{"version":3,"file":"C:/Users/Administrator/Desktop/Full-Stack Projects/Small-Blog/API/src/test/model/user.spec.ts","sources":["C:/Users/Administrator/Desktop/Full-Stack Projects/Small-Blog/API/src/test/model/user.spec.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA,6CAA0C;AAC1C,+BAA8B;AAE9B,MAAM,KAAK,GAAG,IAAI,WAAI,EAAE,CAAC;AAEzB,QAAQ,CAAC,YAAY,EAAE,GAAG,EAAE;IAC1B,EAAE,CAAC,+BAA+B,EAAE,GAAS,EAAE;QAC7C,MAAM,KAAK,GAAG,MAAM,KAAK,CAAC,KAAK,EAAE,CAAC;QAClC,IAAA,aAAM,EAAC,KAAK,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;QAClC,IAAA,aAAM,EAAC,KAAK,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,KAAK,EAAE,eAAe,EAAE,IAAI,EAAE,QAAQ,EAAE,CAAC,CAAC,CAAC;IACrE,CAAC,CAAA,CAAC,CAAC;IAEH,EAAE,CAAC,8BAA8B,EAAE,GAAS,EAAE;QAC5C,MAAM,IAAI,GAAG,MAAM,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QACxC,IAAA,aAAM,EAAC,IAAI,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;IAC/C,CAAC,CAAA,CAAC,CAAC;IAEH,EAAE,CAAC,+BAA+B,EAAE,GAAS,EAAE;QAC7C,MAAM,IAAI,GAAG,MAAM,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;QACtC,IAAA,aAAM,EAAC,IAAI,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,CACvB,OAAO,EACP,MAAM,EACN,cAAc,EACd,WAAW,EACX,IAAI,EACJ,UAAU,CACX,CAAC;QACF,IAAA,aAAM,EAAC,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,QAAQ,CAAC,CAAC;IACpC,CAAC,CAAA,CAAC,CAAC;IAEH,EAAE,CAAC,2DAA2D,EAAE,GAAS,EAAE;QACzE,MAAM,IAAI,GAAG;YACX,KAAK,EAAE,oBAAoB;YAC3B,QAAQ,EAAE,QAAQ;YAClB,IAAI,EAAE,SAAS;SAChB,CAAC;QACF,MAAM,WAAW,GAAG,MAAM,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QAC7C,IAAA,aAAM,EAAC,WAAW,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC;YACzB,KAAK,EAAE,oBAAoB;YAC3B,IAAI,EAAE,SAAS;YACf,EAAE,EAAE,CAAC;SACN,CAAC,CAAC;IACL,CAAC,CAAA,CAAC,CAAC;IAEH,EAAE,CAAC,8BAA8B,EAAE,GAAS,EAAE;QAC5C,MAAM,IAAI,GAAG,MAAM,KAAK,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;QACrC,IAAA,aAAM,EAAC,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IAC3B,CAAC,CAAA,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["import { User } from './../../model/user';\r\nimport { expect } from 'chai';\r\n\r\nconst store = new User();\r\n\r\ndescribe('User model', () => {\r\n  it('Should return all users in DB', async () => {\r\n    const users = await store.index();\r\n    expect(users).to.have.lengthOf(1);\r\n    expect(users).to.eql([{ email: 'test@test.com', name: 'Bassel' }]);\r\n  });\r\n\r\n  it('Should return a user by name', async () => {\r\n    const user = await store.show('Bassel');\r\n    expect(user).to.have.keys('author', 'posts');\r\n  });\r\n\r\n  it('Should return a user by it id', async () => {\r\n    const user = await store.getById('1');\r\n    expect(user).to.have.keys(\r\n      'email',\r\n      'name',\r\n      'refreshtoken',\r\n      'confirmed',\r\n      'id',\r\n      'password'\r\n    );\r\n    expect(user.name).to.eq('Bassel');\r\n  });\r\n\r\n  it('Should create new user in database with correct user info', async () => {\r\n    const user = {\r\n      email: 'bassel@example.com',\r\n      password: '000000',\r\n      name: 'example',\r\n    };\r\n    const createdUser = await store.create(user);\r\n    expect(createdUser).to.eql({\r\n      email: 'bassel@example.com',\r\n      name: 'example',\r\n      id: 2,\r\n    });\r\n  });\r\n\r\n  it('Should delete user with id 2', async () => {\r\n    const user = await store.delete('2');\r\n    expect(user.id).to.eq(2);\r\n  });\r\n});\r\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"2ca82cabf2ec6dfda8377e05119336d85dc6c196","contentHash":"c8843b8152efd536c3083b5e78d9c37be6fe77b214d67aa27c3a96b6b23f88d1"},"C:\\Users\\Administrator\\Desktop\\Full-Stack Projects\\Small-Blog\\API\\src\\test\\util\\date.spec.ts":{"path":"C:\\Users\\Administrator\\Desktop\\Full-Stack Projects\\Small-Blog\\API\\src\\test\\util\\date.spec.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":15},"end":{"line":6,"column":30}},"4":{"start":{"line":7,"column":15},"end":{"line":7,"column":58}},"5":{"start":{"line":8,"column":0},"end":{"line":13,"column":3}},"6":{"start":{"line":9,"column":4},"end":{"line":12,"column":7}},"7":{"start":{"line":10,"column":8},"end":{"line":10,"column":68}},"8":{"start":{"line":11,"column":8},"end":{"line":11,"column":82}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":8,"column":34},"end":{"line":8,"column":35}},"loc":{"start":{"line":8,"column":40},"end":{"line":13,"column":1}},"line":8},"2":{"name":"(anonymous_2)","decl":{"start":{"line":9,"column":58},"end":{"line":9,"column":59}},"loc":{"start":{"line":9,"column":64},"end":{"line":12,"column":5}},"line":9}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1},"f":{"0":1,"1":1,"2":1},"b":{"0":[1,1,1],"1":[1,0],"2":[1,1]},"inputSourceMap":{"version":3,"file":"C:/Users/Administrator/Desktop/Full-Stack Projects/Small-Blog/API/src/test/util/date.spec.ts","sources":["C:/Users/Administrator/Desktop/Full-Stack Projects/Small-Blog/API/src/test/util/date.spec.ts"],"names":[],"mappings":";;;;;AAAA,+BAA8B;AAC9B,2DAAyC;AAEzC,QAAQ,CAAC,uBAAuB,EAAE,GAAG,EAAE;IACrC,EAAE,CAAC,iDAAiD,EAAE,GAAG,EAAE;QACzD,IAAA,aAAM,EAAC,IAAA,cAAU,GAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC;QACvC,IAAA,aAAM,EAAC,IAAA,cAAU,GAAE,CAAC,CAAC,EAAE,CAAC,IAAI,IAAI,EAAE,CAAC,cAAc,EAAE,CAAC,CAAC;IACvD,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["import { expect } from 'chai';\r\nimport dateFormat from '../../util/date';\r\n\r\ndescribe('current date function', () => {\r\n  it('Should return the current date after its called', () => {\r\n    expect(dateFormat()).to.be.a('string');\r\n    expect(dateFormat()).eq(new Date().toLocaleString());\r\n  });\r\n});\r\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"31f7576b791ec6925c91979317055adc3f0055bf","contentHash":"be6e1772e1d6716a9d958f74b1454ce499631a69dba7551894296c9ec459d949"},"C:\\Users\\Administrator\\Desktop\\Full-Stack Projects\\Small-Blog\\API\\src\\util\\date.ts":{"path":"C:\\Users\\Administrator\\Desktop\\Full-Stack Projects\\Small-Blog\\API\\src\\util\\date.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":19},"end":{"line":5,"column":1}},"2":{"start":{"line":4,"column":4},"end":{"line":4,"column":49}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":29}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":3,"column":19},"end":{"line":3,"column":20}},"loc":{"start":{"line":3,"column":25},"end":{"line":5,"column":1}},"line":3}},"branchMap":{},"s":{"0":1,"1":1,"2":2,"3":1},"f":{"0":2},"b":{},"inputSourceMap":{"version":3,"file":"C:/Users/Administrator/Desktop/Full-Stack Projects/Small-Blog/API/src/util/date.ts","sources":["C:/Users/Administrator/Desktop/Full-Stack Projects/Small-Blog/API/src/util/date.ts"],"names":[],"mappings":";;AAAA,MAAM,UAAU,GAAG,GAAG,EAAE;IACtB,OAAO,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,cAAc,EAAE,CAAC;AAC/C,CAAC,CAAC;AAEF,kBAAe,UAAU,CAAC","sourcesContent":["const dateFormat = () => {\r\n  return new Date(Date.now()).toLocaleString();\r\n};\r\n\r\nexport default dateFormat;\r\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"cfb9f0322294aa4b895ca9ef7327cc3e8fa1f072","contentHash":"56ddeb9198d12834fe8db821dbd908123bcce71e5cc63d168d6bab11654ce6bc"}}